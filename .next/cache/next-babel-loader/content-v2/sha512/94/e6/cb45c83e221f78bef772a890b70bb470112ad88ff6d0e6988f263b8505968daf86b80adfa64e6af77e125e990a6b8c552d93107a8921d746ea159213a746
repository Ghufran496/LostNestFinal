{"ast":null,"code":"import { MongoClient } from \"mongodb\";\n\nconst {\n  ObjectId\n} = require(\"mongodb\");\n\nexport async function connectToDatabase() {\n  const client = await MongoClient.connect(\"mongodb+srv://ghufran:Allahis1@cluster0.psik2ae.mongodb.net/authSec14?retryWrites=true&w=majority\", {\n    useUnifiedTopology: true // Pass the useUnifiedTopology option here\n\n  });\n  return client;\n}\nexport async function getAllPosts() {\n  const client = await connectToDatabase();\n  const db = client.db();\n  const data = await db.collection(\"PostedItem\").find({}).toArray();\n  return data;\n}\nexport async function getPostsByEmail(email) {\n  //console.log(email);\n  const allPosts = await getAllPosts(); //console.log(allPosts);\n  // return allPosts.find((event) => event.posterEmail === email);\n\n  return allPosts.filter(event => event.posterEmail === email);\n}\nexport async function getPostDataById(id) {\n  const allPosts = await getAllPosts();\n  console.log(allPosts);\n  const postobjectId = new ObjectId(id);\n  console.log(postobjectId);\n  return allPosts.find(event => event._id === postobjectId);\n} // export async function getPostsByObjectId(objectId) {\n//   const allPosts = await getAllPosts();\n//   //console.log(allPosts); good\n//   console.log(objectId);\n//   const data2 = allPosts.find((item) => item._id.equals(objectId));\n//   console.log(data2);\n//   return data2;\n// }\n// import { ObjectId } from \"mongodb\";\n// export async function getPostsByObjectId(objectId) {\n//   const allPosts = await getAllPosts();\n//   const data2 = allPosts.find((item) => item._id.equals(objectId));\n//   console.log(data2);\n//   return data2;\n// }","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/lib/db.js"],"names":["MongoClient","ObjectId","require","connectToDatabase","client","connect","useUnifiedTopology","getAllPosts","db","data","collection","find","toArray","getPostsByEmail","email","allPosts","filter","event","posterEmail","getPostDataById","id","console","log","postobjectId","_id"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAeC,OAAO,CAAC,SAAD,CAA5B;;AAEA,OAAO,eAAeC,iBAAf,GAAmC;AACxC,QAAMC,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CACnB,mGADmB,EAEnB;AACEC,IAAAA,kBAAkB,EAAE,IADtB,CAC4B;;AAD5B,GAFmB,CAArB;AAOA,SAAOF,MAAP;AACD;AAED,OAAO,eAAeG,WAAf,GAA6B;AAClC,QAAMH,MAAM,GAAG,MAAMD,iBAAiB,EAAtC;AACA,QAAMK,EAAE,GAAGJ,MAAM,CAACI,EAAP,EAAX;AAEA,QAAMC,IAAI,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,YAAd,EAA4BC,IAA5B,CAAiC,EAAjC,EAAqCC,OAArC,EAAnB;AAEA,SAAOH,IAAP;AACD;AAED,OAAO,eAAeI,eAAf,CAA+BC,KAA/B,EAAsC;AAC3C;AACA,QAAMC,QAAQ,GAAG,MAAMR,WAAW,EAAlC,CAF2C,CAG3C;AACA;;AACA,SAAOQ,QAAQ,CAACC,MAAT,CAAiBC,KAAD,IAAWA,KAAK,CAACC,WAAN,KAAsBJ,KAAjD,CAAP;AACD;AACD,OAAO,eAAeK,eAAf,CAA+BC,EAA/B,EAAmC;AACxC,QAAML,QAAQ,GAAG,MAAMR,WAAW,EAAlC;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACA,QAAMQ,YAAY,GAAG,IAAItB,QAAJ,CAAamB,EAAb,CAArB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AAEA,SAAOR,QAAQ,CAACJ,IAAT,CAAeM,KAAD,IAAWA,KAAK,CAACO,GAAN,KAAcD,YAAvC,CAAP;AACD,C,CAED;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import { MongoClient } from \"mongodb\";\nconst { ObjectId } = require(\"mongodb\");\n\nexport async function connectToDatabase() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://ghufran:Allahis1@cluster0.psik2ae.mongodb.net/authSec14?retryWrites=true&w=majority\",\n    {\n      useUnifiedTopology: true, // Pass the useUnifiedTopology option here\n    }\n  );\n\n  return client;\n}\n\nexport async function getAllPosts() {\n  const client = await connectToDatabase();\n  const db = client.db();\n\n  const data = await db.collection(\"PostedItem\").find({}).toArray();\n\n  return data;\n}\n\nexport async function getPostsByEmail(email) {\n  //console.log(email);\n  const allPosts = await getAllPosts();\n  //console.log(allPosts);\n  // return allPosts.find((event) => event.posterEmail === email);\n  return allPosts.filter((event) => event.posterEmail === email);\n}\nexport async function getPostDataById(id) {\n  const allPosts = await getAllPosts();\n  console.log(allPosts);\n  const postobjectId = new ObjectId(id);\n  console.log(postobjectId);\n\n  return allPosts.find((event) => event._id === postobjectId);\n}\n\n// export async function getPostsByObjectId(objectId) {\n//   const allPosts = await getAllPosts();\n\n//   //console.log(allPosts); good\n//   console.log(objectId);\n//   const data2 = allPosts.find((item) => item._id.equals(objectId));\n//   console.log(data2);\n//   return data2;\n// }\n// import { ObjectId } from \"mongodb\";\n\n// export async function getPostsByObjectId(objectId) {\n//   const allPosts = await getAllPosts();\n\n//   const data2 = allPosts.find((item) => item._id.equals(objectId));\n//   console.log(data2);\n//   return data2;\n// }\n"]},"metadata":{},"sourceType":"module"}