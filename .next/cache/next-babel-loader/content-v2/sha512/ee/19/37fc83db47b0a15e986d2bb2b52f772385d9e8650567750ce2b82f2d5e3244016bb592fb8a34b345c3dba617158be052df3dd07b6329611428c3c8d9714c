{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"G:\\\\FYP\\\\LostNestfyp\\\\lostnestprj\\\\components\\\\answers\\\\answer.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport AnswerList from \"./answer-list\";\nimport classes from \"./answer.module.css\";\n\nfunction Answer(props) {\n  _s();\n\n  var postid = props.postid; //console.log(postid);\n\n  var _useState = useState(false),\n      showResponse = _useState[0],\n      setShowResponse = _useState[1];\n\n  var _useState2 = useState(false),\n      showLoadingContent = _useState2[0],\n      setLoadingContent = _useState2[1];\n\n  var _useState3 = useState([]),\n      response = _useState3[0],\n      setresponse = _useState3[1];\n\n  useEffect(function () {\n    //setLoadingContent(true);\n    if (showResponse) {\n      fetch(\"/api/answers/\" + postid).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return setresponse(data.responses);\n      });\n      setLoadingContent(false);\n    }\n  }, [showResponse, setLoadingContent]);\n\n  function toggleResponseHandler() {\n    setLoadingContent(true);\n    setShowResponse(function (prevStatus) {\n      return !prevStatus;\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.responses,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.btndiv,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleResponseHandler,\n        className: classes.button52,\n        children: [showResponse ? \"Hide\" : \"Show\", \" Responses\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), showLoadingContent && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No responses yet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 30\n    }, this), showResponse && /*#__PURE__*/_jsxDEV(AnswerList, {\n      ansitems: response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Answer, \"BbOgmyP67gNN0QdHBhtOnSCD/0w=\");\n\n_c = Answer;\nexport default Answer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Answer\");","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/components/answers/answer.js"],"names":["useEffect","useState","AnswerList","classes","Answer","props","postid","showResponse","setShowResponse","showLoadingContent","setLoadingContent","response","setresponse","fetch","then","json","data","responses","toggleResponseHandler","prevStatus","btndiv","button52"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAAA,MACbC,MADa,GACFD,KADE,CACbC,MADa,EAErB;;AAFqB,kBAGmBL,QAAQ,CAAC,KAAD,CAH3B;AAAA,MAGdM,YAHc;AAAA,MAGAC,eAHA;;AAAA,mBAI2BP,QAAQ,CAAC,KAAD,CAJnC;AAAA,MAIdQ,kBAJc;AAAA,MAIMC,iBAJN;;AAAA,mBAKWT,QAAQ,CAAC,EAAD,CALnB;AAAA,MAKdU,QALc;AAAA,MAKJC,WALI;;AAOrBZ,EAAAA,SAAS,CAAC,YAAM;AACd;AACA,QAAIO,YAAJ,EAAkB;AAChBM,MAAAA,KAAK,CAAC,kBAAkBP,MAAnB,CAAL,CACGQ,IADH,CACQ,UAACH,QAAD;AAAA,eAAcA,QAAQ,CAACI,IAAT,EAAd;AAAA,OADR,EAEGD,IAFH,CAEQ,UAACE,IAAD;AAAA,eAAUJ,WAAW,CAACI,IAAI,CAACC,SAAN,CAArB;AAAA,OAFR;AAGAP,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD;AACF,GARQ,EAQN,CAACH,YAAD,EAAeG,iBAAf,CARM,CAAT;;AAUA,WAASQ,qBAAT,GAAiC;AAC/BR,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAF,IAAAA,eAAe,CAAC,UAACW,UAAD;AAAA,aAAgB,CAACA,UAAjB;AAAA,KAAD,CAAf;AACD;;AAED,sBACE;AAAS,IAAA,SAAS,EAAEhB,OAAO,CAACc,SAA5B;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEd,OAAO,CAACiB,MAAxB;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAEF,qBAAjB;AAAwC,QAAA,SAAS,EAAEf,OAAO,CAACkB,QAA3D;AAAA,mBACGd,YAAY,GAAG,MAAH,GAAY,MAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAMGE,kBAAkB,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANzB,EAOGF,YAAY,iBAAI,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAEI;AAAtB;AAAA;AAAA;AAAA;AAAA,YAPnB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAjCQP,M;;KAAAA,M;AAmCT,eAAeA,MAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nimport AnswerList from \"./answer-list\";\r\nimport classes from \"./answer.module.css\";\r\n\r\nfunction Answer(props) {\r\n  const { postid } = props;\r\n  //console.log(postid);\r\n  const [showResponse, setShowResponse] = useState(false);\r\n  const [showLoadingContent, setLoadingContent] = useState(false);\r\n  const [response, setresponse] = useState([]);\r\n\r\n  useEffect(() => {\r\n    //setLoadingContent(true);\r\n    if (showResponse) {\r\n      fetch(\"/api/answers/\" + postid)\r\n        .then((response) => response.json())\r\n        .then((data) => setresponse(data.responses));\r\n      setLoadingContent(false);\r\n    }\r\n  }, [showResponse, setLoadingContent]);\r\n\r\n  function toggleResponseHandler() {\r\n    setLoadingContent(true);\r\n    setShowResponse((prevStatus) => !prevStatus);\r\n  }\r\n\r\n  return (\r\n    <section className={classes.responses}>\r\n      <div className={classes.btndiv}>\r\n        <button onClick={toggleResponseHandler} className={classes.button52}>\r\n          {showResponse ? \"Hide\" : \"Show\"} Responses\r\n        </button>\r\n      </div>\r\n      {showLoadingContent && <p>No responses yet!</p>}\r\n      {showResponse && <AnswerList ansitems={response} />}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Answer;\r\n"]},"metadata":{},"sourceType":"module"}