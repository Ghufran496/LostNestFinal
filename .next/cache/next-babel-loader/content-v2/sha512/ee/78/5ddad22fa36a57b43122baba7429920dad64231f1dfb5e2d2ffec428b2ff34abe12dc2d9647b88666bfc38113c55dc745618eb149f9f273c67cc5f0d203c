{"ast":null,"code":"import _regeneratorRuntime from \"G:/FYP/LostNestfyp/lostnestprj/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"G:/FYP/LostNestfyp/lostnestprj/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { MongoClient } from \"mongodb\";\nexport function connectToDatabase() {\n  return _connectToDatabase.apply(this, arguments);\n}\n\nfunction _connectToDatabase() {\n  _connectToDatabase = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var client;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return MongoClient.connect(\"mongodb+srv://ghufran:Allahis1@cluster0.psik2ae.mongodb.net/authSec14?retryWrites=true&w=majority\", {\n              useUnifiedTopology: true // Pass the useUnifiedTopology option here\n\n            });\n\n          case 2:\n            client = _context.sent;\n            return _context.abrupt(\"return\", client);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _connectToDatabase.apply(this, arguments);\n}\n\nexport function getAllPosts() {\n  return _getAllPosts.apply(this, arguments);\n}\n\nfunction _getAllPosts() {\n  _getAllPosts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var client, db, data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return connectToDatabase();\n\n          case 2:\n            client = _context2.sent;\n            db = client.db();\n            _context2.next = 6;\n            return db.collection(\"PostedItem\").find({}).toArray();\n\n          case 6:\n            data = _context2.sent;\n            return _context2.abrupt(\"return\", data);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getAllPosts.apply(this, arguments);\n}\n\nexport function getPostsByEmail(_x) {\n  return _getPostsByEmail.apply(this, arguments);\n}\n\nfunction _getPostsByEmail() {\n  _getPostsByEmail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(email) {\n    var allPosts;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return getAllPosts();\n\n          case 2:\n            allPosts = _context3.sent;\n            return _context3.abrupt(\"return\", allPosts.filter(function (event) {\n              return event.posterEmail === email;\n            }));\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getPostsByEmail.apply(this, arguments);\n}\n\nexport function getPostDataById(_x2) {\n  return _getPostDataById.apply(this, arguments);\n} // export async function getPostsByObjectId(objectId) {\n//   const allPosts = await getAllPosts();\n//   //console.log(allPosts); good\n//   console.log(objectId);\n//   const data2 = allPosts.find((item) => item._id.equals(objectId));\n//   console.log(data2);\n//   return data2;\n// }\n// import { ObjectId } from \"mongodb\";\n// export async function getPostsByObjectId(objectId) {\n//   const allPosts = await getAllPosts();\n//   const data2 = allPosts.find((item) => item._id.equals(objectId));\n//   console.log(data2);\n//   return data2;\n// }\n\nfunction _getPostDataById() {\n  _getPostDataById = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id) {\n    var allPosts;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return getAllPosts();\n\n          case 2:\n            allPosts = _context4.sent;\n            return _context4.abrupt(\"return\", allPosts.find(function (event) {\n              return event._id === id;\n            }));\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _getPostDataById.apply(this, arguments);\n}","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/lib/db.js"],"names":["MongoClient","connectToDatabase","connect","useUnifiedTopology","client","getAllPosts","db","collection","find","toArray","data","getPostsByEmail","email","allPosts","filter","event","posterEmail","getPostDataById","id","_id"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,gBAAsBC,iBAAtB;AAAA;AAAA;;;gFAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACgBD,WAAW,CAACE,OAAZ,CACnB,mGADmB,EAEnB;AACEC,cAAAA,kBAAkB,EAAE,IADtB,CAC4B;;AAD5B,aAFmB,CADhB;;AAAA;AACCC,YAAAA,MADD;AAAA,6CAQEA,MARF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAWP,gBAAsBC,WAAtB;AAAA;AAAA;;;0EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACgBJ,iBAAiB,EADjC;;AAAA;AACCG,YAAAA,MADD;AAECE,YAAAA,EAFD,GAEMF,MAAM,CAACE,EAAP,EAFN;AAAA;AAAA,mBAIcA,EAAE,CAACC,UAAH,CAAc,YAAd,EAA4BC,IAA5B,CAAiC,EAAjC,EAAqCC,OAArC,EAJd;;AAAA;AAICC,YAAAA,IAJD;AAAA,8CAMEA,IANF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AASP,gBAAsBC,eAAtB;AAAA;AAAA;;;8EAAO,kBAA+BC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEkBP,WAAW,EAF7B;;AAAA;AAECQ,YAAAA,QAFD;AAAA,8CAKEA,QAAQ,CAACC,MAAT,CAAgB,UAACC,KAAD;AAAA,qBAAWA,KAAK,CAACC,WAAN,KAAsBJ,KAAjC;AAAA,aAAhB,CALF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAOP,gBAAsBK,eAAtB;AAAA;AAAA,C,CASA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;8EA1BO,kBAA+BC,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEkBb,WAAW,EAF7B;;AAAA;AAECQ,YAAAA,QAFD;AAAA,8CAKEA,QAAQ,CAACL,IAAT,CAAc,UAACO,KAAD;AAAA,qBAAWA,KAAK,CAACI,GAAN,KAAcD,EAAzB;AAAA,aAAd,CALF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { MongoClient } from \"mongodb\";\n\nexport async function connectToDatabase() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://ghufran:Allahis1@cluster0.psik2ae.mongodb.net/authSec14?retryWrites=true&w=majority\",\n    {\n      useUnifiedTopology: true, // Pass the useUnifiedTopology option here\n    }\n  );\n\n  return client;\n}\n\nexport async function getAllPosts() {\n  const client = await connectToDatabase();\n  const db = client.db();\n\n  const data = await db.collection(\"PostedItem\").find({}).toArray();\n\n  return data;\n}\n\nexport async function getPostsByEmail(email) {\n  //console.log(email);\n  const allPosts = await getAllPosts();\n  //console.log(allPosts);\n  // return allPosts.find((event) => event.posterEmail === email);\n  return allPosts.filter((event) => event.posterEmail === email);\n}\nexport async function getPostDataById(id) {\n  //console.log(email);\n  const allPosts = await getAllPosts();\n  //console.log(allPosts);\n\n  return allPosts.find((event) => event._id === id);\n  //return allPosts.filter((event) => event.posterEmail === email);\n}\n\n// export async function getPostsByObjectId(objectId) {\n//   const allPosts = await getAllPosts();\n\n//   //console.log(allPosts); good\n//   console.log(objectId);\n//   const data2 = allPosts.find((item) => item._id.equals(objectId));\n//   console.log(data2);\n//   return data2;\n// }\n// import { ObjectId } from \"mongodb\";\n\n// export async function getPostsByObjectId(objectId) {\n//   const allPosts = await getAllPosts();\n\n//   const data2 = allPosts.find((item) => item._id.equals(objectId));\n//   console.log(data2);\n//   return data2;\n// }\n"]},"metadata":{},"sourceType":"module"}