{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\FYP\\\\LostNestfyp\\\\lostnestprj\\\\components\\\\profile\\\\profile-front.js\";\nimport React, { Fragment } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Loading from \"../UI/Loading\";\nimport PersonalProfile from \"./profilecomp/userprofile-comp\";\nimport ErrorComp from \"../UI/ErrorComp\";\n\nfunction ProfileFront(props) {\n  // const [isData, setIsData] = useState(\"\");\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [isError, setIsError] = useState(false);\n  // const [isErrorData, setIsErrorData] = useState(\n  //   \"Sorry but the page you are looking for does not exist.\"\n  // );\n  // useEffect(() => {\n  //   setIsLoading(true);\n  //   fetch(\"/api/profile/profiledata\")\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       setIsData(data);\n  //       if (data.message) {\n  //         setIsErrorData(data.message);\n  //         setIsError(true);\n  //       }\n  //       setIsLoading(false); // Move this here\n  //     })\n  //     .catch((error) => {\n  //       console.error(\"Error fetching data:\", error);\n  //       setIsLoading(false); // Make sure to handle errors as well\n  //     });\n  // }, [setIsData, setIsError, setIsErrorData]);\n  // if (isLoading) {\n  //   return <Loading />;\n  // }\n  // if (isError) {\n  //   return <ErrorComp errorData={isErrorData} />;\n  // }\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PersonalProfile, {\n      name: props.profile.name,\n      id: props.profile._id,\n      email: props.profile.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\nexport default ProfileFront;\n/*\r\n\r\n\r\nimport React, { Fragment } from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Loading from \"../UI/Loading\";\r\nimport PersonalProfile from \"./profilecomp/userprofile-comp\";\r\nimport ErrorComp from \"../UI/ErrorComp\";\r\n\r\nfunction ProfileFront() {\r\n  const [isData, setIsData] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  const [isErrorData, setIsErrorData] = useState(\r\n    \"Sorry but the page you are looking for does not exist.\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    fetch(\"/api/profile/profiledata\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setIsData(data);\r\n        if (data.message) {\r\n          setIsErrorData(data.message);\r\n          setIsError(true);\r\n        }\r\n        setIsLoading(false); // Move this here\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n        setIsLoading(false); // Make sure to handle errors as well\r\n      });\r\n  }, [setIsData, setIsError, setIsErrorData]);\r\n\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  if (isError) {\r\n    return <ErrorComp errorData={isErrorData} />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <PersonalProfile\r\n        name={isData.name}\r\n        id={isData._id}\r\n        email={isData.email}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default ProfileFront;\r\n*/","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/components/profile/profile-front.js"],"names":["React","Fragment","useState","useEffect","Loading","PersonalProfile","ErrorComp","ProfileFront","props","profile","name","_id","email"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,eAAD;AACE,MAAA,IAAI,EAAEA,KAAK,CAACC,OAAN,CAAcC,IADtB;AAEE,MAAA,EAAE,EAAEF,KAAK,CAACC,OAAN,CAAcE,GAFpB;AAGE,MAAA,KAAK,EAAEH,KAAK,CAACC,OAAN,CAAcG;AAHvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;AAED,eAAeL,YAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Loading from \"../UI/Loading\";\r\nimport PersonalProfile from \"./profilecomp/userprofile-comp\";\r\nimport ErrorComp from \"../UI/ErrorComp\";\r\n\r\nfunction ProfileFront(props) {\r\n  // const [isData, setIsData] = useState(\"\");\r\n  // const [isLoading, setIsLoading] = useState(false);\r\n  // const [isError, setIsError] = useState(false);\r\n  // const [isErrorData, setIsErrorData] = useState(\r\n  //   \"Sorry but the page you are looking for does not exist.\"\r\n  // );\r\n\r\n  // useEffect(() => {\r\n  //   setIsLoading(true);\r\n  //   fetch(\"/api/profile/profiledata\")\r\n  //     .then((response) => response.json())\r\n  //     .then((data) => {\r\n  //       setIsData(data);\r\n  //       if (data.message) {\r\n  //         setIsErrorData(data.message);\r\n  //         setIsError(true);\r\n  //       }\r\n  //       setIsLoading(false); // Move this here\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.error(\"Error fetching data:\", error);\r\n  //       setIsLoading(false); // Make sure to handle errors as well\r\n  //     });\r\n  // }, [setIsData, setIsError, setIsErrorData]);\r\n\r\n  // if (isLoading) {\r\n  //   return <Loading />;\r\n  // }\r\n\r\n  // if (isError) {\r\n  //   return <ErrorComp errorData={isErrorData} />;\r\n  // }\r\n\r\n  return (\r\n    <Fragment>\r\n      <PersonalProfile\r\n        name={props.profile.name}\r\n        id={props.profile._id}\r\n        email={props.profile.email}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default ProfileFront;\r\n\r\n/*\r\n\r\n\r\nimport React, { Fragment } from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Loading from \"../UI/Loading\";\r\nimport PersonalProfile from \"./profilecomp/userprofile-comp\";\r\nimport ErrorComp from \"../UI/ErrorComp\";\r\n\r\nfunction ProfileFront() {\r\n  const [isData, setIsData] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  const [isErrorData, setIsErrorData] = useState(\r\n    \"Sorry but the page you are looking for does not exist.\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    fetch(\"/api/profile/profiledata\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setIsData(data);\r\n        if (data.message) {\r\n          setIsErrorData(data.message);\r\n          setIsError(true);\r\n        }\r\n        setIsLoading(false); // Move this here\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n        setIsLoading(false); // Make sure to handle errors as well\r\n      });\r\n  }, [setIsData, setIsError, setIsErrorData]);\r\n\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  if (isError) {\r\n    return <ErrorComp errorData={isErrorData} />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <PersonalProfile\r\n        name={isData.name}\r\n        id={isData._id}\r\n        email={isData.email}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default ProfileFront;\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}