{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport classes from \"./FoundNewItem.module.css\";\nimport React from \"react\";\nimport Button from \"../UI/Button\";\nimport { useRef, useState } from \"react\";\nimport Loading from \"../UI/Loading\";\nimport ErrorComp from \"../UI/ErrorComp\"; // async function sendPostData(\n//   Type,\n//   Category,\n//   Title,\n//   Description,\n//   Question,\n//   Date,\n//   imageInbase64\n// ) {\n//   const response = await fetch(\"/api/post/postitem\", {\n//     method: \"POST\",\n//     body: JSON.stringify({\n//       Type,\n//       Category,\n//       Title,\n//       Description,\n//       Question,\n//       Date,\n//       ReducedImg: imageInbase64,\n//     }),\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//   });\n//   const data = await response.json();\n//   if (!response.ok) {\n//     throw new Error(data.message || \"Something went wrong!\");\n//   }\n//   return data;\n// }\n\nfunction FoundNewItem() {\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: isImage,\n    1: setIsImage\n  } = useState(\"\");\n  const {\n    0: isError,\n    1: setIsError\n  } = useState(false);\n  const {\n    0: isErrorData,\n    1: setIsErrorData\n  } = useState(\"Sorry but the page you are looking for does not exist.\");\n  const typeInputRef = useRef();\n  const categoryInputRef = useRef();\n  const titleInputRef = useRef();\n  const descriptionInputRef = useRef();\n  const questionInputRef = useRef();\n  const dateInputRef = useRef();\n\n  async function sendPostData(Type, Category, Title, Description, Question, Date, imageInbase64) {\n    const response = await fetch(\"/api/post/postitem\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        Type,\n        Category,\n        Title,\n        Description,\n        Question,\n        Date,\n        ReducedImg: imageInbase64\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n\n    if (!response.ok) {\n      setIsErrorData(data.message);\n      setIsLoading(false);\n      setIsError(true);\n    }\n\n    return data;\n  }\n\n  function converttobase64(e) {\n    // console.log(e);\n    var reader = new FileReader();\n    reader.readAsDataURL(e.target.files[0]);\n\n    reader.onload = () => {\n      //console.log(reader.result);\n      setIsImage(reader.result);\n    };\n\n    reader.onerror = () => {\n      console.log(\"error\", error);\n    };\n  }\n\n  const postSubmitHandler = async event => {\n    event.preventDefault();\n    setIsLoading(true);\n    const enteredType = typeInputRef.current.value;\n    const enteredCategory = categoryInputRef.current.value;\n    const enteredTitle = titleInputRef.current.value;\n    const enteredDescription = descriptionInputRef.current.value;\n    const enteredQuestion = questionInputRef.current.value;\n    const enteredDate = dateInputRef.current.value;\n    const humanReadableDate = new Date(enteredDate).toLocaleDateString(\"en-US\", {\n      day: \"numeric\",\n      month: \"long\",\n      year: \"numeric\"\n    });\n    const result = await sendPostData(enteredType, enteredCategory, enteredTitle, enteredDescription, enteredQuestion, humanReadableDate, isImage); // console.log(result);\n\n    event.target.reset(); // This resets the form\n\n    setIsImage(\"\"); // Clear the image state\n\n    setIsLoading(false);\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsx(Loading, {});\n  }\n\n  if (isError) {\n    return /*#__PURE__*/_jsx(ErrorComp, {\n      errorData: isErrorData\n    });\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.formstyle3,\n    children: /*#__PURE__*/_jsxs(\"form\", {\n      onSubmit: postSubmitHandler,\n      children: [/*#__PURE__*/_jsxs(\"fieldset\", {\n        children: [/*#__PURE__*/_jsx(\"legend\", {\n          children: \"Data\"\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: classes.divider,\n          children: [/*#__PURE__*/_jsx(\"select\", {\n            name: \"item\",\n            className: classes.inputfield,\n            ref: typeInputRef,\n            children: /*#__PURE__*/_jsx(\"option\", {\n              value: \"Found\",\n              children: \"Found\"\n            })\n          }), /*#__PURE__*/_jsxs(\"select\", {\n            defaultValue: \"Category\",\n            name: \"category\",\n            className: classes.inputfield,\n            ref: categoryInputRef,\n            required: true,\n            children: [/*#__PURE__*/_jsx(\"option\", {\n              value: \"Category\",\n              disabled: true,\n              children: \"Category\"\n            }), /*#__PURE__*/_jsx(\"option\", {\n              value: \"Wallet\",\n              children: \"Wallet\"\n            }), /*#__PURE__*/_jsx(\"option\", {\n              value: \"ID Card / Student Card\",\n              children: \"ID Card / Student Card\"\n            }), /*#__PURE__*/_jsx(\"option\", {\n              value: \"Smart Phone / Laptop\",\n              children: \"Smart Phone / Laptop\"\n            }), /*#__PURE__*/_jsx(\"option\", {\n              value: \"Keys\",\n              children: \"Keys\"\n            }), /*#__PURE__*/_jsx(\"option\", {\n              value: \"Others\",\n              children: \"Others\"\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: \"field3\",\n          children: [/*#__PURE__*/_jsxs(\"span\", {\n            children: [\"Item Name \", /*#__PURE__*/_jsx(\"span\", {\n              className: classes.required,\n              children: \"*\"\n            })]\n          }), /*#__PURE__*/_jsx(\"input\", {\n            type: \"text\",\n            name: \"field3\",\n            placeholder: \"Title\",\n            className: classes.inputfield,\n            ref: titleInputRef,\n            required: true\n          })]\n        }), /*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: \"field4\",\n          children: [/*#__PURE__*/_jsxs(\"span\", {\n            children: [\"Enter question based on an item.\", /*#__PURE__*/_jsx(\"span\", {\n              className: classes.required,\n              children: \"*\"\n            })]\n          }), /*#__PURE__*/_jsx(\"input\", {\n            type: \"text\",\n            name: \"field4\",\n            placeholder: \"Ex:- What is the color of the phone?\",\n            className: classes.inputfield,\n            ref: questionInputRef,\n            required: true\n          })]\n        }), /*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: \"date\",\n          children: [/*#__PURE__*/_jsxs(\"span\", {\n            children: [\"Select a Date: \", /*#__PURE__*/_jsx(\"span\", {\n              className: classes.required,\n              children: \"*\"\n            })]\n          }), /*#__PURE__*/_jsx(\"input\", {\n            type: \"date\",\n            name: \"date\",\n            id: \"date\",\n            className: classes.customselect,\n            ref: dateInputRef,\n            required: true\n          })]\n        })]\n      }), /*#__PURE__*/_jsxs(\"fieldset\", {\n        children: [/*#__PURE__*/_jsx(\"legend\", {\n          children: \"Details\"\n        }), /*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: \"description\",\n          children: [/*#__PURE__*/_jsxs(\"span\", {\n            children: [\"Description \", /*#__PURE__*/_jsx(\"span\", {\n              className: classes.required,\n              children: \"*\"\n            })]\n          }), /*#__PURE__*/_jsx(\"textarea\", {\n            type: \"text\",\n            name: \"description\",\n            placeholder: \"Description about item (like location etc...)\",\n            className: classes.textareafield,\n            ref: descriptionInputRef,\n            required: true\n          })]\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"file\",\n          id: \"image\",\n          name: \"image\",\n          accept: \"image/*\",\n          className: classes.customselect,\n          style: {\n            width: \"100%\"\n          },\n          onChange: converttobase64,\n          required: true\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: classes.center,\n          children: /*#__PURE__*/_jsx(Button, {\n            content: \"Post\"\n          })\n        })]\n      })]\n    })\n  });\n}\n\nexport default FoundNewItem;","map":null,"metadata":{},"sourceType":"module"}