{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"G:/FYP/LostNestfyp/lostnestprj/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"G:/FYP/LostNestfyp/lostnestprj/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"G:\\\\FYP\\\\LostNestfyp\\\\lostnestprj\\\\components\\\\postcomp\\\\PostNewItem.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./PostItem.module.css\";\nimport React from \"react\";\nimport Button from \"../UI/Button\";\nimport { useRef, useState } from \"react\";\nimport Loader from \"../UI/Loader\";\n\nfunction sendPostData(_x, _x2, _x3, _x4, _x5, _x6, _x7) {\n  return _sendPostData.apply(this, arguments);\n}\n\nfunction _sendPostData() {\n  _sendPostData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(Type, Category, Title, Description, Question, Date, imageInbase64) {\n    var response, data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(\"/api/post/postitem\", {\n              method: \"POST\",\n              body: JSON.stringify({\n                Type: Type,\n                Category: Category,\n                Title: Title,\n                Description: Description,\n                Question: Question,\n                Date: Date,\n                ReducedImg: imageInbase64\n              }),\n              headers: {\n                \"Content-Type\": \"application/json\"\n              }\n            });\n\n          case 2:\n            response = _context2.sent;\n            _context2.next = 5;\n            return response.json();\n\n          case 5:\n            data = _context2.sent;\n\n            if (response.ok) {\n              _context2.next = 8;\n              break;\n            }\n\n            throw new Error(data.message || \"Something went wrong!\");\n\n          case 8:\n            return _context2.abrupt(\"return\", data);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _sendPostData.apply(this, arguments);\n}\n\nfunction PostNewItem() {\n  _s();\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      isImage = _useState2[0],\n      setIsImage = _useState2[1];\n\n  var typeInputRef = useRef();\n  var categoryInputRef = useRef();\n  var titleInputRef = useRef();\n  var descriptionInputRef = useRef();\n  var questionInputRef = useRef();\n  var dateInputRef = useRef();\n\n  function converttobase64(e) {\n    // console.log(e);\n    var reader = new FileReader();\n    reader.readAsDataURL(e.target.files[0]);\n\n    reader.onload = function () {\n      //console.log(reader.result);\n      setIsImage(reader.result);\n    };\n\n    reader.onerror = function () {\n      console.log(\"error\", error);\n    };\n  }\n\n  var postSubmitHandler = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var enteredType, enteredCategory, enteredTitle, enteredDescription, enteredQuestion, enteredDate, humanReadableDate, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              setIsLoading(true);\n              enteredType = typeInputRef.current.value;\n              enteredCategory = categoryInputRef.current.value;\n              enteredTitle = titleInputRef.current.value;\n              enteredDescription = descriptionInputRef.current.value;\n              enteredQuestion = questionInputRef.current.value;\n              enteredDate = dateInputRef.current.value;\n              humanReadableDate = new Date(enteredDate).toLocaleDateString(\"en-US\", {\n                day: \"numeric\",\n                month: \"long\",\n                year: \"numeric\"\n              });\n              _context.prev = 9;\n              _context.next = 12;\n              return sendPostData(enteredType, enteredCategory, enteredTitle, enteredDescription, enteredQuestion, humanReadableDate, isImage);\n\n            case 12:\n              result = _context.sent;\n              console.log(result);\n              event.target.reset(); // This resets the form\n\n              setIsLoading(false);\n              _context.next = 21;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](9);\n              console.log(_context.t0);\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[9, 18]]);\n    }));\n\n    return function postSubmitHandler(_x8) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.formstyle3,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.divider,\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"item\",\n            className: classes.inputfield,\n            children: /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Lost\",\n              children: \"Lost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"category\",\n            className: classes.inputfield,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              selected: true,\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Wallet\",\n              children: \"Wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"ID Card / Student Card\",\n              children: \"ID Card / Student Card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Smart Phone / Laptop\",\n              children: \"Smart Phone / Laptop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Keys\",\n              children: \"Keys\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Others\",\n              children: \"Others\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          \"for\": \"field3\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Item Name \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.required,\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"field3\",\n            placeholder: \"Title\",\n            className: classes.inputfield\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          \"for\": \"field4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Enter question based on an item.\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.required,\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"field4\",\n            placeholder: \"Ex:- What is the color of the phone?\",\n            className: classes.inputfield,\n            ref: questionInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Select a Date: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.required,\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"date\",\n            id: \"date\",\n            className: classes.customselect,\n            ref: dateInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          \"for\": \"description\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Description \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.required,\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            name: \"description\",\n            placeholder: \"Description about item (like location etc...)\",\n            className: classes.textareafield\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"image\",\n          name: \"image\",\n          accept: \"image/*\",\n          className: classes.customselect,\n          style: {\n            width: \"100%\"\n          },\n          onChange: converttobase64\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.center,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            content: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostNewItem, \"cNsKx23FHhilz3LAHnbKyEpw5eY=\");\n\n_c = PostNewItem;\nexport default PostNewItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostNewItem\");","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/components/postcomp/PostNewItem.js"],"names":["classes","React","Button","useRef","useState","Loader","sendPostData","Type","Category","Title","Description","Question","Date","imageInbase64","fetch","method","body","JSON","stringify","ReducedImg","headers","response","json","data","ok","Error","message","PostNewItem","isLoading","setIsLoading","isImage","setIsImage","typeInputRef","categoryInputRef","titleInputRef","descriptionInputRef","questionInputRef","dateInputRef","converttobase64","e","reader","FileReader","readAsDataURL","target","files","onload","result","onerror","console","log","error","postSubmitHandler","event","preventDefault","enteredType","current","value","enteredCategory","enteredTitle","enteredDescription","enteredQuestion","enteredDate","humanReadableDate","toLocaleDateString","day","month","year","reset","formstyle3","divider","inputfield","required","customselect","textareafield","width","center"],"mappings":"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","sourcesContent":["import classes from \"./PostItem.module.css\";\r\n\r\nimport React from \"react\";\r\nimport Button from \"../UI/Button\";\r\n\r\nimport { useRef, useState } from \"react\";\r\nimport Loader from \"../UI/Loader\";\r\nasync function sendPostData(\r\n  Type,\r\n  Category,\r\n  Title,\r\n  Description,\r\n  Question,\r\n  Date,\r\n  imageInbase64\r\n) {\r\n  const response = await fetch(\"/api/post/postitem\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify({\r\n      Type,\r\n      Category,\r\n      Title,\r\n      Description,\r\n      Question,\r\n      Date,\r\n      ReducedImg: imageInbase64,\r\n    }),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Something went wrong!\");\r\n  }\r\n\r\n  return data;\r\n}\r\nfunction PostNewItem() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isImage, setIsImage] = useState(\"\");\r\n  const typeInputRef = useRef();\r\n  const categoryInputRef = useRef();\r\n  const titleInputRef = useRef();\r\n  const descriptionInputRef = useRef();\r\n  const questionInputRef = useRef();\r\n  const dateInputRef = useRef();\r\n\r\n  function converttobase64(e) {\r\n    // console.log(e);\r\n\r\n    var reader = new FileReader();\r\n    reader.readAsDataURL(e.target.files[0]);\r\n\r\n    reader.onload = () => {\r\n      //console.log(reader.result);\r\n      setIsImage(reader.result);\r\n    };\r\n\r\n    reader.onerror = () => {\r\n      console.log(\"error\", error);\r\n    };\r\n  }\r\n  const postSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    const enteredType = typeInputRef.current.value;\r\n    const enteredCategory = categoryInputRef.current.value;\r\n    const enteredTitle = titleInputRef.current.value;\r\n    const enteredDescription = descriptionInputRef.current.value;\r\n    const enteredQuestion = questionInputRef.current.value;\r\n    const enteredDate = dateInputRef.current.value;\r\n\r\n    const humanReadableDate = new Date(enteredDate).toLocaleDateString(\r\n      \"en-US\",\r\n      {\r\n        day: \"numeric\",\r\n        month: \"long\",\r\n        year: \"numeric\",\r\n      }\r\n    );\r\n\r\n    try {\r\n      const result = await sendPostData(\r\n        enteredType,\r\n        enteredCategory,\r\n        enteredTitle,\r\n        enteredDescription,\r\n        enteredQuestion,\r\n        humanReadableDate,\r\n        isImage\r\n      );\r\n\r\n      console.log(result);\r\n      event.target.reset(); // This resets the form\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.formstyle3}>\r\n      <form>\r\n        <fieldset>\r\n          <legend>Data</legend>\r\n          <div className={classes.divider}>\r\n            <select name=\"item\" className={classes.inputfield}>\r\n              <option value=\"Lost\">Lost</option>\r\n            </select>\r\n            <select name=\"category\" className={classes.inputfield}>\r\n              <option value=\"\" disabled selected>\r\n                Category\r\n              </option>\r\n              <option value=\"Wallet\">Wallet</option>\r\n              <option value=\"ID Card / Student Card\">\r\n                ID Card / Student Card\r\n              </option>\r\n              <option value=\"Smart Phone / Laptop\">Smart Phone / Laptop</option>\r\n              <option value=\"Keys\">Keys</option>\r\n              <option value=\"Others\">Others</option>\r\n            </select>\r\n          </div>\r\n\r\n          <label for=\"field3\">\r\n            <span>\r\n              Item Name <span className={classes.required}>*</span>\r\n            </span>\r\n            <input\r\n              type=\"text\"\r\n              name=\"field3\"\r\n              placeholder=\"Title\"\r\n              className={classes.inputfield}\r\n            ></input>\r\n          </label>\r\n          <label for=\"field4\">\r\n            <span>\r\n              Enter question based on an item.\r\n              <span className={classes.required}>*</span>\r\n            </span>\r\n            <input\r\n              type=\"text\"\r\n              name=\"field4\"\r\n              placeholder=\"Ex:- What is the color of the phone?\"\r\n              className={classes.inputfield}\r\n              ref={questionInputRef}\r\n            ></input>\r\n          </label>\r\n\r\n          <label htmlFor=\"date\">\r\n            <span>\r\n              Select a Date: <span className={classes.required}>*</span>\r\n            </span>\r\n            <input\r\n              type=\"date\"\r\n              name=\"date\"\r\n              id=\"date\"\r\n              className={classes.customselect}\r\n              ref={dateInputRef}\r\n            ></input>\r\n          </label>\r\n        </fieldset>\r\n        <fieldset>\r\n          <legend>Details</legend>\r\n          <label for=\"description\">\r\n            <span>\r\n              Description <span className={classes.required}>*</span>\r\n            </span>\r\n            <textarea\r\n              type=\"text\"\r\n              name=\"description\"\r\n              placeholder=\"Description about item (like location etc...)\"\r\n              className={classes.textareafield}\r\n            ></textarea>\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            id=\"image\"\r\n            name=\"image\"\r\n            accept=\"image/*\"\r\n            className={classes.customselect}\r\n            style={{ width: \"100%\" }}\r\n            onChange={converttobase64}\r\n          />\r\n          <div className={classes.center}>\r\n            <Button content=\"Post\"></Button>\r\n          </div>\r\n        </fieldset>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostNewItem;\r\n"]},"metadata":{},"sourceType":"module"}