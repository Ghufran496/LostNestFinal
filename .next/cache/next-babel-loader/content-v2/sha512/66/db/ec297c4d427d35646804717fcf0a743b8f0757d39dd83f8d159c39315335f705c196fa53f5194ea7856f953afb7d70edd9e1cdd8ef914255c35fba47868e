{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"G:\\\\FYP\\\\LostNestfyp\\\\lostnestprj\\\\components\\\\stats\\\\ChartComp.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport classes from \"./ChartComp.module.css\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport Noti from \"../notificationOverlay/noti\";\nimport Example from \"../../components/stats/chart\";\n\nvar ChartComp = function ChartComp() {\n  _s();\n\n  var _useState = useState({}),\n      count = _useState[0],\n      setCount = _useState[1];\n\n  useEffect(function () {\n    fetch(\"/api/stats/getposts\").then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      setCount(data);\n    })[\"catch\"](function (error) {\n      console.error(\"Fetch error:\", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.main,\n      children: [count.totalPosts && /*#__PURE__*/_jsxDEV(Example, {\n        postscount: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 30\n      }, _this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: classes.ulist,\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: classes.listitem,\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Total Posted Items: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, _this), count.totalPosts ? count.totalPosts : 10]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: classes.listitem,\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Lost Posted Items:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, _this), \" \", count.totalPosts ? count.lostPosts : 7]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Found Posted Items:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, _this), \" \", count.totalPosts ? count.foundPosts : 3]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, _this), !count.totalPosts && /*#__PURE__*/_jsxDEV(Noti, {\n      data: \"Updating Stats...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 29\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ChartComp, \"KH5vNaxQgcotsGCHHQ7+13gaLbM=\");\n\n_c = ChartComp;\nexport default ChartComp; // import React, { useEffect, useState, Fragment } from \"react\";\n// import Noti from \"../notificationOverlay/noti\";\n// import Example from \"../../components/stats/chart\";\n// import classes from \"./ChartComp.module.css\";\n// const ChartComp = () => {\n//   const [count, setCount] = useState({});\n//   useEffect(() => {\n//     // Use an IIFE to fetch data on the client side\n//     (async () => {\n//       try {\n//         const response = await fetch(\"/api/stats/getposts\");\n//         const data = await response.json();\n//         setCount(data);\n//       } catch (error) {\n//         console.error(\"Fetch error:\", error);\n//       }\n//     })();\n//   }, []);\n//   return (\n//     <Fragment>\n//       <div className={classes.main}>\n//         {/* Render the chart only when count has data */}\n//         {count.totalPosts && <Example postscount={count} />}\n//         <ul className={classes.ulist}>\n//           <li className={classes.listitem}>\n//             <b>Total Posted Items: </b>\n//             {count.totalPosts ? count.totalPosts : 10}\n//           </li>\n//           <li className={classes.listitem}>\n//             <b>Lost Posted Items:</b> {count.totalPosts ? count.lostPosts : 7}\n//           </li>\n//           <li>\n//             <b>Found Posted Items:</b> {count.totalPosts ? count.foundPosts : 3}\n//           </li>\n//         </ul>\n//       </div>\n//       {!count.totalPosts && <Noti data=\"Updating Stats...\" />}\n//     </Fragment>\n//   );\n// };\n// export default ChartComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartComp\");","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/components/stats/ChartComp.js"],"names":["React","classes","Fragment","useEffect","useState","Noti","Example","ChartComp","count","setCount","fetch","then","response","json","data","error","console","main","totalPosts","ulist","listitem","lostPosts","foundPosts"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AAEA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,QAA8C,OAA9C;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,OAAP,MAAoB,8BAApB;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AAAA,kBACIH,QAAQ,CAAC,EAAD,CADZ;AAAA,MACfI,KADe;AAAA,MACRC,QADQ;;AAGtBN,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,KAAK,CAAC,qBAAD,CAAL,CACGC,IADH,CACQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KADR,EAEGF,IAFH,CAEQ,UAACG,IAAD,EAAU;AACdL,MAAAA,QAAQ,CAACK,IAAD,CAAR;AACD,KAJH,WAKS,UAACC,KAAD,EAAW;AAChBC,MAAAA,OAAO,CAACD,KAAR,CAAc,cAAd,EAA8BA,KAA9B;AACD,KAPH;AAQD,GATQ,EASN,EATM,CAAT;AAUA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEd,OAAO,CAACgB,IAAxB;AAAA,iBACGT,KAAK,CAACU,UAAN,iBAAoB,QAAC,OAAD;AAAS,QAAA,UAAU,EAAEV;AAArB;AAAA;AAAA;AAAA;AAAA,eADvB,eAEE;AAAI,QAAA,SAAS,EAAEP,OAAO,CAACkB,KAAvB;AAAA,gCACE;AAAI,UAAA,SAAS,EAAElB,OAAO,CAACmB,QAAvB;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEGZ,KAAK,CAACU,UAAN,GAAmBV,KAAK,CAACU,UAAzB,GAAsC,EAFzC;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAKE;AAAI,UAAA,SAAS,EAAEjB,OAAO,CAACmB,QAAvB;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,OAC6BZ,KAAK,CAACU,UAAN,GAAmBV,KAAK,CAACa,SAAzB,GAAqC,CADlE;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,eAQE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,OAC8Bb,KAAK,CAACU,UAAN,GAAmBV,KAAK,CAACc,UAAzB,GAAsC,CADpE;AAAA;AAAA;AAAA;AAAA;AAAA,iBARF;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAgBG,CAACd,KAAK,CAACU,UAAP,iBAAqB,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,aAhBxB;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAoBD,CAjCD;;GAAMX,S;;KAAAA,S;AAmCN,eAAeA,SAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from \"react\";\r\nimport classes from \"./ChartComp.module.css\";\r\n\r\nimport { Fragment, useEffect, useState } from \"react\";\r\nimport Noti from \"../notificationOverlay/noti\";\r\nimport Example from \"../../components/stats/chart\";\r\nconst ChartComp = () => {\r\n  const [count, setCount] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetch(\"/api/stats/getposts\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setCount(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Fetch error:\", error);\r\n      });\r\n  }, []);\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.main}>\r\n        {count.totalPosts && <Example postscount={count} />}\r\n        <ul className={classes.ulist}>\r\n          <li className={classes.listitem}>\r\n            <b>Total Posted Items: </b>\r\n            {count.totalPosts ? count.totalPosts : 10}\r\n          </li>\r\n          <li className={classes.listitem}>\r\n            <b>Lost Posted Items:</b> {count.totalPosts ? count.lostPosts : 7}\r\n          </li>\r\n          <li>\r\n            <b>Found Posted Items:</b> {count.totalPosts ? count.foundPosts : 3}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      {!count.totalPosts && <Noti data=\"Updating Stats...\" />}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ChartComp;\r\n// import React, { useEffect, useState, Fragment } from \"react\";\r\n// import Noti from \"../notificationOverlay/noti\";\r\n// import Example from \"../../components/stats/chart\";\r\n// import classes from \"./ChartComp.module.css\";\r\n// const ChartComp = () => {\r\n//   const [count, setCount] = useState({});\r\n\r\n//   useEffect(() => {\r\n//     // Use an IIFE to fetch data on the client side\r\n//     (async () => {\r\n//       try {\r\n//         const response = await fetch(\"/api/stats/getposts\");\r\n//         const data = await response.json();\r\n//         setCount(data);\r\n//       } catch (error) {\r\n//         console.error(\"Fetch error:\", error);\r\n//       }\r\n//     })();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <Fragment>\r\n//       <div className={classes.main}>\r\n//         {/* Render the chart only when count has data */}\r\n//         {count.totalPosts && <Example postscount={count} />}\r\n//         <ul className={classes.ulist}>\r\n//           <li className={classes.listitem}>\r\n//             <b>Total Posted Items: </b>\r\n//             {count.totalPosts ? count.totalPosts : 10}\r\n//           </li>\r\n//           <li className={classes.listitem}>\r\n//             <b>Lost Posted Items:</b> {count.totalPosts ? count.lostPosts : 7}\r\n//           </li>\r\n//           <li>\r\n//             <b>Found Posted Items:</b> {count.totalPosts ? count.foundPosts : 3}\r\n//           </li>\r\n//         </ul>\r\n//       </div>\r\n//       {!count.totalPosts && <Noti data=\"Updating Stats...\" />}\r\n//     </Fragment>\r\n//   );\r\n// };\r\n\r\n// export default ChartComp;\r\n"]},"metadata":{},"sourceType":"module"}