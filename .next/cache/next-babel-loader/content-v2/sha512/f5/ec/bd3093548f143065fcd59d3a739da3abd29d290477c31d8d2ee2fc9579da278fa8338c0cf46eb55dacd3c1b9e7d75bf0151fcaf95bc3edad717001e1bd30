{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\FYP\\\\LostNestfyp\\\\lostnestprj\\\\components\\\\answers\\\\answer.js\";\nimport { useEffect, useState } from \"react\";\nimport AnswerList from \"./answer-list\";\nimport classes from \"./answer.module.css\";\n\nfunction Answer(props) {\n  const {\n    postid\n  } = props; //console.log(postid);\n\n  const {\n    0: showResponse,\n    1: setShowResponse\n  } = useState(false);\n  const {\n    0: showLoadingContent,\n    1: setLoadingContent\n  } = useState(false);\n  const {\n    0: response,\n    1: setresponse\n  } = useState([]);\n  useEffect(() => {\n    setLoadingContent(true);\n\n    if (showResponse) {\n      fetch(\"/api/answers/\" + postid).then(response => response.json()).then(data => setresponse(data.responses));\n    }\n\n    setLoadingContent(false);\n  }, [showResponse]);\n\n  function toggleResponseHandler() {\n    setShowResponse(prevStatus => !prevStatus);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.responses,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.btndiv,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleResponseHandler,\n        className: classes.button52,\n        children: [showResponse ? \"Hide\" : \"Show\", \" Responses\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), showLoadingContent && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No responses yet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 30\n    }, this), showResponse && /*#__PURE__*/_jsxDEV(AnswerList, {\n      ansitems: response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\nexport default Answer;","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/components/answers/answer.js"],"names":["useEffect","useState","AnswerList","classes","Answer","props","postid","showResponse","setShowResponse","showLoadingContent","setLoadingContent","response","setresponse","fetch","then","json","data","responses","toggleResponseHandler","prevStatus","btndiv","button52"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB,CADqB,CAErB;;AACA,QAAM;AAAA,OAACE,YAAD;AAAA,OAAeC;AAAf,MAAkCP,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM;AAAA,OAACQ,kBAAD;AAAA,OAAqBC;AAArB,MAA0CT,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM;AAAA,OAACU,QAAD;AAAA,OAAWC;AAAX,MAA0BX,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;;AACA,QAAIH,YAAJ,EAAkB;AAChBM,MAAAA,KAAK,CAAC,kBAAkBP,MAAnB,CAAL,CACGQ,IADH,CACSH,QAAD,IAAcA,QAAQ,CAACI,IAAT,EADtB,EAEGD,IAFH,CAESE,IAAD,IAAUJ,WAAW,CAACI,IAAI,CAACC,SAAN,CAF7B;AAGD;;AACDP,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,GARQ,EAQN,CAACH,YAAD,CARM,CAAT;;AAUA,WAASW,qBAAT,GAAiC;AAC/BV,IAAAA,eAAe,CAAEW,UAAD,IAAgB,CAACA,UAAlB,CAAf;AACD;;AAED,sBACE;AAAS,IAAA,SAAS,EAAEhB,OAAO,CAACc,SAA5B;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEd,OAAO,CAACiB,MAAxB;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAEF,qBAAjB;AAAwC,QAAA,SAAS,EAAEf,OAAO,CAACkB,QAA3D;AAAA,mBACGd,YAAY,GAAG,MAAH,GAAY,MAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAMGE,kBAAkB,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANzB,EAOGF,YAAY,iBAAI,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAEI;AAAtB;AAAA;AAAA;AAAA;AAAA,YAPnB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;AAED,eAAeP,MAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nimport AnswerList from \"./answer-list\";\r\nimport classes from \"./answer.module.css\";\r\n\r\nfunction Answer(props) {\r\n  const { postid } = props;\r\n  //console.log(postid);\r\n  const [showResponse, setShowResponse] = useState(false);\r\n  const [showLoadingContent, setLoadingContent] = useState(false);\r\n  const [response, setresponse] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setLoadingContent(true);\r\n    if (showResponse) {\r\n      fetch(\"/api/answers/\" + postid)\r\n        .then((response) => response.json())\r\n        .then((data) => setresponse(data.responses));\r\n    }\r\n    setLoadingContent(false);\r\n  }, [showResponse]);\r\n\r\n  function toggleResponseHandler() {\r\n    setShowResponse((prevStatus) => !prevStatus);\r\n  }\r\n\r\n  return (\r\n    <section className={classes.responses}>\r\n      <div className={classes.btndiv}>\r\n        <button onClick={toggleResponseHandler} className={classes.button52}>\r\n          {showResponse ? \"Hide\" : \"Show\"} Responses\r\n        </button>\r\n      </div>\r\n      {showLoadingContent && <p>No responses yet!</p>}\r\n      {showResponse && <AnswerList ansitems={response} />}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Answer;\r\n"]},"metadata":{},"sourceType":"module"}