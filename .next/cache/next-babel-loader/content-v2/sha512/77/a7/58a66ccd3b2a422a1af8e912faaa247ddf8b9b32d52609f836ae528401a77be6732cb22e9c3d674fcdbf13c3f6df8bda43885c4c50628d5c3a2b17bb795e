{"ast":null,"code":"import _regeneratorRuntime from \"G:/FYP/LostNestfyp/lostnestprj/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"G:/FYP/LostNestfyp/lostnestprj/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { MongoClient } from \"mongodb\";\nexport function connectToDatabase() {\n  return _connectToDatabase.apply(this, arguments);\n}\n\nfunction _connectToDatabase() {\n  _connectToDatabase = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var client;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return MongoClient.connect(\"mongodb+srv://ghufran:Allahis1@cluster0.psik2ae.mongodb.net/authSec14?retryWrites=true&w=majority\", {\n              useUnifiedTopology: true // Pass the useUnifiedTopology option here\n\n            });\n\n          case 2:\n            client = _context.sent;\n            return _context.abrupt(\"return\", client);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _connectToDatabase.apply(this, arguments);\n}\n\nexport function getAllPosts() {\n  return _getAllPosts.apply(this, arguments);\n}\n\nfunction _getAllPosts() {\n  _getAllPosts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var client, db, data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return connectToDatabase();\n\n          case 2:\n            client = _context2.sent;\n            db = client.db();\n            _context2.next = 6;\n            return db.collection(\"PostedItem\").find({}).toArray();\n\n          case 6:\n            data = _context2.sent;\n            return _context2.abrupt(\"return\", data);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getAllPosts.apply(this, arguments);\n}\n\nexport function getPostsByEmail(_x) {\n  return _getPostsByEmail.apply(this, arguments);\n} // export async function getPostsByObjectId(objectId) {\n//   const allPosts = await getAllPosts();\n//   //console.log(allPosts); good\n//   console.log(objectId);\n//   const data2 = allPosts.find((item) => item._id.equals(objectId));\n//   console.log(data2);\n//   return data2;\n// }\n// import { ObjectId } from \"mongodb\";\n// export async function getPostsByObjectId(objectId) {\n//   const allPosts = await getAllPosts();\n//   const data2 = allPosts.find((item) => item._id.equals(objectId));\n//   console.log(data2);\n//   return data2;\n// }\n\nfunction _getPostsByEmail() {\n  _getPostsByEmail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(email) {\n    var allPosts;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return getAllPosts();\n\n          case 2:\n            allPosts = _context3.sent;\n            return _context3.abrupt(\"return\", allPosts.filter(function (event) {\n              return event.posterEmail === email;\n            }));\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getPostsByEmail.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}