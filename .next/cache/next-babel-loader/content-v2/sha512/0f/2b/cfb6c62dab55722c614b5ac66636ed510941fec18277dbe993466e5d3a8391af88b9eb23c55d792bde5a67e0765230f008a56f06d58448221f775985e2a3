{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"G:/FYP/LostNestfyp/lostnestprj/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"G:/FYP/LostNestfyp/lostnestprj/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n// import React from \"react\";\n// import classes from \"./ChartComp.module.css\";\n// import { Fragment, useEffect, useState } from \"react\";\n// import Noti from \"../notificationOverlay/noti\";\n// import Example from \"../../components/stats/chart\";\n// const ChartComp = () => {\n//   const [count, setCount] = useState({});\n//   useEffect(() => {\n//     fetch(\"/api/stats/getposts\")\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setCount(data);\n//       })\n//       .catch((error) => {\n//         console.error(\"Fetch error:\", error);\n//       });\n//   }, []);\n//   return (\n//     <Fragment>\n//       <div className={classes.main}>\n//         <Example postscount={count} />\n//         <ul className={classes.ulist}>\n//           <li className={classes.listitem}>\n//             <b>Total Posted Items: </b>\n//             {count.totalPosts ? count.totalPosts : 10}\n//           </li>\n//           <li className={classes.listitem}>\n//             <b>Lost Posted Items:</b> {count.totalPosts ? count.lostPosts : 7}\n//           </li>\n//           <li>\n//             <b>Found Posted Items:</b> {count.totalPosts ? count.foundPosts : 3}\n//           </li>\n//         </ul>\n//       </div>\n//       {!count.totalPosts && <Noti data=\"Updating Stats...\" />}\n//     </Fragment>\n//   );\n// };\n// export default ChartComp;\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport Noti from \"../notificationOverlay/noti\";\nimport Example from \"../../components/stats/chart\";\nimport classes from \"./ChartComp.module.css\";\n\nvar ChartComp = function ChartComp() {\n  var _useState = useState({}),\n      count = _useState[0],\n      setCount = _useState[1];\n\n  useEffect(function () {\n    // Use an IIFE to fetch data on the client side\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch(\"/api/stats/getposts\");\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n\n            case 6:\n              data = _context.sent;\n              setCount(data);\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(\"Fetch error:\", _context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }))();\n  }, []);\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: classes.main,\n      children: [count.totalPosts && /*#__PURE__*/_jsx(Example, {\n        postscount: count\n      }), /*#__PURE__*/_jsxs(\"ul\", {\n        className: classes.ulist,\n        children: [/*#__PURE__*/_jsxs(\"li\", {\n          className: classes.listitem,\n          children: [/*#__PURE__*/_jsx(\"b\", {\n            children: \"Total Posted Items: \"\n          }), count.totalPosts ? count.totalPosts : 10]\n        }), /*#__PURE__*/_jsxs(\"li\", {\n          className: classes.listitem,\n          children: [/*#__PURE__*/_jsx(\"b\", {\n            children: \"Lost Posted Items:\"\n          }), \" \", count.totalPosts ? count.lostPosts : 7]\n        }), /*#__PURE__*/_jsxs(\"li\", {\n          children: [/*#__PURE__*/_jsx(\"b\", {\n            children: \"Found Posted Items:\"\n          }), \" \", count.totalPosts ? count.foundPosts : 3]\n        })]\n      })]\n    }), !count.totalPosts && /*#__PURE__*/_jsx(Noti, {\n      data: \"Updating Stats...\"\n    })]\n  });\n};\n\nexport default ChartComp;","map":null,"metadata":{},"sourceType":"module"}