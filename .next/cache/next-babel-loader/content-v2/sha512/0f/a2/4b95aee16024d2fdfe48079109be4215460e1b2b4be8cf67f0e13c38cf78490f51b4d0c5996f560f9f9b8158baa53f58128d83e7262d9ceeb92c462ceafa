{"ast":null,"code":"import { getSession } from \"next-auth/client\";\nimport { connectToDatabase } from \"../../../lib/db\";\n\nasync function handler(req, res) {\n  if (req.method !== \"GET\") {\n    return res.status(405).json({\n      message: \"Method Not Allowed\"\n    });\n  }\n\n  const client = await connectToDatabase();\n\n  try {\n    const session = await getSession({\n      req\n    });\n\n    if (!session) {\n      return res.status(401).json({\n        message: \"Not authenticated!\"\n      });\n    }\n\n    const userEmail = session.user.email;\n    const usersCollection = client.db().collection(\"users\");\n    const user = await usersCollection.findOne({\n      email: userEmail\n    }, {\n      projection: {\n        password: 0\n      }\n    });\n\n    if (!user) {\n      return res.status(404).json({\n        message: \"User not found.\"\n      });\n    } //const profileData = JSON.parse(JSON.stringify(user));\n\n\n    return res.status(200).json(user);\n  } catch (error) {\n    console.error(\"Error handling profile data:\", error);\n    return res.status(500).json({\n      message: \"Internal Server Error\"\n    });\n  } finally {\n    if (client) {\n      client.close();\n    }\n  }\n}\n\nexport default handler; // import { getSession } from \"next-auth/client\";\n// import { connectToDatabase } from \"../../../lib/db\";\n// async function handler(req, res) {\n//   if (req.method === \"GET\") {\n//     const session = await getSession({ req: req });\n//     if (!session) {\n//       res.status(401).json({ message: \"Not authenticated!\" });\n//       return;\n//     }\n//     //console.log(session);\n//     const userEmail = session.user.email;\n//     const client = await connectToDatabase();\n//     const usersCollection = client.db().collection(\"users\");\n//     const user = await usersCollection.findOne(\n//       { email: userEmail },\n//       { projection: { password: 0 } }\n//     );\n//     if (!user) {\n//       res.status(404).json({ message: \"User not found.\" });\n//       client.close();\n//       return;\n//     }\n//     const Profiledata = JSON.parse(JSON.stringify(user));\n//     res.status(200).json(Profiledata);\n//     client.close();\n//   }\n// }\n// export default handler;","map":null,"metadata":{},"sourceType":"module"}