{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\FYP\\\\LostNestfyp\\\\lostnestprj\\\\components\\\\mylistings\\\\Specificpost.js\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport ErrorComp from \"../UI/ErrorComp\";\nimport Loading from \"../UI/Loading\";\n\nfunction Specificpost() {\n  const {\n    0: isData,\n    1: setIsData\n  } = useState(\"\");\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: isError,\n    1: setIsError\n  } = useState(false);\n  const {\n    0: isErrorData,\n    1: setIsErrorData\n  } = useState(\"Sorry but the page you are looking for does not exist.\");\n  useEffect(() => {\n    let isMounted = true; // Flag to track if the component is mounted\n\n    setIsLoading(true);\n    fetch(\"/api/post/postitem\").then(response => response.json()).then(data => {\n      //console.log(data);\n      if (isMounted) {\n        setIsData(data);\n\n        if (data.message) {\n          setIsErrorData(data.message);\n          setIsError(true);\n        }\n\n        setIsLoading(false);\n      }\n    }).catch(error => {\n      if (isMounted) {\n        setIsError(true);\n        setIsErrorData(\"An error occurred while fetching data.\");\n        setIsLoading(false);\n      }\n\n      console.error(\"Fetch error:\", error);\n    }); // Cleanup function\n\n    return () => {\n      isMounted = false; // Set flag to false when component is unmounted\n    };\n  }, [setIsData, setIsError, setIsErrorData]);\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(ErrorComp, {\n      errorData: isErrorData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 10\n  }, this);\n}\n\nexport default Specificpost;","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/components/mylistings/Specificpost.js"],"names":["React","useEffect","useState","ErrorComp","Loading","Specificpost","isData","setIsData","isLoading","setIsLoading","isError","setIsError","isErrorData","setIsErrorData","isMounted","fetch","then","response","json","data","message","catch","error","console"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,SAASC,YAAT,GAAwB;AACtB,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACM,SAAD;AAAA,OAAYC;AAAZ,MAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAA,OAACQ,OAAD;AAAA,OAAUC;AAAV,MAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACU,WAAD;AAAA,OAAcC;AAAd,MAAgCX,QAAQ,CAC5C,wDAD4C,CAA9C;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,SAAS,GAAG,IAAhB,CADc,CACQ;;AAEtBL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAM,IAAAA,KAAK,CAAC,oBAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACd;AACA,UAAIL,SAAJ,EAAe;AACbP,QAAAA,SAAS,CAACY,IAAD,CAAT;;AACA,YAAIA,IAAI,CAACC,OAAT,EAAkB;AAChBP,UAAAA,cAAc,CAACM,IAAI,CAACC,OAAN,CAAd;AACAT,UAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AACDF,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,KAZH,EAaGY,KAbH,CAaUC,KAAD,IAAW;AAChB,UAAIR,SAAJ,EAAe;AACbH,QAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,QAAAA,cAAc,CAAC,wCAAD,CAAd;AACAJ,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AACDc,MAAAA,OAAO,CAACD,KAAR,CAAc,cAAd,EAA8BA,KAA9B;AACD,KApBH,EALc,CA2Bd;;AACA,WAAO,MAAM;AACXR,MAAAA,SAAS,GAAG,KAAZ,CADW,CACQ;AACpB,KAFD;AAGD,GA/BQ,EA+BN,CAACP,SAAD,EAAYI,UAAZ,EAAwBE,cAAxB,CA/BM,CAAT;;AAiCA,MAAIH,OAAJ,EAAa;AACX,wBAAO,QAAC,SAAD;AAAW,MAAA,SAAS,EAAEE;AAAtB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBAAO;AAAA,cAAMJ,SAAS,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAnB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,eAAeH,YAAf","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ErrorComp from \"../UI/ErrorComp\";\r\n\r\nimport Loading from \"../UI/Loading\";\r\n\r\nfunction Specificpost() {\r\n  const [isData, setIsData] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  const [isErrorData, setIsErrorData] = useState(\r\n    \"Sorry but the page you are looking for does not exist.\"\r\n  );\r\n  useEffect(() => {\r\n    let isMounted = true; // Flag to track if the component is mounted\r\n\r\n    setIsLoading(true);\r\n\r\n    fetch(\"/api/post/postitem\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        //console.log(data);\r\n        if (isMounted) {\r\n          setIsData(data);\r\n          if (data.message) {\r\n            setIsErrorData(data.message);\r\n            setIsError(true);\r\n          }\r\n          setIsLoading(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        if (isMounted) {\r\n          setIsError(true);\r\n          setIsErrorData(\"An error occurred while fetching data.\");\r\n          setIsLoading(false);\r\n        }\r\n        console.error(\"Fetch error:\", error);\r\n      });\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      isMounted = false; // Set flag to false when component is unmounted\r\n    };\r\n  }, [setIsData, setIsError, setIsErrorData]);\r\n\r\n  if (isError) {\r\n    return <ErrorComp errorData={isErrorData} />;\r\n  }\r\n\r\n  return <div>{isLoading && <Loading />}</div>;\r\n}\r\n\r\nexport default Specificpost;\r\n"]},"metadata":{},"sourceType":"module"}