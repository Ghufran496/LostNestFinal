{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { getSession } from \"next-auth/client\";\nimport { connectToDatabase } from \"../../lib/db\";\nimport UserProfile from \"../../components/profile/user-profile\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport Loading from \"../../components/UI/Loading\";\nimport { useEffect, useState } from \"react\";\n\nfunction ProfilePage(props) {\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    profileData\n  } = props;\n\n  if (!profileData) {\n    return /*#__PURE__*/_jsx(Loading, {}); // Render loading spinner if no data is available\n  }\n\n  useEffect(() => {\n    setIsLoading(true);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 2000); // Simulate a loading time of 5 seconds\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsx(Loading, {});\n  }\n\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"Your Profile\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: \"Your Profile content\"\n      }), /*#__PURE__*/_jsx(\"link\", {\n        rel: \"icon\",\n        href: \"/images/logos.png\"\n      })]\n    }), /*#__PURE__*/_jsx(\"p\", {\n      children: profileData.name\n    })]\n  });\n}\n\nexport async function getServerSideProps(context) {\n  const session = await getSession({\n    req: context.req\n  });\n\n  if (!session) {\n    return {\n      redirect: {\n        destination: \"/auth\",\n        permanent: false\n      }\n    };\n  }\n\n  const userEmail = session.user.email;\n  const client = await connectToDatabase();\n  const usersCollection = client.db().collection(\"users\");\n  const user = await usersCollection.findOne({\n    email: userEmail\n  }, {\n    projection: {\n      password: 0\n    }\n  });\n  return {\n    props: {\n      session,\n      profileData: JSON.parse(JSON.stringify(user))\n    }\n  };\n}\nexport default ProfilePage;","map":null,"metadata":{},"sourceType":"module"}