{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\FYP\\\\LostNestfyp\\\\lostnestprj\\\\components\\\\MyResponse\\\\ResponseItem.js\";\nimport React, { useState } from \"react\";\nimport classes from \"./ResponseItem.module.css\";\n\nconst ResponseItem = props => {\n  const {\n    _id,\n    enteredContact,\n    ItemTitle,\n    PostID,\n    PosterID,\n    Question,\n    ValidatorDateTime,\n    Answer\n  } = props.data;\n  const {\n    0: isDivVisible,\n    1: setIsDivVisible\n  } = useState(false);\n  const {\n    0: isItemDelete,\n    1: setIsItemDelete\n  } = useState(false);\n\n  async function deletePostData(DeleteResponse) {\n    try {\n      const response = await fetch(\"/api/answers/deleteResponse\", {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          DeleteResponse\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n\n      if (!response.ok) {\n        const errorMessage = await response.text();\n        throw new Error(`HTTP error! Status: ${response.status}, Message: ${errorMessage}`);\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error(\"Error deleting response:\", error.message);\n      throw error;\n    }\n  }\n\n  const handleButtonClick = () => {\n    setIsDivVisible(!isDivVisible);\n  };\n\n  const deleteButtonClick = async () => {\n    setIsItemDelete(true);\n\n    try {\n      const result = await deletePostData(_id); //   // Handle the result if needed\n\n      window.location.reload();\n      setIsItemDelete(false);\n    } catch (error) {\n      // Handle the error, e.g., show an error message to the user\n      console.error(\"Error deleting response:\", error.message);\n      setIsItemDelete(false);\n    }\n  };\n\n  if (isItemDelete) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: \"1.5rem\",\n        fontWeight: \"bold\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: \"Item Is Being Deleted...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n  return (\n    /*#__PURE__*/\n    // <li\n    //   style={{\n    //     fontSize: \"1.5rem\",\n    //     border: \"1px solid #311465\",\n    //     padding: \"2rem 8rem 2rem 2rem\",\n    //     boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\n    //     fontWeight: \"400\",\n    //     borderRadius: \"2.5rem\",\n    //     position: \"relative\", // Necessary for positioning the hidden div\n    //   }}\n    // >\n    //   <h3>\n    //     Item ID: <span className={classes.spaner}>{PostID}</span>\n    //   </h3>\n    //   <h3>\n    //     Item Name: <span className={classes.spaner}>{ItemTitle}</span>\n    //   </h3>\n    //   <h3>\n    //     Question: <span className={classes.spaner}>{Question}</span>\n    //   </h3>\n    //   <h3>\n    //     Your Answer: <span className={classes.spaner}>{Answer}</span>\n    //   </h3>\n    //   <h3>\n    //     Time: <span className={classes.spaner}>{ValidatorDateTime}</span>\n    //   </h3>\n    //   {isDivVisible || (\n    //     <button className={classes.btn} onClick={handleButtonClick}>\n    //       Show Response\n    //     </button>\n    //   )}\n    //   {isDivVisible && (\n    //     <div\n    //       style={{\n    //         padding: \"1rem\",\n    //         display: \"flex\",\n    //         flexDirection: \"column\",\n    //         justifyContent: \"center\",\n    //         alignItems: \"center\",\n    //         borderRadius: \"5rem\",\n    //       }}\n    //     >\n    //       <h4>\n    //         Response :{\" \"}\n    //         <span style={{ color: \"#311465\" }}>{enteredContact}</span>\n    //       </h4>\n    //       <div\n    //         style={{\n    //           display: \"grid\",\n    //           gridTemplateColumns: \"1fr 1fr\",\n    //           gridGap: \"1rem\",\n    //         }}\n    //       >\n    //         <button className={classes.btn} onClick={handleButtonClick}>\n    //           Close\n    //         </button>\n    //         <button className={classes.btn} onClick={deleteButtonClick}>\n    //           Delete\n    //         </button>\n    //       </div>\n    //     </div>\n    //   )}\n    // </li>\n    _jsxDEV(\"li\", {\n      style: {\n        fontSize: \"1.5rem\",\n        border: \"1px solid #311465\",\n        padding: \"2rem\",\n        boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\n        fontWeight: \"400\",\n        borderRadius: \"1rem\",\n        position: \"relative\",\n        overflow: \"hidden\" // Hide overflow for a cleaner look\n\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: \"#311465\",\n          height: \"100%\",\n          width: \"4px\",\n          position: \"absolute\",\n          left: 0,\n          top: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"4rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Item ID: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.spaner,\n            children: PostID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Item Name: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.spaner,\n            children: ItemTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Question: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.spaner,\n            children: Question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Your Answer: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.spaner,\n            children: Answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Time: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.spaner,\n            children: ValidatorDateTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 9\n        }, this), isDivVisible || /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.btn,\n          onClick: handleButtonClick,\n          children: \"Show Response\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), isDivVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"1rem\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            borderRadius: \"1rem\",\n            background: \"#f4f4f4\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Response :\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"#311465\"\n              },\n              children: enteredContact\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"grid\",\n              gridTemplateColumns: \"1fr 1fr\",\n              gridGap: \"1rem\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: classes.btn,\n              onClick: handleButtonClick,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: classes.btn,\n              onClick: deleteButtonClick,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }, this)\n  );\n};\n\nexport default ResponseItem;","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/components/MyResponse/ResponseItem.js"],"names":["React","useState","classes","ResponseItem","props","_id","enteredContact","ItemTitle","PostID","PosterID","Question","ValidatorDateTime","Answer","data","isDivVisible","setIsDivVisible","isItemDelete","setIsItemDelete","deletePostData","DeleteResponse","response","fetch","method","body","JSON","stringify","headers","ok","errorMessage","text","Error","status","json","error","console","message","handleButtonClick","deleteButtonClick","result","window","location","reload","fontSize","fontWeight","display","justifyContent","alignItems","border","padding","boxShadow","borderRadius","position","overflow","background","height","width","left","top","marginLeft","spaner","btn","flexDirection","color","gridTemplateColumns","gridGap"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,2BAApB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAM;AACJC,IAAAA,GADI;AAEJC,IAAAA,cAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,MAJI;AAKJC,IAAAA,QALI;AAMJC,IAAAA,QANI;AAOJC,IAAAA,iBAPI;AAQJC,IAAAA;AARI,MASFR,KAAK,CAACS,IATV;AAUA,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCd,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM;AAAA,OAACe,YAAD;AAAA,OAAeC;AAAf,MAAkChB,QAAQ,CAAC,KAAD,CAAhD;;AACA,iBAAeiB,cAAf,CAA8BC,cAA9B,EAA8C;AAC5C,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgC;AAC1DC,QAAAA,MAAM,EAAE,QADkD;AAE1DC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBN,UAAAA;AADmB,SAAf,CAFoD;AAK1DO,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AALiD,OAAhC,CAA5B;;AAUA,UAAI,CAACN,QAAQ,CAACO,EAAd,EAAkB;AAChB,cAAMC,YAAY,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAA3B;AACA,cAAM,IAAIC,KAAJ,CACH,uBAAsBV,QAAQ,CAACW,MAAO,cAAaH,YAAa,EAD7D,CAAN;AAGD;;AAED,YAAMf,IAAI,GAAG,MAAMO,QAAQ,CAACY,IAAT,EAAnB;AACA,aAAOnB,IAAP;AACD,KApBD,CAoBE,OAAOoB,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,0BAAd,EAA0CA,KAAK,CAACE,OAAhD;AACA,YAAMF,KAAN;AACD;AACF;;AAED,QAAMG,iBAAiB,GAAG,MAAM;AAC9BrB,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD,GAFD;;AAIA,QAAMuB,iBAAiB,GAAG,YAAY;AACpCpB,IAAAA,eAAe,CAAC,IAAD,CAAf;;AACA,QAAI;AACF,YAAMqB,MAAM,GAAG,MAAMpB,cAAc,CAACb,GAAD,CAAnC,CADE,CAEF;;AACAkC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACAxB,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD,KALD,CAKE,OAAOgB,KAAP,EAAc;AACd;AACAC,MAAAA,OAAO,CAACD,KAAR,CAAc,0BAAd,EAA0CA,KAAK,CAACE,OAAhD;AACAlB,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD;AACF,GAZD;;AAaA,MAAID,YAAJ,EAAkB;AAChB,wBACE;AACE,MAAA,KAAK,EAAE;AACL0B,QAAAA,QAAQ,EAAE,QADL;AAELC,QAAAA,UAAU,EAAE,MAFP;AAGLC,QAAAA,OAAO,EAAE,MAHJ;AAILC,QAAAA,cAAc,EAAE,QAJX;AAKLC,QAAAA,UAAU,EAAE;AALP,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAED;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,MAAA,KAAK,EAAE;AACLJ,QAAAA,QAAQ,EAAE,QADL;AAELK,QAAAA,MAAM,EAAE,mBAFH;AAGLC,QAAAA,OAAO,EAAE,MAHJ;AAILC,QAAAA,SAAS,EAAE,8BAJN;AAKLN,QAAAA,UAAU,EAAE,KALP;AAMLO,QAAAA,YAAY,EAAE,MANT;AAOLC,QAAAA,QAAQ,EAAE,UAPL;AAQLC,QAAAA,QAAQ,EAAE,QARL,CAQe;;AARf,OADT;AAAA,8BAYE;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,UAAU,EAAE,SADP;AAELC,UAAAA,MAAM,EAAE,MAFH;AAGLC,UAAAA,KAAK,EAAE,KAHF;AAILJ,UAAAA,QAAQ,EAAE,UAJL;AAKLK,UAAAA,IAAI,EAAE,CALD;AAMLC,UAAAA,GAAG,EAAE;AANA;AADT;AAAA;AAAA;AAAA;AAAA,cAZF,eAsBE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAAZ;AAAA,gCACE;AAAA,+CACW;AAAM,YAAA,SAAS,EAAExD,OAAO,CAACyD,MAAzB;AAAA,sBAAkCnD;AAAlC;AAAA;AAAA;AAAA;AAAA,kBADX;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,iDACa;AAAM,YAAA,SAAS,EAAEN,OAAO,CAACyD,MAAzB;AAAA,sBAAkCpD;AAAlC;AAAA;AAAA;AAAA;AAAA,kBADb;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE;AAAA,gDACY;AAAM,YAAA,SAAS,EAAEL,OAAO,CAACyD,MAAzB;AAAA,sBAAkCjD;AAAlC;AAAA;AAAA;AAAA;AAAA,kBADZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAUE;AAAA,mDACe;AAAM,YAAA,SAAS,EAAER,OAAO,CAACyD,MAAzB;AAAA,sBAAkC/C;AAAlC;AAAA;AAAA;AAAA;AAAA,kBADf;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,eAaE;AAAA,4CACQ;AAAM,YAAA,SAAS,EAAEV,OAAO,CAACyD,MAAzB;AAAA,sBAAkChD;AAAlC;AAAA;AAAA;AAAA;AAAA,kBADR;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,EAiBGG,YAAY,iBACX;AAAQ,UAAA,SAAS,EAAEZ,OAAO,CAAC0D,GAA3B;AAAgC,UAAA,OAAO,EAAExB,iBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBJ,EAsBGtB,YAAY,iBACX;AACE,UAAA,KAAK,EAAE;AACLkC,YAAAA,OAAO,EAAE,MADJ;AAELJ,YAAAA,OAAO,EAAE,MAFJ;AAGLiB,YAAAA,aAAa,EAAE,QAHV;AAILhB,YAAAA,cAAc,EAAE,QAJX;AAKLC,YAAAA,UAAU,EAAE,QALP;AAMLI,YAAAA,YAAY,EAAE,MANT;AAOLG,YAAAA,UAAU,EAAE;AAPP,WADT;AAAA,kCAWE;AAAA,qCACa,GADb,eAEE;AAAM,cAAA,KAAK,EAAE;AAAES,gBAAAA,KAAK,EAAE;AAAT,eAAb;AAAA,wBAAoCxD;AAApC;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,eAeE;AACE,YAAA,KAAK,EAAE;AACLsC,cAAAA,OAAO,EAAE,MADJ;AAELmB,cAAAA,mBAAmB,EAAE,SAFhB;AAGLC,cAAAA,OAAO,EAAE;AAHJ,aADT;AAAA,oCAOE;AAAQ,cAAA,SAAS,EAAE9D,OAAO,CAAC0D,GAA3B;AAAgC,cAAA,OAAO,EAAExB,iBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,eAUE;AAAQ,cAAA,SAAS,EAAElC,OAAO,CAAC0D,GAA3B;AAAgC,cAAA,OAAO,EAAEvB,iBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAjEF;AAgJD,CAzND;;AA2NA,eAAelC,YAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport classes from \"./ResponseItem.module.css\";\r\n\r\nconst ResponseItem = (props) => {\r\n  const {\r\n    _id,\r\n    enteredContact,\r\n    ItemTitle,\r\n    PostID,\r\n    PosterID,\r\n    Question,\r\n    ValidatorDateTime,\r\n    Answer,\r\n  } = props.data;\r\n  const [isDivVisible, setIsDivVisible] = useState(false);\r\n  const [isItemDelete, setIsItemDelete] = useState(false);\r\n  async function deletePostData(DeleteResponse) {\r\n    try {\r\n      const response = await fetch(\"/api/answers/deleteResponse\", {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({\r\n          DeleteResponse,\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorMessage = await response.text();\r\n        throw new Error(\r\n          `HTTP error! Status: ${response.status}, Message: ${errorMessage}`\r\n        );\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error(\"Error deleting response:\", error.message);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  const handleButtonClick = () => {\r\n    setIsDivVisible(!isDivVisible);\r\n  };\r\n\r\n  const deleteButtonClick = async () => {\r\n    setIsItemDelete(true);\r\n    try {\r\n      const result = await deletePostData(_id);\r\n      //   // Handle the result if needed\r\n      window.location.reload();\r\n      setIsItemDelete(false);\r\n    } catch (error) {\r\n      // Handle the error, e.g., show an error message to the user\r\n      console.error(\"Error deleting response:\", error.message);\r\n      setIsItemDelete(false);\r\n    }\r\n  };\r\n  if (isItemDelete) {\r\n    return (\r\n      <p\r\n        style={{\r\n          fontSize: \"1.5rem\",\r\n          fontWeight: \"bold\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        Item Is Being Deleted...\r\n      </p>\r\n    );\r\n  }\r\n\r\n  return (\r\n    // <li\r\n    //   style={{\r\n    //     fontSize: \"1.5rem\",\r\n    //     border: \"1px solid #311465\",\r\n    //     padding: \"2rem 8rem 2rem 2rem\",\r\n    //     boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\r\n    //     fontWeight: \"400\",\r\n    //     borderRadius: \"2.5rem\",\r\n    //     position: \"relative\", // Necessary for positioning the hidden div\r\n    //   }}\r\n    // >\r\n    //   <h3>\r\n    //     Item ID: <span className={classes.spaner}>{PostID}</span>\r\n    //   </h3>\r\n    //   <h3>\r\n    //     Item Name: <span className={classes.spaner}>{ItemTitle}</span>\r\n    //   </h3>\r\n    //   <h3>\r\n    //     Question: <span className={classes.spaner}>{Question}</span>\r\n    //   </h3>\r\n    //   <h3>\r\n    //     Your Answer: <span className={classes.spaner}>{Answer}</span>\r\n    //   </h3>\r\n    //   <h3>\r\n    //     Time: <span className={classes.spaner}>{ValidatorDateTime}</span>\r\n    //   </h3>\r\n\r\n    //   {isDivVisible || (\r\n    //     <button className={classes.btn} onClick={handleButtonClick}>\r\n    //       Show Response\r\n    //     </button>\r\n    //   )}\r\n    //   {isDivVisible && (\r\n    //     <div\r\n    //       style={{\r\n    //         padding: \"1rem\",\r\n    //         display: \"flex\",\r\n    //         flexDirection: \"column\",\r\n    //         justifyContent: \"center\",\r\n    //         alignItems: \"center\",\r\n    //         borderRadius: \"5rem\",\r\n    //       }}\r\n    //     >\r\n    //       <h4>\r\n    //         Response :{\" \"}\r\n    //         <span style={{ color: \"#311465\" }}>{enteredContact}</span>\r\n    //       </h4>\r\n    //       <div\r\n    //         style={{\r\n    //           display: \"grid\",\r\n    //           gridTemplateColumns: \"1fr 1fr\",\r\n    //           gridGap: \"1rem\",\r\n    //         }}\r\n    //       >\r\n    //         <button className={classes.btn} onClick={handleButtonClick}>\r\n    //           Close\r\n    //         </button>\r\n    //         <button className={classes.btn} onClick={deleteButtonClick}>\r\n    //           Delete\r\n    //         </button>\r\n    //       </div>\r\n    //     </div>\r\n    //   )}\r\n    // </li>\r\n    <li\r\n      style={{\r\n        fontSize: \"1.5rem\",\r\n        border: \"1px solid #311465\",\r\n        padding: \"2rem\",\r\n        boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\r\n        fontWeight: \"400\",\r\n        borderRadius: \"1rem\",\r\n        position: \"relative\",\r\n        overflow: \"hidden\", // Hide overflow for a cleaner look\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          background: \"#311465\",\r\n          height: \"100%\",\r\n          width: \"4px\",\r\n          position: \"absolute\",\r\n          left: 0,\r\n          top: 0,\r\n        }}\r\n      ></div>\r\n      <div style={{ marginLeft: \"4rem\" }}>\r\n        <h3>\r\n          Item ID: <span className={classes.spaner}>{PostID}</span>\r\n        </h3>\r\n        <h3>\r\n          Item Name: <span className={classes.spaner}>{ItemTitle}</span>\r\n        </h3>\r\n        <h3>\r\n          Question: <span className={classes.spaner}>{Question}</span>\r\n        </h3>\r\n        <h3>\r\n          Your Answer: <span className={classes.spaner}>{Answer}</span>\r\n        </h3>\r\n        <h3>\r\n          Time: <span className={classes.spaner}>{ValidatorDateTime}</span>\r\n        </h3>\r\n\r\n        {isDivVisible || (\r\n          <button className={classes.btn} onClick={handleButtonClick}>\r\n            Show Response\r\n          </button>\r\n        )}\r\n        {isDivVisible && (\r\n          <div\r\n            style={{\r\n              padding: \"1rem\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              borderRadius: \"1rem\",\r\n              background: \"#f4f4f4\",\r\n            }}\r\n          >\r\n            <h4>\r\n              Response :{\" \"}\r\n              <span style={{ color: \"#311465\" }}>{enteredContact}</span>\r\n            </h4>\r\n            <div\r\n              style={{\r\n                display: \"grid\",\r\n                gridTemplateColumns: \"1fr 1fr\",\r\n                gridGap: \"1rem\",\r\n              }}\r\n            >\r\n              <button className={classes.btn} onClick={handleButtonClick}>\r\n                Close\r\n              </button>\r\n              <button className={classes.btn} onClick={deleteButtonClick}>\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ResponseItem;\r\n"]},"metadata":{},"sourceType":"module"}