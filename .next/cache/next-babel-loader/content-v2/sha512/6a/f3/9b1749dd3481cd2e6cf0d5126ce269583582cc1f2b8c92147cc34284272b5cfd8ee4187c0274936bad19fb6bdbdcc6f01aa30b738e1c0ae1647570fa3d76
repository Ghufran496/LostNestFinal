{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { Fragment } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Loading from \"../UI/Loading\";\n\nfunction ProfileFront() {\n  const {\n    0: isData,\n    1: setIsData\n  } = useState(\"\");\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(\"/api/profile/profiledata\").then(response => response.json()).then(data => {\n      // console.log(data);\n      setIsData(data);\n    });\n    setIsLoading(false);\n  }, [setIsData]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsx(Loading, {});\n  }\n\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      style: {\n        fontSize: \"5rem\",\n        color: \"blue\"\n      },\n      children: \"i am profile front\"\n    }), /*#__PURE__*/_jsx(\"p\", {\n      children: isData.name\n    })]\n  });\n}\n\nexport default ProfileFront;\n/*\r\n\r\n const [isData, setIsData] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    fetch(\"/api/post/postitem\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // console.log(data);\r\n        setIsData(data);\r\n      });\r\n    setIsLoading(false);\r\n  }, [setIsData]);*/","map":null,"metadata":{},"sourceType":"module"}