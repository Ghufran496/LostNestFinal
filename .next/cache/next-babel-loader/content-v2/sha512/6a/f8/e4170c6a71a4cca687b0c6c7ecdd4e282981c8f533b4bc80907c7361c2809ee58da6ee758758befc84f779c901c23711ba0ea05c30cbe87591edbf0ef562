{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { Fragment } from \"react\";\nimport classes from \"./AForm.module.css\";\nimport DetailForm from \"./DetailForm\";\nimport { useState } from \"react\";\n\nfunction AForm(props) {\n  const {\n    _id,\n    Answer,\n    ItemTitle,\n    PostID,\n    PosterID,\n    Question,\n    SubmittedDateTime\n  } = props.data2;\n  const {\n    0: isYes,\n    1: setIsYes\n  } = useState(false);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n\n  const yesHandler = () => {\n    setIsYes(true);\n  };\n\n  async function sendMessage(enteredInformations, ItemTitle, PostID, PosterID, Question, combinedDateTime) {\n    const response = await fetch(\"/api/answers/sendResponse\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        enteredInformations,\n        ItemTitle,\n        PostID,\n        PosterID,\n        Question,\n        combinedDateTime,\n        Answer\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n\n    if (!response.ok) {\n      setIsLoading(false);\n    }\n\n    return data;\n  }\n\n  const currentDate = new Date();\n  const formattedDate = currentDate.toLocaleDateString(\"en-US\");\n  const formattedTime = currentDate.toLocaleTimeString(\"en-US\");\n  const combinedDateTime = `${formattedDate} ${formattedTime}`;\n\n  const noHandler = async event => {\n    event.preventDefault();\n    setIsLoading(true);\n    const enteredInformations = \"Responder has nullified the validation.\";\n    const result = await sendMessage(enteredInformations, ItemTitle, PostID, PosterID, Question, combinedDateTime, Answer);\n\n    if (props.oncancle) {\n      props.oncancle();\n    }\n\n    setIsLoading(false);\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      style: {\n        fontSize: \"1.5rem\"\n      },\n      children: \"Submiting...\"\n    });\n  }\n\n  return /*#__PURE__*/_jsx(Fragment, {\n    children: isYes ? /*#__PURE__*/_jsx(DetailForm, {\n      close: props.oncancle,\n      senderData: props.data2\n    }) : /*#__PURE__*/_jsxs(\"div\", {\n      className: classes.diver,\n      children: [/*#__PURE__*/_jsx(\"h3\", {\n        children: SubmittedDateTime\n      }), /*#__PURE__*/_jsx(\"h2\", {\n        children: \"Question?\"\n      }), /*#__PURE__*/_jsx(\"p\", {\n        className: classes.para1,\n        children: Question\n      }), /*#__PURE__*/_jsx(\"h2\", {\n        children: \"Answer\"\n      }), /*#__PURE__*/_jsx(\"p\", {\n        className: classes.para1,\n        children: Answer\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: classes.btndiver,\n        children: [/*#__PURE__*/_jsx(\"button\", {\n          className: classes.button90,\n          type: \"button\",\n          role: \"button\",\n          onClick: yesHandler,\n          children: \"Yes\"\n        }), /*#__PURE__*/_jsx(\"button\", {\n          className: classes.button90,\n          type: \"button\",\n          role: \"button\",\n          onClick: noHandler,\n          children: \"No\"\n        }), /*#__PURE__*/_jsx(\"button\", {\n          className: classes.button90,\n          type: \"button\",\n          role: \"button\",\n          onClick: props.oncancle,\n          children: \"Close\"\n        })]\n      })]\n    })\n  });\n}\n\nexport default AForm;","map":null,"metadata":{},"sourceType":"module"}