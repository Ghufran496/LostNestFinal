{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\FYP\\\\LostNestfyp\\\\lostnestprj\\\\components\\\\MyResponse\\\\ResponseItem.js\";\nimport React, { useState } from \"react\";\nimport classes from \"./ResponseItem.module.css\";\n\nconst ResponseItem = props => {\n  const {\n    _id,\n    enteredContact,\n    ItemTitle,\n    PostID,\n    PosterID,\n    Question,\n    ValidatorDateTime,\n    Answer\n  } = props.data;\n  const {\n    0: isDivVisible,\n    1: setIsDivVisible\n  } = useState(false);\n\n  async function deletePostData(DeleteResponse) {\n    const response = await fetch(\"/api/post/postitem\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        Type,\n        Category,\n        Title,\n        Description,\n        Question,\n        Date,\n        ReducedImg: imageInbase64\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n\n    if (!response.ok) {\n      setIsErrorData(data.message);\n      setIsLoading(false);\n      setIsError(true);\n    }\n\n    return data;\n  }\n\n  const handleButtonClick = () => {\n    setIsDivVisible(!isDivVisible);\n  };\n\n  const deleteButtonClick = async () => {\n    const result = await deletePostData(_id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    style: {\n      fontSize: \"1.5rem\",\n      border: \"1px solid #311465\",\n      padding: \"2rem 8rem 2rem 2rem\",\n      textTransform: \"capitalize\",\n      boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\n      fontWeight: \"400\",\n      borderRadius: \"2.5rem\",\n      position: \"relative\" // Necessary for positioning the hidden div\n\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Item ID: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.spaner,\n        children: PostID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Item Name: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.spaner,\n        children: ItemTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Question: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.spaner,\n        children: Question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Your Answer: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.spaner,\n        children: Answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Time: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.spaner,\n        children: ValidatorDateTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), isDivVisible || /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.btn,\n      onClick: handleButtonClick,\n      children: \"Show Response\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), isDivVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"1rem\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        borderRadius: \"5rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\" Response: \", enteredContact]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"1fr 1fr\",\n          gridGap: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.btn,\n          onClick: handleButtonClick,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.btn,\n          onClick: deleteButtonClick,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ResponseItem;","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/components/MyResponse/ResponseItem.js"],"names":["React","useState","classes","ResponseItem","props","_id","enteredContact","ItemTitle","PostID","PosterID","Question","ValidatorDateTime","Answer","data","isDivVisible","setIsDivVisible","deletePostData","DeleteResponse","response","fetch","method","body","JSON","stringify","Type","Category","Title","Description","Date","ReducedImg","imageInbase64","headers","json","ok","setIsErrorData","message","setIsLoading","setIsError","handleButtonClick","deleteButtonClick","result","fontSize","border","padding","textTransform","boxShadow","fontWeight","borderRadius","position","spaner","btn","display","flexDirection","justifyContent","alignItems","gridTemplateColumns","gridGap"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport classes from \"./ResponseItem.module.css\";\r\n\r\nconst ResponseItem = (props) => {\r\n  const {\r\n    _id,\r\n    enteredContact,\r\n    ItemTitle,\r\n    PostID,\r\n    PosterID,\r\n    Question,\r\n    ValidatorDateTime,\r\n    Answer,\r\n  } = props.data;\r\n  const [isDivVisible, setIsDivVisible] = useState(false);\r\n\r\n  async function deletePostData(DeleteResponse) {\r\n    const response = await fetch(\"/api/post/postitem\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        Type,\r\n        Category,\r\n        Title,\r\n        Description,\r\n        Question,\r\n        Date,\r\n        ReducedImg: imageInbase64,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      setIsErrorData(data.message);\r\n      setIsLoading(false);\r\n      setIsError(true);\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  const handleButtonClick = () => {\r\n    setIsDivVisible(!isDivVisible);\r\n  };\r\n\r\n  const deleteButtonClick = async () => {\r\n    const result = await deletePostData(_id);\r\n  };\r\n\r\n  return (\r\n    <li\r\n      style={{\r\n        fontSize: \"1.5rem\",\r\n        border: \"1px solid #311465\",\r\n        padding: \"2rem 8rem 2rem 2rem\",\r\n        textTransform: \"capitalize\",\r\n        boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\r\n        fontWeight: \"400\",\r\n        borderRadius: \"2.5rem\",\r\n        position: \"relative\", // Necessary for positioning the hidden div\r\n      }}\r\n    >\r\n      <h3>\r\n        Item ID: <span className={classes.spaner}>{PostID}</span>\r\n      </h3>\r\n      <h3>\r\n        Item Name: <span className={classes.spaner}>{ItemTitle}</span>\r\n      </h3>\r\n      <h3>\r\n        Question: <span className={classes.spaner}>{Question}</span>\r\n      </h3>\r\n      <h3>\r\n        Your Answer: <span className={classes.spaner}>{Answer}</span>\r\n      </h3>\r\n      <h3>\r\n        Time: <span className={classes.spaner}>{ValidatorDateTime}</span>\r\n      </h3>\r\n\r\n      {isDivVisible || (\r\n        <button className={classes.btn} onClick={handleButtonClick}>\r\n          Show Response\r\n        </button>\r\n      )}\r\n      {isDivVisible && (\r\n        <div\r\n          style={{\r\n            padding: \"1rem\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            borderRadius: \"5rem\",\r\n          }}\r\n        >\r\n          <h4> Response: {enteredContact}</h4>\r\n          <div\r\n            style={{\r\n              display: \"grid\",\r\n              gridTemplateColumns: \"1fr 1fr\",\r\n              gridGap: \"1rem\",\r\n            }}\r\n          >\r\n            <button className={classes.btn} onClick={handleButtonClick}>\r\n              Close\r\n            </button>\r\n            <button className={classes.btn} onClick={deleteButtonClick}>\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ResponseItem;\r\n"]},"metadata":{},"sourceType":"module"}