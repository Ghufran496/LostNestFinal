{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"G:/FYP/LostNestfyp/lostnestprj/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"G:\\\\FYP\\\\LostNestfyp\\\\lostnestprj\\\\pages\\\\dashboard\\\\[itemid].js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\n\nfunction ItemDetailPage() {\n  _s();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      isData = _useState2[0],\n      setIsData = _useState2[1];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"I am details page\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n\n_s(ItemDetailPage, \"Xv6zLuBANSYRygCPRKSofIkj7S4=\");\n\n_c = ItemDetailPage;\nexport var __N_SSG = true;\nexport default ItemDetailPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemDetailPage\");","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/pages/dashboard/[itemid].js"],"names":["React","useEffect","ItemDetailPage","useState","isData","setIsData"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AAAA,kBACIC,QAAQ,CAAC,EAAD,CADZ;AAAA;AAAA,MACjBC,MADiB;AAAA,MACTC,SADS;;AAExB,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAHQH,c;;KAAAA,c;;AAkCT,eAAeA,cAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nfunction ItemDetailPage() {\r\n  const [isData, setIsData] = useState(\"\");\r\n  return <div>I am details page</div>;\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const ItemId = context.params.itemid;\r\n\r\n  fetch(\"/api/post/postitem\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      // console.log(data);\r\n      setIsData(data);\r\n    });\r\n  const event = await getEventById(ItemId);\r\n\r\n  return {\r\n    props: {\r\n      selectedEvent: event,\r\n    },\r\n    revalidate: 30,\r\n  };\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const events = await getFeaturedEvents();\r\n\r\n  const paths = events.map((event) => ({ params: { eventId: event.id } }));\r\n\r\n  return {\r\n    paths: paths,\r\n    fallback: \"blocking\",\r\n  };\r\n}\r\nexport default ItemDetailPage;\r\n"]},"metadata":{},"sourceType":"module"}