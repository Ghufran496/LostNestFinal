{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport classes from \"./FoundForm.module.css\";\nimport Button from \"../UI/Button\";\nimport { useRef, useState } from \"react\";\nimport Loader from \"../UI/Loader\";\n\nasync function sendPostData(Type, Category, Title, Description, Question, Date, imageInbase64) {\n  const response = await fetch(\"/api/post/postitem\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      Type,\n      Category,\n      Title,\n      Description,\n      Question,\n      Date,\n      ReducedImg: imageInbase64\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Something went wrong!\");\n  }\n\n  return data;\n}\n\nfunction FoundForm() {\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: isImage,\n    1: setIsImage\n  } = useState(\"\");\n  const typeInputRef = useRef();\n  const categoryInputRef = useRef();\n  const titleInputRef = useRef();\n  const descriptionInputRef = useRef();\n  const questionInputRef = useRef();\n  const dateInputRef = useRef();\n\n  function converttobase64(e) {\n    // console.log(e);\n    var reader = new FileReader();\n    reader.readAsDataURL(e.target.files[0]);\n\n    reader.onload = () => {\n      //console.log(reader.result);\n      setIsImage(reader.result);\n    };\n\n    reader.onerror = () => {\n      console.log(\"error\", error);\n    };\n  }\n\n  const postSubmitHandler = async event => {\n    event.preventDefault();\n    setIsLoading(true);\n    const enteredType = typeInputRef.current.value;\n    const enteredCategory = categoryInputRef.current.value;\n    const enteredTitle = titleInputRef.current.value;\n    const enteredDescription = descriptionInputRef.current.value;\n    const enteredQuestion = questionInputRef.current.value;\n    const enteredDate = dateInputRef.current.value;\n    const humanReadableDate = new Date(enteredDate).toLocaleDateString(\"en-US\", {\n      day: \"numeric\",\n      month: \"long\",\n      year: \"numeric\"\n    });\n\n    try {\n      const result = await sendPostData(enteredType, enteredCategory, enteredTitle, enteredDescription, enteredQuestion, humanReadableDate, isImage);\n      console.log(result);\n      event.target.reset(); // This resets the form\n\n      setIsLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsx(Loader, {});\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(\"h1\", {\n      style: {\n        fontSize: \"5rem\"\n      },\n      children: \"Post new Item as Found Item\"\n    }), /*#__PURE__*/_jsx(\"h2\", {\n      children: \"Please Provide genunine Informations only.\"\n    }), /*#__PURE__*/_jsxs(\"form\", {\n      className: classes.form,\n      onSubmit: postSubmitHandler,\n      children: [/*#__PURE__*/_jsx(\"select\", {\n        name: \"item\",\n        className: classes.customselect,\n        ref: typeInputRef,\n        children: /*#__PURE__*/_jsx(\"option\", {\n          value: \"Found\",\n          children: \"Found\"\n        })\n      }), /*#__PURE__*/_jsxs(\"select\", {\n        name: \"category\",\n        className: classes.customselect,\n        ref: categoryInputRef,\n        children: [/*#__PURE__*/_jsx(\"option\", {\n          value: \"\",\n          disabled: true,\n          selected: true,\n          children: \"Category\"\n        }), /*#__PURE__*/_jsx(\"option\", {\n          value: \"Wallet\",\n          children: \"Wallet\"\n        }), /*#__PURE__*/_jsx(\"option\", {\n          value: \"ID Card / Student Card\",\n          children: \"ID Card / Student Card\"\n        }), /*#__PURE__*/_jsx(\"option\", {\n          value: \"Smart Phone / Laptop\",\n          children: \"Smart Phone / Laptop\"\n        }), /*#__PURE__*/_jsx(\"option\", {\n          value: \"Keys\",\n          children: \"Keys\"\n        }), /*#__PURE__*/_jsx(\"option\", {\n          value: \"Others\",\n          children: \"Others\"\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"name\",\n          style: {\n            fontSize: \"2rem\",\n            fontWeight: \"bolder\"\n          },\n          children: \"Item Name\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Title\",\n          className: classes.customselect,\n          ref: titleInputRef\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"description\",\n          style: {\n            fontSize: \"2rem\",\n            fontWeight: \"bolder\"\n          },\n          children: \"Description\"\n        }), /*#__PURE__*/_jsx(\"textarea\", {\n          type: \"text\",\n          name: \"description\",\n          placeholder: \"Description about item (like location etc...)\",\n          className: classes.customselect,\n          ref: descriptionInputRef,\n          rows: \"5\"\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"question\",\n          style: {\n            fontSize: \"2rem\",\n            fontWeight: \"bolder\"\n          },\n          children: \"Enter question based on an item.\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"text\",\n          name: \"question\",\n          placeholder: \"Ex:- What is the color of the phone?\",\n          className: classes.customselect,\n          ref: questionInputRef\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"date\",\n          style: {\n            fontSize: \"2rem\",\n            fontWeight: \"bolder\"\n          },\n          children: \"Select a Date:\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          id: \"date\",\n          className: classes.customselect,\n          ref: dateInputRef\n        })]\n      }), /*#__PURE__*/_jsx(\"input\", {\n        type: \"file\",\n        id: \"image\",\n        name: \"image\",\n        accept: \"image/*\",\n        className: classes.customselect,\n        onChange: converttobase64\n      }), /*#__PURE__*/_jsx(Button, {\n        content: \"Post\"\n      })]\n    }), /*#__PURE__*/_jsx(\"img\", {\n      width: 100,\n      height: 100,\n      src: isImage\n    })]\n  });\n}\n\nexport default FoundForm;","map":null,"metadata":{},"sourceType":"module"}