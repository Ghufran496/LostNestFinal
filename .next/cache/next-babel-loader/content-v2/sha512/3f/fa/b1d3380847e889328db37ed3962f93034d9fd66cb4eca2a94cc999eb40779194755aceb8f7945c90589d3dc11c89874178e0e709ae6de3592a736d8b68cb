{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport PostGrid from \"./PostGrid\";\nimport ErrorComp from \"../UI/ErrorComp\"; // import Loader from \"../UI/Loader\";\n\nimport Loading from \"../UI/Loading\";\n\nfunction AllItems() {\n  const {\n    0: isData,\n    1: setIsData\n  } = useState(\"\");\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: isError,\n    1: setIsError\n  } = useState(false);\n  const {\n    0: isErrorData,\n    1: setIsErrorData\n  } = useState(\"Sorry but the page you are looking for does not exist.\");\n  useEffect(() => {\n    let isMounted = true; // Flag to track if the component is mounted\n\n    setIsLoading(true);\n    fetch(\"/api/post/postitem\").then(response => response.json()).then(data => {\n      //console.log(\"data in client\" + data);\n      if (isMounted) {\n        setIsData(data);\n\n        if (data.message) {\n          setIsErrorData(data.message);\n          setIsError(true);\n        }\n\n        setIsLoading(false);\n      }\n    }).catch(error => {\n      if (isMounted) {\n        setIsError(true);\n        setIsErrorData(\"An error occurred while fetching data.\");\n        setIsLoading(false);\n      }\n\n      console.error(\"Fetch error:\", error);\n    }); //Cleanup function\n\n    return () => {\n      isMounted = false; // Set flag to false when component is unmounted\n    };\n  }, []);\n\n  if (isError) {\n    return /*#__PURE__*/_jsx(ErrorComp, {\n      errorData: isErrorData\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(PostGrid, {\n      data: isData\n    }), isLoading && /*#__PURE__*/_jsx(Loading, {})]\n  });\n}\n\nexport default AllItems;","map":null,"metadata":{},"sourceType":"module"}