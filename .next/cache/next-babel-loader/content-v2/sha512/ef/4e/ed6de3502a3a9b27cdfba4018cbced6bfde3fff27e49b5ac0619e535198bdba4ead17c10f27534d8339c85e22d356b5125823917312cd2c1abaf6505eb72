{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\FYP\\\\LostNestfyp\\\\lostnestprj\\\\pages\\\\dashboard\\\\[itemid].js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from \"react\"; //import { getPostsById, getAllPosts } from \"../../components/helpers/api-util\";\n\nimport { connectToDatabase } from \"../../lib/db\";\n\nfunction ItemDetailPage(props) {\n  const event = props.post; //console.log(event);\n  // console.log(event.Title);\n  // console.log(event[0].Title);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"I am details page \", event.Type]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n}\n\nexport async function getServerSideProps(context) {\n  const postId = context.params.itemid;\n  const client = await connectToDatabase();\n  const db = client.db();\n  const data = await db.collection(\"PostedItem\").find({}).toArray(); //console.log(data);\n\n  const events = [];\n\n  for (const key in data) {\n    events.push(_objectSpread({\n      id: key\n    }, data[key]));\n  } //console.log(events);\n  //const post = events.find((event) => event.id === postId);\n  //const post = data.filter((obj) => obj._id === postId);\n  //console.log(post);\n\n\n  if (!post) {\n    return {\n      notFound: true\n    };\n  }\n\n  delete post._id;\n  return {\n    props: {\n      post\n    }\n  };\n} // export async function getStaticPaths() {\n//   const events = await getAllPosts();\n//   const paths = events.map((event) => ({ params: { eventId: event.id } }));\n//   return {\n//     paths: paths,\n//     fallback: \"blocking\",\n//   };\n// }\n\nexport default ItemDetailPage;","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/pages/dashboard/[itemid].js"],"names":["React","useEffect","connectToDatabase","ItemDetailPage","props","event","post","Type","getServerSideProps","context","postId","params","itemid","client","db","data","collection","find","toArray","events","key","push","id","notFound","_id"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,iBAAT,QAAkC,cAAlC;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,QAAMC,KAAK,GAAGD,KAAK,CAACE,IAApB,CAD6B,CAG7B;AACA;AACA;;AACA,sBAAO;AAAA,qCAAwBD,KAAK,CAACE,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,OAAO,eAAeC,kBAAf,CAAkCC,OAAlC,EAA2C;AAChD,QAAMC,MAAM,GAAGD,OAAO,CAACE,MAAR,CAAeC,MAA9B;AAEA,QAAMC,MAAM,GAAG,MAAMX,iBAAiB,EAAtC;AACA,QAAMY,EAAE,GAAGD,MAAM,CAACC,EAAP,EAAX;AAEA,QAAMC,IAAI,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,YAAd,EAA4BC,IAA5B,CAAiC,EAAjC,EAAqCC,OAArC,EAAnB,CANgD,CAQhD;;AAEA,QAAMC,MAAM,GAAG,EAAf;;AAEA,OAAK,MAAMC,GAAX,IAAkBL,IAAlB,EAAwB;AACtBI,IAAAA,MAAM,CAACE,IAAP;AACEC,MAAAA,EAAE,EAAEF;AADN,OAEKL,IAAI,CAACK,GAAD,CAFT;AAID,GAjB+C,CAmBhD;AACA;AACA;AACA;;;AAEA,MAAI,CAACd,IAAL,EAAW;AACT,WAAO;AACLiB,MAAAA,QAAQ,EAAE;AADL,KAAP;AAGD;;AAED,SAAOjB,IAAI,CAACkB,GAAZ;AAEA,SAAO;AACLpB,IAAAA,KAAK,EAAE;AACLE,MAAAA;AADK;AADF,GAAP;AAKD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAeH,cAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\n//import { getPostsById, getAllPosts } from \"../../components/helpers/api-util\";\r\nimport { connectToDatabase } from \"../../lib/db\";\r\n\r\nfunction ItemDetailPage(props) {\r\n  const event = props.post;\r\n\r\n  //console.log(event);\r\n  // console.log(event.Title);\r\n  // console.log(event[0].Title);\r\n  return <div>I am details page {event.Type}</div>;\r\n}\r\n\r\nexport async function getServerSideProps(context) {\r\n  const postId = context.params.itemid;\r\n\r\n  const client = await connectToDatabase();\r\n  const db = client.db();\r\n\r\n  const data = await db.collection(\"PostedItem\").find({}).toArray();\r\n\r\n  //console.log(data);\r\n\r\n  const events = [];\r\n\r\n  for (const key in data) {\r\n    events.push({\r\n      id: key,\r\n      ...data[key],\r\n    });\r\n  }\r\n\r\n  //console.log(events);\r\n  //const post = events.find((event) => event.id === postId);\r\n  //const post = data.filter((obj) => obj._id === postId);\r\n  //console.log(post);\r\n\r\n  if (!post) {\r\n    return {\r\n      notFound: true,\r\n    };\r\n  }\r\n\r\n  delete post._id;\r\n\r\n  return {\r\n    props: {\r\n      post,\r\n    },\r\n  };\r\n}\r\n\r\n// export async function getStaticPaths() {\r\n//   const events = await getAllPosts();\r\n//   const paths = events.map((event) => ({ params: { eventId: event.id } }));\r\n//   return {\r\n//     paths: paths,\r\n//     fallback: \"blocking\",\r\n//   };\r\n// }\r\nexport default ItemDetailPage;\r\n"]},"metadata":{},"sourceType":"module"}