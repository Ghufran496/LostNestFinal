{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { getSession } from \"next-auth/client\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport ProfileFront from \"../../components/profile/profile-front\";\n\nfunction ProfilePage() {\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"Your Profile\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: \"Your Profile content\"\n      }), /*#__PURE__*/_jsx(\"link\", {\n        rel: \"icon\",\n        href: \"/images/logos.png\"\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      style: {\n        fontSize: \"2rem\",\n        color: \"#311465\",\n        textAlign: \"center\",\n        textTransform: \"uppercase\",\n        fontWeight: \"bolder\",\n        marginBottom: \"2rem\"\n      },\n      children: \"Profile\"\n    }), /*#__PURE__*/_jsx(ProfileFront, {})]\n  });\n}\n\nexport async function getServerSideProps(context) {\n  const session = await getSession({\n    req: context.req\n  });\n\n  if (!session) {\n    return {\n      redirect: {\n        destination: \"/auth\",\n        permanent: false\n      }\n    };\n  }\n\n  return {\n    props: {\n      session\n    }\n  };\n} // export async function getStaticProps(context) {\n//   console.log(\"regenerating...\");\n//   const session = await getSession({ req: context.req });\n//   if (!session) {\n//     return {\n//       redirect: {\n//         destination: \"/auth\",\n//         permanent: false,\n//       },\n//     };\n//   }\n//   return {\n//     props: {\n//       session,\n//     },\n//     revalidate: 60,\n//   };\n// }\n\nexport default ProfilePage;\n/*\r\n\r\n const [isData, setIsData] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    fetch(\"/api/post/postitem\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // console.log(data);\r\n        setIsData(data);\r\n      });\r\n    setIsLoading(false);\r\n  }, [setIsData]);*/\n\n/*\r\n\r\n\r\n  import { getSession } from \"next-auth/client\";\r\nimport { connectToDatabase } from \"../../lib/db\";\r\n//import UserProfile from \"../../components/profile/user-profile\";\r\nimport { Fragment } from \"react\";\r\nimport Head from \"next/head\";\r\nimport Loading from \"../../components/UI/Loading\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction ProfilePage(props) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { profileData } = props;\r\n  if (!profileData) {\r\n    return <Loading />; // Render loading spinner if no data is available\r\n  }\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    setTimeout(() => {\r\n      setIsLoading(false);\r\n    }, 2000); // Simulate a loading time of 5 seconds\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>Your Profile</title>\r\n        <meta name=\"description\" content=\"Your Profile content\" />\r\n        <link rel=\"icon\" href=\"/images/logos.png\" />\r\n      </Head>\r\n      <p>{profileData.name}</p>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport async function getServerSideProps(context) {\r\n  const session = await getSession({ req: context.req });\r\n\r\n  if (!session) {\r\n    return {\r\n      redirect: {\r\n        destination: \"/auth\",\r\n        permanent: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  const userEmail = session.user.email;\r\n  const client = await connectToDatabase();\r\n  const usersCollection = client.db().collection(\"users\");\r\n  const user = await usersCollection.findOne(\r\n    { email: userEmail },\r\n    { projection: { password: 0 } }\r\n  );\r\n\r\n  return {\r\n    props: {\r\n      session,\r\n      profileData: JSON.parse(JSON.stringify(user)),\r\n    },\r\n  };\r\n}\r\n\r\nexport default ProfilePage;*/","map":null,"metadata":{},"sourceType":"module"}