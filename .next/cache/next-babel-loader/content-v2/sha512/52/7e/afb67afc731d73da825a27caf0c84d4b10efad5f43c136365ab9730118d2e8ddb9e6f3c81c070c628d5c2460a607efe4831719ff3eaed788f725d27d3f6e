{"ast":null,"code":"import { connectToDatabase } from \"../../../lib/db\";\nimport { getSession } from \"next-auth/client\";\n\nasync function handler(req, res) {\n  if (req.method === \"POST\") {\n    const data = req.body;\n    const session = await getSession({\n      req: req\n    });\n\n    if (!session) {\n      res.status(401).json({\n        message: \"Not authenticated!\"\n      });\n      return;\n    }\n\n    const answerGivenBY = session.user.email;\n    const {\n      enteredAnswer,\n      postID,\n      ItemTitle,\n      Question,\n      combinedDateTime\n    } = data;\n\n    if (!enteredAnswer || !postID || !answerGivenBY) {\n      return res.status(400).json({\n        message: \"fields are empty!\"\n      });\n    }\n\n    const client = await connectToDatabase();\n    const db = client.db();\n    const result = await db.collection(\"QAnswers\").insertOne({\n      Answer: enteredAnswer,\n      PostID: postID,\n      PosterID: answerGivenBY,\n      ItemTitle: ItemTitle,\n      Question: Question,\n      SubmittedDateTime: combinedDateTime\n    });\n    res.status(201).json({\n      message: \"Answer Submitted\"\n    });\n    client.close();\n  } else {\n    return;\n  }\n}\n\nexport default handler;","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/pages/api/qresponse/QuestionResponse.js"],"names":["connectToDatabase","getSession","handler","req","res","method","data","body","session","status","json","message","answerGivenBY","user","email","enteredAnswer","postID","ItemTitle","Question","combinedDateTime","client","db","result","collection","insertOne","Answer","PostID","PosterID","SubmittedDateTime","close"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,iBAAlC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/B,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB,UAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB;AACA,UAAMC,OAAO,GAAG,MAAMP,UAAU,CAAC;AAAEE,MAAAA,GAAG,EAAEA;AAAP,KAAD,CAAhC;;AAEA,QAAI,CAACK,OAAL,EAAc;AACZJ,MAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB;AACA;AACD;;AAED,UAAMC,aAAa,GAAGJ,OAAO,CAACK,IAAR,CAAaC,KAAnC;AACA,UAAM;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA,MAAjB;AAAyBC,MAAAA,SAAzB;AAAoCC,MAAAA,QAApC;AAA8CC,MAAAA;AAA9C,QACJb,IADF;;AAGA,QAAI,CAACS,aAAD,IAAkB,CAACC,MAAnB,IAA6B,CAACJ,aAAlC,EAAiD;AAC/C,aAAOR,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB,CAAP;AACD;;AAED,UAAMS,MAAM,GAAG,MAAMpB,iBAAiB,EAAtC;AAEA,UAAMqB,EAAE,GAAGD,MAAM,CAACC,EAAP,EAAX;AAEA,UAAMC,MAAM,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,UAAd,EAA0BC,SAA1B,CAAoC;AACvDC,MAAAA,MAAM,EAAEV,aAD+C;AAEvDW,MAAAA,MAAM,EAAEV,MAF+C;AAGvDW,MAAAA,QAAQ,EAAEf,aAH6C;AAIvDK,MAAAA,SAAS,EAAEA,SAJ4C;AAKvDC,MAAAA,QAAQ,EAAEA,QAL6C;AAMvDU,MAAAA,iBAAiB,EAAET;AANoC,KAApC,CAArB;AASAf,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB;AACAS,IAAAA,MAAM,CAACS,KAAP;AACD,GAhCD,MAgCO;AACL;AACD;AACF;;AAED,eAAe3B,OAAf","sourcesContent":["import { connectToDatabase } from \"../../../lib/db\";\r\nimport { getSession } from \"next-auth/client\";\r\n\r\nasync function handler(req, res) {\r\n  if (req.method === \"POST\") {\r\n    const data = req.body;\r\n    const session = await getSession({ req: req });\r\n\r\n    if (!session) {\r\n      res.status(401).json({ message: \"Not authenticated!\" });\r\n      return;\r\n    }\r\n\r\n    const answerGivenBY = session.user.email;\r\n    const { enteredAnswer, postID, ItemTitle, Question, combinedDateTime } =\r\n      data;\r\n\r\n    if (!enteredAnswer || !postID || !answerGivenBY) {\r\n      return res.status(400).json({ message: \"fields are empty!\" });\r\n    }\r\n\r\n    const client = await connectToDatabase();\r\n\r\n    const db = client.db();\r\n\r\n    const result = await db.collection(\"QAnswers\").insertOne({\r\n      Answer: enteredAnswer,\r\n      PostID: postID,\r\n      PosterID: answerGivenBY,\r\n      ItemTitle: ItemTitle,\r\n      Question: Question,\r\n      SubmittedDateTime: combinedDateTime,\r\n    });\r\n\r\n    res.status(201).json({ message: \"Answer Submitted\" });\r\n    client.close();\r\n  } else {\r\n    return;\r\n  }\r\n}\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}