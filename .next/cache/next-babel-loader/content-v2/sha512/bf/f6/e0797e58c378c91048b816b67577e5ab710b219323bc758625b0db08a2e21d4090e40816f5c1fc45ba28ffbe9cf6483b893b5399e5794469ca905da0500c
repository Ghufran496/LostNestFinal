{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\FYP\\\\LostNestfyp\\\\lostnestprj\\\\pages\\\\dashboard\\\\[itemid].js\";\nimport React, { useEffect } from \"react\"; //import { getPostsById, getAllPosts } from \"../../components/helpers/api-util\";\n\nfunction ItemDetailPage(props) {\n  var event = props.post;\n  console.log(event); // console.log(event.Title);\n  // console.log(event[0].Title);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"I am details page \", event.Type, \" \", props.postId]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ItemDetailPage;\n// export async function getStaticPaths() {\n//   const events = await getAllPosts();\n//   const paths = events.map((event) => ({ params: { eventId: event.id } }));\n//   return {\n//     paths: paths,\n//     fallback: \"blocking\",\n//   };\n// }\nexport var __N_SSP = true;\nexport default ItemDetailPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemDetailPage\");","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/pages/dashboard/[itemid].js"],"names":["React","useEffect","ItemDetailPage","props","event","post","console","log","Type","postId"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,MAAMC,KAAK,GAAGD,KAAK,CAACE,IAApB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAH6B,CAI7B;AACA;;AACA,sBACE;AAAA,qCACqBA,KAAK,CAACI,IAD3B,OACkCL,KAAK,CAACM,MADxC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KAXQP,c;AAoCT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAeA,cAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\n//import { getPostsById, getAllPosts } from \"../../components/helpers/api-util\";\r\nimport { connectToDatabase } from \"../../lib/db\";\r\nfunction ItemDetailPage(props) {\r\n  const event = props.post;\r\n\r\n  console.log(event);\r\n  // console.log(event.Title);\r\n  // console.log(event[0].Title);\r\n  return (\r\n    <div>\r\n      I am details page {event.Type} {props.postId}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport async function getServerSideProps(context) {\r\n  const postId = context.params.postId; // Assuming you have a dynamic route like /posts/[postId]\r\n  const client = await connectToDatabase();\r\n  const db = client.db();\r\n\r\n  const data = await db.collection(\"PostedItem\").find({}).toArray();\r\n\r\n  //console.log(data);\r\n  const post = data.find((event) => event.id === postId);\r\n  delete post._id;\r\n\r\n  //console.log(post);\r\n  // Fetch data from an external source or a database\r\n  //await getPostById(postId);\r\n\r\n  return {\r\n    props: {\r\n      post,\r\n      postId,\r\n    },\r\n  };\r\n}\r\n\r\n// export async function getStaticPaths() {\r\n//   const events = await getAllPosts();\r\n//   const paths = events.map((event) => ({ params: { eventId: event.id } }));\r\n//   return {\r\n//     paths: paths,\r\n//     fallback: \"blocking\",\r\n//   };\r\n// }\r\nexport default ItemDetailPage;\r\n"]},"metadata":{},"sourceType":"module"}