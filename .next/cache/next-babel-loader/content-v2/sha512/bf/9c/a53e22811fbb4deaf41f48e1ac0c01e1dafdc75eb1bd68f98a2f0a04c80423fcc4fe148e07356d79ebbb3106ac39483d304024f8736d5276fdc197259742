{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\FYP\\\\LostNestfyp\\\\lostnestprj\\\\components\\\\postcomp\\\\FoundNewItem.js\";\nimport classes from \"./FoundNewItem.module.css\";\nimport React from \"react\";\n\nfunction FoundNewItem() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isImage, setIsImage] = useState(\"\");\n  const typeInputRef = useRef();\n  const categoryInputRef = useRef();\n  const titleInputRef = useRef();\n  const descriptionInputRef = useRef();\n  const questionInputRef = useRef();\n  const dateInputRef = useRef();\n\n  function converttobase64(e) {\n    // console.log(e);\n    var reader = new FileReader();\n    reader.readAsDataURL(e.target.files[0]);\n\n    reader.onload = () => {\n      //console.log(reader.result);\n      setIsImage(reader.result);\n    };\n\n    reader.onerror = () => {\n      console.log(\"error\", error);\n    };\n  }\n\n  const postSubmitHandler = async event => {\n    event.preventDefault();\n    setIsLoading(true);\n    const enteredType = typeInputRef.current.value;\n    const enteredCategory = categoryInputRef.current.value;\n    const enteredTitle = titleInputRef.current.value;\n    const enteredDescription = descriptionInputRef.current.value;\n    const enteredQuestion = questionInputRef.current.value;\n    const enteredDate = dateInputRef.current.value;\n    const humanReadableDate = new Date(enteredDate).toLocaleDateString(\"en-US\", {\n      day: \"numeric\",\n      month: \"long\",\n      year: \"numeric\"\n    });\n\n    try {\n      const result = await sendPostData(enteredType, enteredCategory, enteredTitle, enteredDescription, enteredQuestion, humanReadableDate, isImage);\n      console.log(result);\n      event.target.reset(); // This resets the form\n\n      setIsLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.formstyle3,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: postSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.divider,\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"item\",\n            className: classes.inputfield,\n            ref: typeInputRef,\n            children: /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Lost\",\n              children: \"Lost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"category\",\n            className: classes.inputfield,\n            ref: categoryInputRef,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              selected: true,\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Wallet\",\n              children: \"Wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"ID Card / Student Card\",\n              children: \"ID Card / Student Card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Smart Phone / Laptop\",\n              children: \"Smart Phone / Laptop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Keys\",\n              children: \"Keys\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Others\",\n              children: \"Others\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"field3\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Item Name \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.required,\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"field3\",\n            placeholder: \"Title\",\n            className: classes.inputfield,\n            ref: titleInputRef,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"field4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Enter question based on an item.\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.required,\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"field4\",\n            placeholder: \"Ex:- What is the color of the phone?\",\n            className: classes.inputfield,\n            ref: questionInputRef,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Select a Date: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.required,\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"date\",\n            id: \"date\",\n            className: classes.customselect,\n            ref: dateInputRef,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Description \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.required,\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            name: \"description\",\n            placeholder: \"Description about item (like location etc...)\",\n            className: classes.textareafield,\n            ref: descriptionInputRef,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"image\",\n          name: \"image\",\n          accept: \"image/*\",\n          className: classes.customselect,\n          style: {\n            width: \"100%\"\n          },\n          onChange: converttobase64,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.center,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            content: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\nexport default FoundNewItem;","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/components/postcomp/FoundNewItem.js"],"names":["classes","React","FoundNewItem","isLoading","setIsLoading","useState","isImage","setIsImage","typeInputRef","useRef","categoryInputRef","titleInputRef","descriptionInputRef","questionInputRef","dateInputRef","converttobase64","e","reader","FileReader","readAsDataURL","target","files","onload","result","onerror","console","log","error","postSubmitHandler","event","preventDefault","enteredType","current","value","enteredCategory","enteredTitle","enteredDescription","enteredQuestion","enteredDate","humanReadableDate","Date","toLocaleDateString","day","month","year","sendPostData","reset","formstyle3","divider","inputfield","required","customselect","textareafield","width","center"],"mappings":"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","sourcesContent":["import classes from \"./FoundNewItem.module.css\";\r\n\r\nimport React from \"react\";\r\n\r\nfunction FoundNewItem() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isImage, setIsImage] = useState(\"\");\r\n  const typeInputRef = useRef();\r\n  const categoryInputRef = useRef();\r\n  const titleInputRef = useRef();\r\n  const descriptionInputRef = useRef();\r\n  const questionInputRef = useRef();\r\n  const dateInputRef = useRef();\r\n\r\n  function converttobase64(e) {\r\n    // console.log(e);\r\n\r\n    var reader = new FileReader();\r\n    reader.readAsDataURL(e.target.files[0]);\r\n\r\n    reader.onload = () => {\r\n      //console.log(reader.result);\r\n      setIsImage(reader.result);\r\n    };\r\n\r\n    reader.onerror = () => {\r\n      console.log(\"error\", error);\r\n    };\r\n  }\r\n  const postSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    const enteredType = typeInputRef.current.value;\r\n    const enteredCategory = categoryInputRef.current.value;\r\n    const enteredTitle = titleInputRef.current.value;\r\n    const enteredDescription = descriptionInputRef.current.value;\r\n    const enteredQuestion = questionInputRef.current.value;\r\n    const enteredDate = dateInputRef.current.value;\r\n\r\n    const humanReadableDate = new Date(enteredDate).toLocaleDateString(\r\n      \"en-US\",\r\n      {\r\n        day: \"numeric\",\r\n        month: \"long\",\r\n        year: \"numeric\",\r\n      }\r\n    );\r\n\r\n    try {\r\n      const result = await sendPostData(\r\n        enteredType,\r\n        enteredCategory,\r\n        enteredTitle,\r\n        enteredDescription,\r\n        enteredQuestion,\r\n        humanReadableDate,\r\n        isImage\r\n      );\r\n\r\n      console.log(result);\r\n      event.target.reset(); // This resets the form\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <Loader />;\r\n  }\r\n  return (\r\n    <div className={classes.formstyle3}>\r\n      <form onSubmit={postSubmitHandler}>\r\n        <fieldset>\r\n          <legend>Data</legend>\r\n          <div className={classes.divider}>\r\n            <select\r\n              name=\"item\"\r\n              className={classes.inputfield}\r\n              ref={typeInputRef}\r\n            >\r\n              <option value=\"Lost\">Lost</option>\r\n            </select>\r\n            <select\r\n              name=\"category\"\r\n              className={classes.inputfield}\r\n              ref={categoryInputRef}\r\n              required\r\n            >\r\n              <option value=\"\" disabled selected>\r\n                Category\r\n              </option>\r\n              <option value=\"Wallet\">Wallet</option>\r\n              <option value=\"ID Card / Student Card\">\r\n                ID Card / Student Card\r\n              </option>\r\n              <option value=\"Smart Phone / Laptop\">Smart Phone / Laptop</option>\r\n              <option value=\"Keys\">Keys</option>\r\n              <option value=\"Others\">Others</option>\r\n            </select>\r\n          </div>\r\n\r\n          <label for=\"field3\">\r\n            <span>\r\n              Item Name <span className={classes.required}>*</span>\r\n            </span>\r\n            <input\r\n              type=\"text\"\r\n              name=\"field3\"\r\n              placeholder=\"Title\"\r\n              className={classes.inputfield}\r\n              ref={titleInputRef}\r\n              required\r\n            ></input>\r\n          </label>\r\n          <label for=\"field4\">\r\n            <span>\r\n              Enter question based on an item.\r\n              <span className={classes.required}>*</span>\r\n            </span>\r\n            <input\r\n              type=\"text\"\r\n              name=\"field4\"\r\n              placeholder=\"Ex:- What is the color of the phone?\"\r\n              className={classes.inputfield}\r\n              ref={questionInputRef}\r\n              required\r\n            ></input>\r\n          </label>\r\n\r\n          <label htmlFor=\"date\">\r\n            <span>\r\n              Select a Date: <span className={classes.required}>*</span>\r\n            </span>\r\n            <input\r\n              type=\"date\"\r\n              name=\"date\"\r\n              id=\"date\"\r\n              className={classes.customselect}\r\n              ref={dateInputRef}\r\n              required\r\n            ></input>\r\n          </label>\r\n        </fieldset>\r\n        <fieldset>\r\n          <legend>Details</legend>\r\n          <label for=\"description\">\r\n            <span>\r\n              Description <span className={classes.required}>*</span>\r\n            </span>\r\n            <textarea\r\n              type=\"text\"\r\n              name=\"description\"\r\n              placeholder=\"Description about item (like location etc...)\"\r\n              className={classes.textareafield}\r\n              ref={descriptionInputRef}\r\n              required\r\n            ></textarea>\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            id=\"image\"\r\n            name=\"image\"\r\n            accept=\"image/*\"\r\n            className={classes.customselect}\r\n            style={{ width: \"100%\" }}\r\n            onChange={converttobase64}\r\n            required\r\n          />\r\n          <div className={classes.center}>\r\n            <Button content=\"Post\"></Button>\r\n          </div>\r\n        </fieldset>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FoundNewItem;\r\n"]},"metadata":{},"sourceType":"module"}