{"ast":null,"code":"import { connectToDatabase } from \"../../../lib/db\";\nimport { getSession } from \"next-auth/client\";\n\nasync function handler(req, res) {\n  if (req.method === \"POST\") {\n    const data = req.body;\n    const {\n      enteredInformations,\n      ItemTitle,\n      PostID,\n      PosterID,\n      Question,\n      combinedDateTime,\n      Answer\n    } = data;\n    const enteredContact = enteredInformations ? enteredInformations : \"Responder has nullified the validation.\";\n\n    if (!enteredContact) {\n      res.status(422).json({\n        message: \"Please Enter Contact details\"\n      });\n      return;\n    }\n\n    const client = await connectToDatabase();\n    const db = client.db();\n    const result = await db.collection(\"ValidationResponse\").insertOne({\n      enteredContact,\n      ItemTitle,\n      PostID,\n      PosterID,\n      Question,\n      ValidatorDateTime: combinedDateTime,\n      Answer\n    });\n    res.status(201).json({\n      message: \"Contact Information stored successfully\"\n    });\n  } else {\n    const session = await getSession({\n      req: req\n    });\n\n    if (!session) {\n      res.status(401).json({\n        message: \"Not authenticated!\"\n      });\n      return;\n    }\n\n    const userEmail = session.user.email;\n\n    try {\n      //const data = await getPostsByEmail(userEmail);\n      const client = await connectToDatabase();\n      const usersCollection = client.db().collection(\"ValidationResponse\");\n      const data = await usersCollection.find({\n        PosterID: userEmail\n      }).toArray();\n      res.status(200).json(data);\n    } catch (error) {\n      console.error(\"Error:\", error);\n      res.status(500).json({\n        message: \"Internal Server Error: Unable to fetch and Display Responses\"\n      });\n      return;\n    }\n  }\n}\n\nexport default handler;","map":null,"metadata":{},"sourceType":"module"}