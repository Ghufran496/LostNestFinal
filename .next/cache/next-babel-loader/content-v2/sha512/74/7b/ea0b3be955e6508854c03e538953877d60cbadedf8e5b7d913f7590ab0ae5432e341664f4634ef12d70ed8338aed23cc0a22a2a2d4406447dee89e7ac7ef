{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\FYP\\\\LostNestfyp\\\\lostnestprj\\\\pages\\\\dashboard\\\\[itemid].js\";\nimport React, { useEffect } from \"react\"; //import { MongoClient } from \"mongodb\";\n\nconst {\n  ObjectId\n} = require(\"mongodb\"); //import { connectToDatabase } from \"../../lib/db\";\n\n\nimport { connectToDatabase } from \"../../lib/db\";\n\nfunction ItemDetailPage(props) {\n  const event = props.extractedObject; //console.log(event);\n  // console.log(event.Title);\n  // console.log(event[0].Title);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"I am details page \", event.Title]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n} // async function connectToDatabase() {\n//   const client = await MongoClient.connect(\n//     \"mongodb+srv://ghufran:Allahis1@cluster0.psik2ae.mongodb.net/authSec14?retryWrites=true&w=majority\",\n//     {\n//       useUnifiedTopology: true, // Pass the useUnifiedTopology option here\n//     }\n//   );\n//   return client;\n// }\n\n\nexport async function getServerSideProps(context) {\n  const postId = context.params.itemid;\n  const objectId = new ObjectId(postId); // Convert postId to ObjectId\n\n  const client = await connectToDatabase();\n  const db = client.db();\n  const data = await db.collection(\"PostedItem\").find({}).toArray();\n  const extractedObject = data.find(item => item._id.equals(objectId));\n  return {\n    props: {\n      extractedObject: JSON.parse(JSON.stringify(extractedObject)) // Convert ObjectId to string\n\n    }\n  };\n} // import React, { useEffect } from \"react\";\n// //import { getPostsById, getAllPosts } from \"../../components/helpers/api-util\";\n// //import { connectToDatabase } from \"../../lib/db\";\n// const { ObjectId } = require(\"mongodb\");\n// import { MongoClient } from \"mongodb\";\n// function ItemDetailPage(props) {\n//   // const event = props.post;\n//   //console.log(event);\n//   // console.log(event.Title);\n//   // console.log(event[0].Title);\n//   return <div>I am details page</div>;\n// }\n// async function connectToDatabase() {\n//   const client = await MongoClient.connect(\n//     \"mongodb+srv://ghufran:Allahis1@cluster0.psik2ae.mongodb.net/authSec14?retryWrites=true&w=majority\",\n//     {\n//       useUnifiedTopology: true, // Pass the useUnifiedTopology option here\n//     }\n//   );\n//   return client;\n// }\n// export async function getServerSideProps(context) {\n//   const postId = context.params.itemid;\n//   const objectId = new ObjectId(postId); // Convert postId to ObjectId\n//   const client = await connectToDatabase();\n//   const db = client.db();\n//   const data = await db.collection(\"PostedItem\").find({}).toArray();\n//   const extractedObject = data.find((item) => item._id.equals(objectId)); // Use .equals to compare ObjectId\n//   return {\n//     props: {\n//       extractedObject,\n//     },\n//   };\n// }\n// export async function getServerSideProps(context) {\n//   const postId = context.params.itemid;\n//   const client = await connectToDatabase();\n//   const db = client.db();\n//   const data = await db.collection(\"PostedItem\").find({}).toArray();\n//   const extractedObject = data.find((item) => item._id === postId);\n//   return {\n//     props: {\n//       extractedObject,\n//     },\n//   };\n// }\n// export async function getStaticPaths() {\n//   const events = await getAllPosts();\n//   const paths = events.map((event) => ({ params: { eventId: event.id } }));\n//   return {\n//     paths: paths,\n//     fallback: \"blocking\",\n//   };\n// }\n\nexport default ItemDetailPage;","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/pages/dashboard/[itemid].js"],"names":["React","useEffect","ObjectId","require","connectToDatabase","ItemDetailPage","props","event","extractedObject","Title","getServerSideProps","context","postId","params","itemid","objectId","client","db","data","collection","find","toArray","item","_id","equals","JSON","parse","stringify"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAeC,OAAO,CAAC,SAAD,CAA5B,C,CACA;;;AACA,SAASC,iBAAT,QAAkC,cAAlC;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,QAAMC,KAAK,GAAGD,KAAK,CAACE,eAApB,CAD6B,CAG7B;AACA;AACA;;AACA,sBAAO;AAAA,qCAAwBD,KAAK,CAACE,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEA,OAAO,eAAeC,kBAAf,CAAkCC,OAAlC,EAA2C;AAChD,QAAMC,MAAM,GAAGD,OAAO,CAACE,MAAR,CAAeC,MAA9B;AACA,QAAMC,QAAQ,GAAG,IAAIb,QAAJ,CAAaU,MAAb,CAAjB,CAFgD,CAET;;AAEvC,QAAMI,MAAM,GAAG,MAAMZ,iBAAiB,EAAtC;AACA,QAAMa,EAAE,GAAGD,MAAM,CAACC,EAAP,EAAX;AAEA,QAAMC,IAAI,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,YAAd,EAA4BC,IAA5B,CAAiC,EAAjC,EAAqCC,OAArC,EAAnB;AAEA,QAAMb,eAAe,GAAGU,IAAI,CAACE,IAAL,CAAWE,IAAD,IAAUA,IAAI,CAACC,GAAL,CAASC,MAAT,CAAgBT,QAAhB,CAApB,CAAxB;AAEA,SAAO;AACLT,IAAAA,KAAK,EAAE;AACLE,MAAAA,eAAe,EAAEiB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAenB,eAAf,CAAX,CADZ,CACyD;;AADzD;AADF,GAAP;AAKD,C,CAED;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAeH,cAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\n//import { MongoClient } from \"mongodb\";\r\nconst { ObjectId } = require(\"mongodb\");\r\n//import { connectToDatabase } from \"../../lib/db\";\r\nimport { connectToDatabase } from \"../../lib/db\";\r\n\r\nfunction ItemDetailPage(props) {\r\n  const event = props.extractedObject;\r\n\r\n  //console.log(event);\r\n  // console.log(event.Title);\r\n  // console.log(event[0].Title);\r\n  return <div>I am details page {event.Title}</div>;\r\n}\r\n\r\n// async function connectToDatabase() {\r\n//   const client = await MongoClient.connect(\r\n//     \"mongodb+srv://ghufran:Allahis1@cluster0.psik2ae.mongodb.net/authSec14?retryWrites=true&w=majority\",\r\n//     {\r\n//       useUnifiedTopology: true, // Pass the useUnifiedTopology option here\r\n//     }\r\n//   );\r\n\r\n//   return client;\r\n// }\r\n\r\nexport async function getServerSideProps(context) {\r\n  const postId = context.params.itemid;\r\n  const objectId = new ObjectId(postId); // Convert postId to ObjectId\r\n\r\n  const client = await connectToDatabase();\r\n  const db = client.db();\r\n\r\n  const data = await db.collection(\"PostedItem\").find({}).toArray();\r\n\r\n  const extractedObject = data.find((item) => item._id.equals(objectId));\r\n\r\n  return {\r\n    props: {\r\n      extractedObject: JSON.parse(JSON.stringify(extractedObject)), // Convert ObjectId to string\r\n    },\r\n  };\r\n}\r\n\r\n// import React, { useEffect } from \"react\";\r\n// //import { getPostsById, getAllPosts } from \"../../components/helpers/api-util\";\r\n// //import { connectToDatabase } from \"../../lib/db\";\r\n// const { ObjectId } = require(\"mongodb\");\r\n// import { MongoClient } from \"mongodb\";\r\n\r\n// function ItemDetailPage(props) {\r\n//   // const event = props.post;\r\n\r\n//   //console.log(event);\r\n//   // console.log(event.Title);\r\n//   // console.log(event[0].Title);\r\n//   return <div>I am details page</div>;\r\n// }\r\n// async function connectToDatabase() {\r\n//   const client = await MongoClient.connect(\r\n//     \"mongodb+srv://ghufran:Allahis1@cluster0.psik2ae.mongodb.net/authSec14?retryWrites=true&w=majority\",\r\n//     {\r\n//       useUnifiedTopology: true, // Pass the useUnifiedTopology option here\r\n//     }\r\n//   );\r\n\r\n//   return client;\r\n// }\r\n\r\n// export async function getServerSideProps(context) {\r\n//   const postId = context.params.itemid;\r\n//   const objectId = new ObjectId(postId); // Convert postId to ObjectId\r\n\r\n//   const client = await connectToDatabase();\r\n//   const db = client.db();\r\n\r\n//   const data = await db.collection(\"PostedItem\").find({}).toArray();\r\n\r\n//   const extractedObject = data.find((item) => item._id.equals(objectId)); // Use .equals to compare ObjectId\r\n\r\n//   return {\r\n//     props: {\r\n//       extractedObject,\r\n//     },\r\n//   };\r\n// }\r\n\r\n// export async function getServerSideProps(context) {\r\n//   const postId = context.params.itemid;\r\n\r\n//   const client = await connectToDatabase();\r\n//   const db = client.db();\r\n\r\n//   const data = await db.collection(\"PostedItem\").find({}).toArray();\r\n\r\n//   const extractedObject = data.find((item) => item._id === postId);\r\n\r\n//   return {\r\n//     props: {\r\n//       extractedObject,\r\n//     },\r\n//   };\r\n// }\r\n\r\n// export async function getStaticPaths() {\r\n//   const events = await getAllPosts();\r\n//   const paths = events.map((event) => ({ params: { eventId: event.id } }));\r\n//   return {\r\n//     paths: paths,\r\n//     fallback: \"blocking\",\r\n//   };\r\n// }\r\nexport default ItemDetailPage;\r\n"]},"metadata":{},"sourceType":"module"}