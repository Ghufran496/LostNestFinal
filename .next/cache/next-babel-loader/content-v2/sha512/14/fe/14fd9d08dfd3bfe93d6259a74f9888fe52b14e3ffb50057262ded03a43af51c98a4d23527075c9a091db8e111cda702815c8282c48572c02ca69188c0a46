{"ast":null,"code":"// import React from \"react\";\n// import classes from \"./FoundForm.module.css\";\n// import Button from \"../UI/Button\";\n// import { useRef, useState } from \"react\";\n// import Loader from \"../UI/Loader\";\n// async function sendPostData(\n//   Type,\n//   Category,\n//   Title,\n//   Description,\n//   Question,\n//   Date,\n//   imageInbase64\n// ) {\n//   const response = await fetch(\"/api/post/postitem\", {\n//     method: \"POST\",\n//     body: JSON.stringify({\n//       Type,\n//       Category,\n//       Title,\n//       Description,\n//       Question,\n//       Date,\n//       ReducedImg: imageInbase64,\n//     }),\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//   });\n//   const data = await response.json();\n//   if (!response.ok) {\n//     throw new Error(data.message || \"Something went wrong!\");\n//   }\n//   return data;\n// }\n// function FoundForm() {\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [isImage, setIsImage] = useState(\"\");\n//   const typeInputRef = useRef();\n//   const categoryInputRef = useRef();\n//   const titleInputRef = useRef();\n//   const descriptionInputRef = useRef();\n//   const questionInputRef = useRef();\n//   const dateInputRef = useRef();\n//   function converttobase64(e) {\n//     // console.log(e);\n//     var reader = new FileReader();\n//     reader.readAsDataURL(e.target.files[0]);\n//     reader.onload = () => {\n//       //console.log(reader.result);\n//       setIsImage(reader.result);\n//     };\n//     reader.onerror = () => {\n//       console.log(\"error\", error);\n//     };\n//   }\n//   const postSubmitHandler = async (event) => {\n//     event.preventDefault();\n//     setIsLoading(true);\n//     const enteredType = typeInputRef.current.value;\n//     const enteredCategory = categoryInputRef.current.value;\n//     const enteredTitle = titleInputRef.current.value;\n//     const enteredDescription = descriptionInputRef.current.value;\n//     const enteredQuestion = questionInputRef.current.value;\n//     const enteredDate = dateInputRef.current.value;\n//     const humanReadableDate = new Date(enteredDate).toLocaleDateString(\n//       \"en-US\",\n//       {\n//         day: \"numeric\",\n//         month: \"long\",\n//         year: \"numeric\",\n//       }\n//     );\n//     try {\n//       const result = await sendPostData(\n//         enteredType,\n//         enteredCategory,\n//         enteredTitle,\n//         enteredDescription,\n//         enteredQuestion,\n//         humanReadableDate,\n//         isImage\n//       );\n//       console.log(result);\n//       event.target.reset(); // This resets the form\n//       setIsLoading(false);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n//   if (isLoading) {\n//     return <Loader />;\n//   }\n//   return (\n//     <>\n//       <h1 className={classes.head1}>Post new Item as Found Item</h1>\n//       <h2>Please Provide genunine Informations only.</h2>\n//       <form className={classes.form} onSubmit={postSubmitHandler}>\n//         <select name=\"item\" className={classes.customselect} ref={typeInputRef}>\n//           <option value=\"Found\">Found</option>\n//         </select>\n//         <select\n//           name=\"category\"\n//           className={classes.customselect}\n//           ref={categoryInputRef}\n//         >\n//           <option value=\"\" disabled selected>\n//             Category\n//           </option>\n//           <option value=\"Wallet\">Wallet</option>\n//           <option value=\"ID Card / Student Card\">ID Card / Student Card</option>\n//           <option value=\"Smart Phone / Laptop\">Smart Phone / Laptop</option>\n//           <option value=\"Keys\">Keys</option>\n//           <option value=\"Others\">Others</option>\n//         </select>\n//         <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n//           <label\n//             htmlFor=\"name\"\n//             style={{ fontSize: \"2rem\", fontWeight: \"bolder\" }}\n//           >\n//             Item Name\n//           </label>\n//           <input\n//             type=\"text\"\n//             name=\"name\"\n//             placeholder=\"Title\"\n//             className={classes.customselect}\n//             ref={titleInputRef}\n//           ></input>\n//         </div>\n//         <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n//           <label\n//             htmlFor=\"description\"\n//             style={{ fontSize: \"2rem\", fontWeight: \"bolder\" }}\n//           >\n//             Description\n//           </label>\n//           <textarea\n//             type=\"text\"\n//             name=\"description\"\n//             placeholder=\"Description about item (like location etc...)\"\n//             className={classes.customselect}\n//             ref={descriptionInputRef}\n//             rows=\"5\"\n//           ></textarea>\n//         </div>\n//         <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n//           <label\n//             htmlFor=\"question\"\n//             style={{ fontSize: \"2rem\", fontWeight: \"bolder\" }}\n//           >\n//             Enter question based on an item.\n//           </label>\n//           <input\n//             type=\"text\"\n//             name=\"question\"\n//             placeholder=\"Ex:- What is the color of the phone?\"\n//             className={classes.customselect}\n//             ref={questionInputRef}\n//           ></input>\n//         </div>\n//         <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n//           <label\n//             htmlFor=\"date\"\n//             style={{ fontSize: \"2rem\", fontWeight: \"bolder\" }}\n//           >\n//             Select a Date:\n//           </label>\n//           <input\n//             type=\"date\"\n//             name=\"date\"\n//             id=\"date\"\n//             className={classes.customselect}\n//             ref={dateInputRef}\n//           ></input>\n//         </div>\n//         <input\n//           type=\"file\"\n//           id=\"image\"\n//           name=\"image\"\n//           accept=\"image/*\"\n//           className={classes.customselect}\n//           onChange={converttobase64}\n//         />\n//         <Button content=\"Post\"></Button>\n//       </form>\n//     </>\n//   );\n// }\n// export default FoundForm;","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/components/postcomp/FoundForm.js"],"names":[],"mappingssourcesContent":["// import React from \"react\";\r\n// import classes from \"./FoundForm.module.css\";\r\n// import Button from \"../UI/Button\";\r\n// import { useRef, useState } from \"react\";\r\n// import Loader from \"../UI/Loader\";\r\n// async function sendPostData(\r\n//   Type,\r\n//   Category,\r\n//   Title,\r\n//   Description,\r\n//   Question,\r\n//   Date,\r\n//   imageInbase64\r\n// ) {\r\n//   const response = await fetch(\"/api/post/postitem\", {\r\n//     method: \"POST\",\r\n//     body: JSON.stringify({\r\n//       Type,\r\n//       Category,\r\n//       Title,\r\n//       Description,\r\n//       Question,\r\n//       Date,\r\n//       ReducedImg: imageInbase64,\r\n//     }),\r\n//     headers: {\r\n//       \"Content-Type\": \"application/json\",\r\n//     },\r\n//   });\r\n\r\n//   const data = await response.json();\r\n\r\n//   if (!response.ok) {\r\n//     throw new Error(data.message || \"Something went wrong!\");\r\n//   }\r\n\r\n//   return data;\r\n// }\r\n// function FoundForm() {\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n//   const [isImage, setIsImage] = useState(\"\");\r\n//   const typeInputRef = useRef();\r\n//   const categoryInputRef = useRef();\r\n//   const titleInputRef = useRef();\r\n//   const descriptionInputRef = useRef();\r\n//   const questionInputRef = useRef();\r\n//   const dateInputRef = useRef();\r\n\r\n//   function converttobase64(e) {\r\n//     // console.log(e);\r\n\r\n//     var reader = new FileReader();\r\n//     reader.readAsDataURL(e.target.files[0]);\r\n\r\n//     reader.onload = () => {\r\n//       //console.log(reader.result);\r\n//       setIsImage(reader.result);\r\n//     };\r\n\r\n//     reader.onerror = () => {\r\n//       console.log(\"error\", error);\r\n//     };\r\n//   }\r\n//   const postSubmitHandler = async (event) => {\r\n//     event.preventDefault();\r\n//     setIsLoading(true);\r\n\r\n//     const enteredType = typeInputRef.current.value;\r\n//     const enteredCategory = categoryInputRef.current.value;\r\n//     const enteredTitle = titleInputRef.current.value;\r\n//     const enteredDescription = descriptionInputRef.current.value;\r\n//     const enteredQuestion = questionInputRef.current.value;\r\n//     const enteredDate = dateInputRef.current.value;\r\n\r\n//     const humanReadableDate = new Date(enteredDate).toLocaleDateString(\r\n//       \"en-US\",\r\n//       {\r\n//         day: \"numeric\",\r\n//         month: \"long\",\r\n//         year: \"numeric\",\r\n//       }\r\n//     );\r\n\r\n//     try {\r\n//       const result = await sendPostData(\r\n//         enteredType,\r\n//         enteredCategory,\r\n//         enteredTitle,\r\n//         enteredDescription,\r\n//         enteredQuestion,\r\n//         humanReadableDate,\r\n//         isImage\r\n//       );\r\n\r\n//       console.log(result);\r\n//       event.target.reset(); // This resets the form\r\n//       setIsLoading(false);\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//     }\r\n//   };\r\n\r\n//   if (isLoading) {\r\n//     return <Loader />;\r\n//   }\r\n//   return (\r\n//     <>\r\n//       <h1 className={classes.head1}>Post new Item as Found Item</h1>\r\n//       <h2>Please Provide genunine Informations only.</h2>\r\n//       <form className={classes.form} onSubmit={postSubmitHandler}>\r\n//         <select name=\"item\" className={classes.customselect} ref={typeInputRef}>\r\n//           <option value=\"Found\">Found</option>\r\n//         </select>\r\n//         <select\r\n//           name=\"category\"\r\n//           className={classes.customselect}\r\n//           ref={categoryInputRef}\r\n//         >\r\n//           <option value=\"\" disabled selected>\r\n//             Category\r\n//           </option>\r\n//           <option value=\"Wallet\">Wallet</option>\r\n//           <option value=\"ID Card / Student Card\">ID Card / Student Card</option>\r\n//           <option value=\"Smart Phone / Laptop\">Smart Phone / Laptop</option>\r\n//           <option value=\"Keys\">Keys</option>\r\n//           <option value=\"Others\">Others</option>\r\n//         </select>\r\n//         <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n//           <label\r\n//             htmlFor=\"name\"\r\n//             style={{ fontSize: \"2rem\", fontWeight: \"bolder\" }}\r\n//           >\r\n//             Item Name\r\n//           </label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"name\"\r\n//             placeholder=\"Title\"\r\n//             className={classes.customselect}\r\n//             ref={titleInputRef}\r\n//           ></input>\r\n//         </div>\r\n//         <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n//           <label\r\n//             htmlFor=\"description\"\r\n//             style={{ fontSize: \"2rem\", fontWeight: \"bolder\" }}\r\n//           >\r\n//             Description\r\n//           </label>\r\n//           <textarea\r\n//             type=\"text\"\r\n//             name=\"description\"\r\n//             placeholder=\"Description about item (like location etc...)\"\r\n//             className={classes.customselect}\r\n//             ref={descriptionInputRef}\r\n//             rows=\"5\"\r\n//           ></textarea>\r\n//         </div>\r\n//         <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n//           <label\r\n//             htmlFor=\"question\"\r\n//             style={{ fontSize: \"2rem\", fontWeight: \"bolder\" }}\r\n//           >\r\n//             Enter question based on an item.\r\n//           </label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"question\"\r\n//             placeholder=\"Ex:- What is the color of the phone?\"\r\n//             className={classes.customselect}\r\n//             ref={questionInputRef}\r\n//           ></input>\r\n//         </div>\r\n//         <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n//           <label\r\n//             htmlFor=\"date\"\r\n//             style={{ fontSize: \"2rem\", fontWeight: \"bolder\" }}\r\n//           >\r\n//             Select a Date:\r\n//           </label>\r\n//           <input\r\n//             type=\"date\"\r\n//             name=\"date\"\r\n//             id=\"date\"\r\n//             className={classes.customselect}\r\n//             ref={dateInputRef}\r\n//           ></input>\r\n//         </div>\r\n\r\n//         <input\r\n//           type=\"file\"\r\n//           id=\"image\"\r\n//           name=\"image\"\r\n//           accept=\"image/*\"\r\n//           className={classes.customselect}\r\n//           onChange={converttobase64}\r\n//         />\r\n//         <Button content=\"Post\"></Button>\r\n//       </form>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default FoundForm;\r\n"]},"metadata":{},"sourceType":"script"}