{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"G:\\\\FYP\\\\LostNestfyp\\\\lostnestprj\\\\pages\\\\mylistings\\\\[specificid].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport classes from \"./specificid.module.css\";\nimport Loading from \"../../components/UI/Loading\";\nimport EventSummary from \"../../components/feed/FeedDetails/event-summary\";\nimport EventLogistics from \"../../components/feed/FeedDetails/event-logistics\";\nimport EventContent from \"../../components/feed/FeedDetails/event-content\";\nimport { useState, useEffect } from \"react\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\n\nfunction specificid(props) {\n  _s();\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var _useState2 = useState(false),\n      showQForm = _useState2[0],\n      setIsShowQForm = _useState2[1];\n\n  var extractedObject = props.extractedObject;\n\n  if (!extractedObject) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this); // Render loading spinner if no data is available\n  }\n\n  useEffect(function () {\n    setIsLoading(true);\n    setTimeout(function () {\n      setIsLoading(false);\n    }, 2000); // Simulate a loading time of 5 seconds\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n\n  var event = extractedObject;\n\n  var showModeHandler = function showModeHandler() {\n    setIsShowQForm(true);\n  };\n\n  var hideModeHandler = function hideModeHandler() {\n    setIsShowQForm(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: event.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: event.Description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventSummary, {\n      Title: event.Title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventLogistics, {\n      Date: event.Date,\n      ReducedImg: event.ReducedImg,\n      Title: event.Title,\n      Type: event.Type,\n      Category: event.Category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventContent, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: event.Description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.btndiv,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showModeHandler,\n        className: classes.button52,\n        role: \"button\",\n        children: [\"Claim this \", event.Title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), showQForm && /*#__PURE__*/_jsxDEV(QuestionForm, {\n      onclose: hideModeHandler,\n      data: event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(specificid, \"Aa7ocyAgYOYgFLKGEof5pFegnRU=\");\n\nexport var __N_SSP = true;\nexport default specificid;","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/pages/mylistings/[specificid].js"],"names":["React","classes","Loading","EventSummary","EventLogistics","EventContent","useState","useEffect","Fragment","Head","specificid","props","isLoading","setIsLoading","showQForm","setIsShowQForm","extractedObject","setTimeout","event","showModeHandler","hideModeHandler","Title","Description","Date","ReducedImg","Type","Category","btndiv","button52"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport classes from \"./specificid.module.css\";\r\nimport Loading from \"../../components/UI/Loading\";\r\nimport EventSummary from \"../../components/feed/FeedDetails/event-summary\";\r\nimport EventLogistics from \"../../components/feed/FeedDetails/event-logistics\";\r\nimport EventContent from \"../../components/feed/FeedDetails/event-content\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport Head from \"next/head\";\r\nimport { getPostsByObjectId } from \"../../lib/db\";\r\nconst { ObjectId } = require(\"mongodb\");\r\n\r\nfunction specificid(props) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showQForm, setIsShowQForm] = useState(false);\r\n\r\n  const { extractedObject } = props;\r\n\r\n  if (!extractedObject) {\r\n    return <Loading />; // Render loading spinner if no data is available\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    setTimeout(() => {\r\n      setIsLoading(false);\r\n    }, 2000); // Simulate a loading time of 5 seconds\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  }\r\n  const event = extractedObject;\r\n\r\n  const showModeHandler = () => {\r\n    setIsShowQForm(true);\r\n  };\r\n  const hideModeHandler = () => {\r\n    setIsShowQForm(false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>{event.Title}</title>\r\n        <meta name=\"description\" content={event.Description} />\r\n      </Head>\r\n      <EventSummary Title={event.Title} />\r\n\r\n      <EventLogistics\r\n        Date={event.Date}\r\n        ReducedImg={event.ReducedImg}\r\n        Title={event.Title}\r\n        Type={event.Type}\r\n        Category={event.Category}\r\n      />\r\n\r\n      <EventContent>\r\n        <p>{event.Description}</p>\r\n      </EventContent>\r\n      <div className={classes.btndiv}>\r\n        <button\r\n          onClick={showModeHandler}\r\n          className={classes.button52}\r\n          role=\"button\"\r\n        >\r\n          Claim this {event.Title}\r\n        </button>\r\n      </div>\r\n\r\n      {showQForm && <QuestionForm onclose={hideModeHandler} data={event} />}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport async function getServerSideProps(context) {\r\n  const postId = context.params.itemid;\r\n  const objectId = new ObjectId(postId); // Convert postId to ObjectId\r\n\r\n  const extractedObject = getPostsByObjectId(objectId);\r\n\r\n  return {\r\n    props: {\r\n      extractedObject: JSON.parse(JSON.stringify(extractedObject)),\r\n    },\r\n  };\r\n}\r\n\r\nexport default specificid;\r\n"]},"metadata":{},"sourceType":"module"}