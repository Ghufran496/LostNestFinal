{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from \"react\";\nimport Head from \"next/head\";\nimport { Fragment } from \"react\";\nimport EventSummary from \"../../components/feed/FeedDetails/event-summary\";\nimport EventLogistics from \"../../components/feed/FeedDetails/event-logistics\";\nimport EventContent from \"../../components/feed/FeedDetails/event-content\";\nimport QuestionForm from \"../../components/overlayForm/QuestionForm\";\nimport classes from \"./itemid.module.css\";\nimport { getPostDataById } from \"../../lib/db\";\nimport { getSession } from \"next-auth/client\";\nimport Button from \"../../components/UI/Button\";\nimport Loading from \"../../components/UI/Loading\";\n\nfunction ItemDetailPage(props) {\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: showQForm,\n    1: setIsShowQForm\n  } = useState(false);\n  const {\n    0: processedObject,\n    1: setProcessedObject\n  } = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const {\n        extractedObject\n      } = props;\n\n      if (typeof extractedObject === \"object\") {\n        setProcessedObject(extractedObject);\n        setIsLoading(false);\n      } else {\n        setIsLoading(true);\n      }\n    };\n\n    fetchData();\n  }, [props.extractedObject]);\n\n  if (isLoading || !processedObject) {\n    return /*#__PURE__*/_jsx(Loading, {});\n  }\n\n  const event = processedObject;\n\n  const showModeHandler = () => {\n    setIsShowQForm(true);\n  };\n\n  const hideModeHandler = () => {\n    setIsShowQForm(false);\n  };\n\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: event.Title\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: event.Description\n      })]\n    }), /*#__PURE__*/_jsx(EventSummary, {\n      Title: event.Title\n    }), /*#__PURE__*/_jsx(EventLogistics, {\n      Date: event.Date,\n      ReducedImg: event.ReducedImg,\n      Title: event.Title,\n      Type: event.Type,\n      Category: event.Category\n    }), /*#__PURE__*/_jsx(EventContent, {\n      children: /*#__PURE__*/_jsx(\"p\", {\n        children: event.Description\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: classes.btndiv,\n      children: /*#__PURE__*/_jsx(\"a\", {\n        onClick: showModeHandler,\n        children: /*#__PURE__*/_jsx(Button, {\n          content: `Claim This ${event.Title}`\n        })\n      })\n    }), showQForm && /*#__PURE__*/_jsx(QuestionForm, {\n      onclose: hideModeHandler,\n      data: event\n    })]\n  });\n}\n\nexport async function getServerSideProps(context) {\n  const postId = context.params.itemid;\n  const postData = await getPostDataById(postId);\n  const session = await getSession({\n    req: context.req\n  });\n\n  if (!session) {\n    return {\n      redirect: {\n        destination: \"/auth\",\n        permanent: false\n      }\n    };\n  }\n\n  return {\n    props: {\n      extractedObject: JSON.parse(JSON.stringify(postData))\n    }\n  };\n}\nexport default ItemDetailPage;","map":null,"metadata":{},"sourceType":"module"}