{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"G:/FYP/LostNestfyp/lostnestprj/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"G:/FYP/LostNestfyp/lostnestprj/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport classes from \"./PostNewItem.module.css\";\nimport React from \"react\";\nimport Button from \"../UI/Button\";\nimport { useRef, useState } from \"react\";\nimport Loading from \"../UI/Loading\";\nimport ErrorComp from \"../UI/ErrorComp\"; // async function sendPostData(\n//   Type,\n//   Category,\n//   Title,\n//   Description,\n//   Question,\n//   Date,\n//   imageInbase64\n// ) {\n//   const response = await fetch(\"/api/post/postitem\", {\n//     method: \"POST\",\n//     body: JSON.stringify({\n//       Type,\n//       Category,\n//       Title,\n//       Description,\n//       Question,\n//       Date,\n//       ReducedImg: imageInbase64,\n//     }),\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//   });\n//   const data = await response.json();\n//   if (!response.ok) {\n//     throw new Error(data.message || \"Something went wrong!\");\n//   }\n//   return data;\n// }\n\nfunction PostNewItem() {\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      isImage = _useState2[0],\n      setIsImage = _useState2[1];\n\n  var _useState3 = useState(false),\n      isError = _useState3[0],\n      setIsError = _useState3[1];\n\n  var _useState4 = useState(\"Sorry but the page you are looking for does not exist.\"),\n      isErrorData = _useState4[0],\n      setIsErrorData = _useState4[1];\n\n  var typeInputRef = useRef();\n  var categoryInputRef = useRef();\n  var titleInputRef = useRef();\n  var descriptionInputRef = useRef();\n  var questionInputRef = useRef();\n  var dateInputRef = useRef();\n\n  function sendPostData(_x, _x2, _x3, _x4, _x5, _x6, _x7) {\n    return _sendPostData.apply(this, arguments);\n  }\n\n  function _sendPostData() {\n    _sendPostData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(Type, Category, Title, Description, Question, Date, imageInbase64) {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch(\"/api/post/postitem\", {\n                method: \"POST\",\n                body: JSON.stringify({\n                  Type: Type,\n                  Category: Category,\n                  Title: Title,\n                  Description: Description,\n                  Question: Question,\n                  Date: Date,\n                  ReducedImg: imageInbase64\n                }),\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 2:\n              response = _context2.sent;\n              _context2.next = 5;\n              return response.json();\n\n            case 5:\n              data = _context2.sent;\n\n              if (!response.ok) {\n                setIsErrorData(data.message);\n                setIsLoading(false);\n                setIsError(true);\n              }\n\n              return _context2.abrupt(\"return\", data);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _sendPostData.apply(this, arguments);\n  }\n\n  function converttobase64(e) {\n    // console.log(e);\n    var reader = new FileReader();\n    reader.readAsDataURL(e.target.files[0]);\n\n    reader.onload = function () {\n      //console.log(reader.result);\n      setIsImage(reader.result);\n    };\n\n    reader.onerror = function () {\n      console.log(\"error\", error);\n    };\n  }\n\n  var postSubmitHandler = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var enteredType, enteredCategory, enteredTitle, enteredDescription, enteredQuestion, enteredDate, humanReadableDate, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              setIsLoading(true);\n              enteredType = typeInputRef.current.value;\n              enteredCategory = categoryInputRef.current.value;\n              enteredTitle = titleInputRef.current.value;\n              enteredDescription = descriptionInputRef.current.value;\n              enteredQuestion = questionInputRef.current.value;\n              enteredDate = dateInputRef.current.value;\n              humanReadableDate = new Date(enteredDate).toLocaleDateString(\"en-US\", {\n                day: \"numeric\",\n                month: \"long\",\n                year: \"numeric\"\n              });\n              _context.next = 11;\n              return sendPostData(enteredType, enteredCategory, enteredTitle, enteredDescription, enteredQuestion, humanReadableDate, isImage);\n\n            case 11:\n              result = _context.sent;\n              event.target.reset(); // This resets the form\n\n              setIsImage(\"\"); // Clear the image state\n\n              setIsLoading(false);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function postSubmitHandler(_x8) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsx(Loading, {});\n  }\n\n  if (isError) {\n    return /*#__PURE__*/_jsx(ErrorComp, {\n      errorData: isErrorData\n    });\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.formstyle3,\n    children: /*#__PURE__*/_jsxs(\"form\", {\n      onSubmit: postSubmitHandler,\n      children: [/*#__PURE__*/_jsxs(\"fieldset\", {\n        children: [/*#__PURE__*/_jsx(\"legend\", {\n          children: \"Data\"\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: classes.divider,\n          children: [/*#__PURE__*/_jsx(\"select\", {\n            name: \"item\",\n            className: classes.inputfield,\n            ref: typeInputRef,\n            children: /*#__PURE__*/_jsx(\"option\", {\n              value: \"Lost\",\n              children: \"Lost\"\n            })\n          }), /*#__PURE__*/_jsxs(\"select\", {\n            defaultValue: \"Category\",\n            name: \"category\",\n            className: classes.inputfield,\n            ref: categoryInputRef,\n            required: true,\n            children: [/*#__PURE__*/_jsx(\"option\", {\n              value: \"Category\",\n              disabled: true,\n              children: \"Category\"\n            }), /*#__PURE__*/_jsx(\"option\", {\n              value: \"Wallet\",\n              children: \"Wallet\"\n            }), /*#__PURE__*/_jsx(\"option\", {\n              value: \"ID Card / Student Card\",\n              children: \"ID Card / Student Card\"\n            }), /*#__PURE__*/_jsx(\"option\", {\n              value: \"Smart Phone / Laptop\",\n              children: \"Smart Phone / Laptop\"\n            }), /*#__PURE__*/_jsx(\"option\", {\n              value: \"Keys\",\n              children: \"Keys\"\n            }), /*#__PURE__*/_jsx(\"option\", {\n              value: \"Others\",\n              children: \"Others\"\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: \"field3\",\n          children: [/*#__PURE__*/_jsxs(\"span\", {\n            children: [\"Item Name \", /*#__PURE__*/_jsx(\"span\", {\n              className: classes.required,\n              children: \"*\"\n            })]\n          }), /*#__PURE__*/_jsx(\"input\", {\n            type: \"text\",\n            name: \"field3\",\n            placeholder: \"Title\",\n            className: classes.inputfield,\n            ref: titleInputRef,\n            required: true\n          })]\n        }), /*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: \"field4\",\n          children: [/*#__PURE__*/_jsxs(\"span\", {\n            children: [\"Enter question based on an item.\", /*#__PURE__*/_jsx(\"span\", {\n              className: classes.required,\n              children: \"*\"\n            })]\n          }), /*#__PURE__*/_jsx(\"input\", {\n            type: \"text\",\n            name: \"field4\",\n            placeholder: \"Ex:- What is the color of the phone?\",\n            className: classes.inputfield,\n            ref: questionInputRef,\n            required: true\n          })]\n        }), /*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: \"date\",\n          children: [/*#__PURE__*/_jsxs(\"span\", {\n            children: [\"Select a Date: \", /*#__PURE__*/_jsx(\"span\", {\n              className: classes.required,\n              children: \"*\"\n            })]\n          }), /*#__PURE__*/_jsx(\"input\", {\n            type: \"date\",\n            name: \"date\",\n            id: \"date\",\n            className: classes.customselect,\n            ref: dateInputRef,\n            required: true\n          })]\n        })]\n      }), /*#__PURE__*/_jsxs(\"fieldset\", {\n        children: [/*#__PURE__*/_jsx(\"legend\", {\n          children: \"Details\"\n        }), /*#__PURE__*/_jsxs(\"label\", {\n          htmlFor: \"description\",\n          children: [/*#__PURE__*/_jsxs(\"span\", {\n            children: [\"Description \", /*#__PURE__*/_jsx(\"span\", {\n              className: classes.required,\n              children: \"*\"\n            })]\n          }), /*#__PURE__*/_jsx(\"textarea\", {\n            type: \"text\",\n            name: \"description\",\n            placeholder: \"Description about item (like location etc...)\",\n            className: classes.textareafield,\n            ref: descriptionInputRef,\n            required: true\n          })]\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"file\",\n          id: \"image\",\n          name: \"image\",\n          accept: \"image/*\",\n          className: classes.customselect,\n          style: {\n            width: \"100%\"\n          },\n          onChange: converttobase64,\n          required: true\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: classes.center,\n          children: /*#__PURE__*/_jsx(Button, {\n            content: \"Post\"\n          })\n        })]\n      })]\n    })\n  });\n}\n\nexport default PostNewItem;","map":null,"metadata":{},"sourceType":"module"}