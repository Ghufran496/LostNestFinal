{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"H:\\\\React Course\\\\NextJS work\\\\Next_Sec_14_Authentication\\\\components\\\\auth\\\\auth-form.js\";\nimport { useState, useRef } from \"react\";\nimport { signIn } from \"next-auth/client\";\nimport { useRouter } from \"next/router\";\nimport classes from \"./auth-form.module.css\";\n\nasync function createUser(email, password) {\n  const response = await fetch(\"/api/auth/signup\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      email,\n      password\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Something went wrong!\");\n  }\n\n  return data;\n}\n\nfunction AuthForm() {\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const {\n    0: isLogin,\n    1: setIsLogin\n  } = useState(true);\n  const router = useRouter();\n\n  function switchAuthModeHandler() {\n    setIsLogin(prevState => !prevState);\n  }\n\n  async function submitHandler(event) {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value; // optional: Add validation\n\n    if (isLogin) {\n      const result = await signIn(\"credentials\", {\n        redirect: false,\n        email: enteredEmail,\n        password: enteredPassword\n      });\n\n      if (!result.error) {\n        // set some auth state\n        router.replace(\"/profile\");\n      }\n    } else {\n      try {\n        const result = await createUser(enteredEmail, enteredPassword);\n        console.log(result);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.col1,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.formbox,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form,\n        children: [!toggleForms && /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.loginform,\n          children: [/*#__PURE__*/_jsxDEV(\"center\", {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: classes.mainheading,\n              children: \"Login Form\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"email-id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            href: \"#\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              content: \"LOGIN\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes.message,\n            children: [\"Not Registered\\xA0?\\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n              onClick: toggleForm,\n              href: \"#\",\n              className: classes.link,\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), toggleForms && /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.registerform,\n          children: [/*#__PURE__*/_jsxDEV(\"center\", {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: classes.mainheading,\n              children: \"Register Form\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"user name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"email-id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            href: \"#\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              content: \"REGISTER\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes.message,\n            children: [\"Already Registered\\xA0?\\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n              href: \"#\",\n              onClick: toggleForm,\n              className: classes.link,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\nexport default AuthForm;","map":{"version":3,"sources":["H:/React Course/NextJS work/Next_Sec_14_Authentication/components/auth/auth-form.js"],"names":["useState","useRef","signIn","useRouter","classes","createUser","email","password","response","fetch","method","body","JSON","stringify","headers","data","json","ok","Error","message","AuthForm","emailInputRef","passwordInputRef","isLogin","setIsLogin","router","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","result","redirect","error","replace","console","log","col1","formbox","form","toggleForms","loginform","mainheading","toggleForm","link","registerform"],"mappings":"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","sourcesContent":["import { useState, useRef } from \"react\";\nimport { signIn } from \"next-auth/client\";\nimport { useRouter } from \"next/router\";\n\nimport classes from \"./auth-form.module.css\";\n\nasync function createUser(email, password) {\n  const response = await fetch(\"/api/auth/signup\", {\n    method: \"POST\",\n    body: JSON.stringify({ email, password }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Something went wrong!\");\n  }\n\n  return data;\n}\n\nfunction AuthForm() {\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const router = useRouter();\n\n  function switchAuthModeHandler() {\n    setIsLogin((prevState) => !prevState);\n  }\n\n  async function submitHandler(event) {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    // optional: Add validation\n\n    if (isLogin) {\n      const result = await signIn(\"credentials\", {\n        redirect: false,\n        email: enteredEmail,\n        password: enteredPassword,\n      });\n\n      if (!result.error) {\n        // set some auth state\n        router.replace(\"/profile\");\n      }\n    } else {\n      try {\n        const result = await createUser(enteredEmail, enteredPassword);\n        console.log(result);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  return (\n    <div className={classes.col1}>\n      <div className={classes.formbox}>\n        <div className={classes.form}>\n          {!toggleForms && (\n            <form className={classes.loginform}>\n              <center>\n                <h1 className={classes.mainheading}>Login Form</h1>\n              </center>\n              <input type=\"email\" placeholder=\"email-id\" />\n              <input type=\"password\" placeholder=\"password\" />\n              <Link href=\"#\">\n                <Button content=\"LOGIN\"></Button>\n              </Link>\n              <p className={classes.message}>\n                Not Registered&nbsp;?&nbsp;\n                <Link onClick={toggleForm} href=\"#\" className={classes.link}>\n                  Register\n                </Link>\n              </p>\n            </form>\n          )}\n          {toggleForms && (\n            <form className={classes.registerform}>\n              <center>\n                <h1 className={classes.mainheading}>Register Form</h1>\n              </center>\n              <input type=\"text\" placeholder=\"user name\" />\n              <input type=\"text\" placeholder=\"email-id\" />\n              <input type=\"password\" placeholder=\"password\" />\n              <Link href=\"#\">\n                <Button content=\"REGISTER\"></Button>\n              </Link>\n              <p className={classes.message}>\n                Already Registered&nbsp;?&nbsp;\n                <Link href=\"#\" onClick={toggleForm} className={classes.link}>\n                  Login\n                </Link>\n              </p>\n            </form>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}