{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\FYP\\\\LostNestfyp\\\\lostnestprj\\\\pages\\\\dashboard\\\\[itemid].js\";\nimport React, { useState, useEffect } from \"react\";\nimport Head from \"next/head\";\nimport { Fragment } from \"react\";\nimport EventSummary from \"../../components/feed/FeedDetails/event-summary\";\nimport EventLogistics from \"../../components/feed/FeedDetails/event-logistics\";\nimport EventContent from \"../../components/feed/FeedDetails/event-content\";\nimport QuestionForm from \"../../components/overlayForm/QuestionForm\";\nimport classes from \"./itemid.module.css\";\nimport { getPostDataById } from \"../../lib/db\";\nimport { getSession } from \"next-auth/client\";\nimport Button from \"../../components/UI/Button\";\nimport Loading from \"../../components/UI/Loading\";\n\nfunction ItemDetailPage(props) {\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: showQForm,\n    1: setIsShowQForm\n  } = useState(false);\n  const {\n    0: processedObject,\n    1: setProcessedObject\n  } = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const {\n        extractedObject\n      } = props;\n\n      if (typeof extractedObject === \"object\") {\n        setProcessedObject(extractedObject);\n        setIsLoading(false);\n      } else {\n        setIsLoading(true);\n      }\n    };\n\n    fetchData();\n  }, [props.extractedObject]);\n\n  if (isLoading || !processedObject) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n  const event = processedObject;\n\n  const showModeHandler = () => {\n    setIsShowQForm(true);\n  };\n\n  const hideModeHandler = () => {\n    setIsShowQForm(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: event.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: event.Description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventSummary, {\n      Title: event.Title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventLogistics, {\n      Date: event.Date,\n      ReducedImg: event.ReducedImg,\n      Title: event.Title,\n      Type: event.Type,\n      Category: event.Category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventContent, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: event.Description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.btndiv,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: toggleResponseHandler,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          content: showResponse ? \"Hide Responses\" : \"Show Responses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), showQForm && /*#__PURE__*/_jsxDEV(QuestionForm, {\n      onclose: hideModeHandler,\n      data: event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getServerSideProps(context) {\n  const postId = context.params.itemid;\n  const postData = await getPostDataById(postId);\n  const session = await getSession({\n    req: context.req\n  });\n\n  if (!session) {\n    return {\n      redirect: {\n        destination: \"/auth\",\n        permanent: false\n      }\n    };\n  }\n\n  return {\n    props: {\n      extractedObject: JSON.parse(JSON.stringify(postData))\n    }\n  };\n}\nexport default ItemDetailPage;","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/pages/dashboard/[itemid].js"],"names":["React","useState","useEffect","Head","Fragment","EventSummary","EventLogistics","EventContent","QuestionForm","classes","getPostDataById","getSession","Button","Loading","ItemDetailPage","props","isLoading","setIsLoading","showQForm","setIsShowQForm","processedObject","setProcessedObject","fetchData","extractedObject","event","showModeHandler","hideModeHandler","Title","Description","Date","ReducedImg","Type","Category","btndiv","toggleResponseHandler","showResponse","getServerSideProps","context","postId","params","itemid","postData","session","req","redirect","destination","permanent","JSON","parse","stringify"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Head from \"next/head\";\r\nimport { Fragment } from \"react\";\r\nimport EventSummary from \"../../components/feed/FeedDetails/event-summary\";\r\nimport EventLogistics from \"../../components/feed/FeedDetails/event-logistics\";\r\nimport EventContent from \"../../components/feed/FeedDetails/event-content\";\r\nimport QuestionForm from \"../../components/overlayForm/QuestionForm\";\r\nimport classes from \"./itemid.module.css\";\r\nimport { getPostDataById } from \"../../lib/db\";\r\nimport { getSession } from \"next-auth/client\";\r\nimport Button from \"../../components/UI/Button\";\r\n\r\nimport Loading from \"../../components/UI/Loading\";\r\n\r\nfunction ItemDetailPage(props) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showQForm, setIsShowQForm] = useState(false);\r\n  const [processedObject, setProcessedObject] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const { extractedObject } = props;\r\n\r\n      if (typeof extractedObject === \"object\") {\r\n        setProcessedObject(extractedObject);\r\n        setIsLoading(false);\r\n      } else {\r\n        setIsLoading(true);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [props.extractedObject]);\r\n\r\n  if (isLoading || !processedObject) {\r\n    return <Loading />;\r\n  }\r\n\r\n  const event = processedObject;\r\n\r\n  const showModeHandler = () => {\r\n    setIsShowQForm(true);\r\n  };\r\n  const hideModeHandler = () => {\r\n    setIsShowQForm(false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>{event.Title}</title>\r\n        <meta name=\"description\" content={event.Description} />\r\n      </Head>\r\n      <EventSummary Title={event.Title} />\r\n\r\n      <EventLogistics\r\n        Date={event.Date}\r\n        ReducedImg={event.ReducedImg}\r\n        Title={event.Title}\r\n        Type={event.Type}\r\n        Category={event.Category}\r\n      />\r\n\r\n      <EventContent>\r\n        <p>{event.Description}</p>\r\n      </EventContent>\r\n      <div className={classes.btndiv}>\r\n        {/* <button\r\n          onClick={showModeHandler}\r\n          className={classes.button52}\r\n          role=\"button\"\r\n        >\r\n          Claim this {event.Title}\r\n        </button> */}\r\n        <a onClick={toggleResponseHandler}>\r\n          <Button\r\n            content={showResponse ? \"Hide Responses\" : \"Show Responses\"}\r\n          ></Button>\r\n        </a>\r\n      </div>\r\n\r\n      {showQForm && <QuestionForm onclose={hideModeHandler} data={event} />}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport async function getServerSideProps(context) {\r\n  const postId = context.params.itemid;\r\n  const postData = await getPostDataById(postId);\r\n  const session = await getSession({ req: context.req });\r\n  if (!session) {\r\n    return {\r\n      redirect: {\r\n        destination: \"/auth\",\r\n        permanent: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  return {\r\n    props: {\r\n      extractedObject: JSON.parse(JSON.stringify(postData)),\r\n    },\r\n  };\r\n}\r\n\r\nexport default ItemDetailPage;\r\n"]},"metadata":{},"sourceType":"module"}