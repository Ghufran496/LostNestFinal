{"ast":null,"code":"import { getSession } from \"next-auth/client\";\nimport { connectToDatabase } from \"../../../lib/db\";\n\nasync function handler(req, res) {\n  if (req.method === \"GET\") {\n    const session = await getSession({\n      req: req\n    });\n\n    if (!session) {\n      res.status(401).json({\n        message: \"Not authenticated!\"\n      });\n      return;\n    }\n\n    console.log(session.user);\n    const userEmail = session.user.email;\n    const client = await connectToDatabase();\n    const usersCollection = client.db().collection(\"users\");\n    const user = await usersCollection.findOne({\n      email: userEmail\n    }, {\n      projection: {\n        password: 0\n      }\n    });\n\n    if (!user) {\n      res.status(404).json({\n        message: \"User not found.\"\n      });\n      client.close();\n      return;\n    }\n\n    const Profiledata = JSON.parse(JSON.stringify(user));\n    res.status(200).json(Profiledata);\n    client.close();\n  }\n}\n\nexport default handler;","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/pages/api/profile/profiledata.js"],"names":["getSession","connectToDatabase","handler","req","res","method","session","status","json","message","console","log","user","userEmail","email","client","usersCollection","db","collection","findOne","projection","password","close","Profiledata","JSON","parse","stringify"],"mappings":"AAAA,SAASA,UAAT,QAA2B,kBAA3B;AACA,SAASC,iBAAT,QAAkC,iBAAlC;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/B,MAAID,GAAG,CAACE,MAAJ,KAAe,KAAnB,EAA0B;AACxB,UAAMC,OAAO,GAAG,MAAMN,UAAU,CAAC;AAAEG,MAAAA,GAAG,EAAEA;AAAP,KAAD,CAAhC;;AAEA,QAAI,CAACG,OAAL,EAAc;AACZF,MAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB;AACA;AACD;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAO,CAACM,IAApB;AACA,UAAMC,SAAS,GAAGP,OAAO,CAACM,IAAR,CAAaE,KAA/B;AACA,UAAMC,MAAM,GAAG,MAAMd,iBAAiB,EAAtC;AACA,UAAMe,eAAe,GAAGD,MAAM,CAACE,EAAP,GAAYC,UAAZ,CAAuB,OAAvB,CAAxB;AACA,UAAMN,IAAI,GAAG,MAAMI,eAAe,CAACG,OAAhB,CACjB;AAAEL,MAAAA,KAAK,EAAED;AAAT,KADiB,EAEjB;AAAEO,MAAAA,UAAU,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ;AAAd,KAFiB,CAAnB;;AAIA,QAAI,CAACT,IAAL,EAAW;AACTR,MAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB;AACAM,MAAAA,MAAM,CAACO,KAAP;AACA;AACD;;AACD,UAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAed,IAAf,CAAX,CAApB;AAEAR,IAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBe,WAArB;AACAR,IAAAA,MAAM,CAACO,KAAP;AACD;AACF;;AAED,eAAepB,OAAf","sourcesContent":["import { getSession } from \"next-auth/client\";\r\nimport { connectToDatabase } from \"../../../lib/db\";\r\n\r\nasync function handler(req, res) {\r\n  if (req.method === \"GET\") {\r\n    const session = await getSession({ req: req });\r\n\r\n    if (!session) {\r\n      res.status(401).json({ message: \"Not authenticated!\" });\r\n      return;\r\n    }\r\n    console.log(session.user);\r\n    const userEmail = session.user.email;\r\n    const client = await connectToDatabase();\r\n    const usersCollection = client.db().collection(\"users\");\r\n    const user = await usersCollection.findOne(\r\n      { email: userEmail },\r\n      { projection: { password: 0 } }\r\n    );\r\n    if (!user) {\r\n      res.status(404).json({ message: \"User not found.\" });\r\n      client.close();\r\n      return;\r\n    }\r\n    const Profiledata = JSON.parse(JSON.stringify(user));\r\n\r\n    res.status(200).json(Profiledata);\r\n    client.close();\r\n  }\r\n}\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}