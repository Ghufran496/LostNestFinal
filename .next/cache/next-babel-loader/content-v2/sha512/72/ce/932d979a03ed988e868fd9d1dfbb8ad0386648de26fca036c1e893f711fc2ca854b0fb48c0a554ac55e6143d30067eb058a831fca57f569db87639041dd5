{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"G:/FYP/LostNestfyp/lostnestprj/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"G:/FYP/LostNestfyp/lostnestprj/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"G:\\\\FYP\\\\LostNestfyp\\\\lostnestprj\\\\components\\\\postcomp\\\\PostForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport classes from \"./PostForm.module.css\";\nimport Button from \"../UI/Button\";\nimport { useRef, useState } from \"react\";\nimport Loader from \"../UI/Loader\";\n\nfunction sendPostData(_x, _x2, _x3, _x4, _x5, _x6) {\n  return _sendPostData.apply(this, arguments);\n}\n\nfunction _sendPostData() {\n  _sendPostData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(Type, Category, Title, Description, Question, Date) {\n    var response, data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(\"/api/post/postitem\", {\n              method: \"POST\",\n              body: JSON.stringify({\n                Type: Type,\n                Category: Category,\n                Title: Title,\n                Description: Description,\n                Question: Question,\n                Date: Date\n              }),\n              headers: {\n                \"Content-Type\": \"application/json\"\n              }\n            });\n\n          case 2:\n            response = _context2.sent;\n            _context2.next = 5;\n            return response.json();\n\n          case 5:\n            data = _context2.sent;\n\n            if (response.ok) {\n              _context2.next = 8;\n              break;\n            }\n\n            throw new Error(data.message || \"Something went wrong!\");\n\n          case 8:\n            return _context2.abrupt(\"return\", data);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _sendPostData.apply(this, arguments);\n}\n\nfunction PostForm() {\n  _s();\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      isImage = _useState2[0],\n      setIsImage = _useState2[1];\n\n  var typeInputRef = useRef();\n  var categoryInputRef = useRef();\n  var titleInputRef = useRef();\n  var descriptionInputRef = useRef();\n  var questionInputRef = useRef();\n  var dateInputRef = useRef();\n\n  var postSubmitHandler = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var enteredType, enteredCategory, enteredTitle, enteredDescription, enteredQuestion, enteredDate, humanReadableDate, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              setIsLoading(true);\n              enteredType = typeInputRef.current.value;\n              enteredCategory = categoryInputRef.current.value;\n              enteredTitle = titleInputRef.current.value;\n              enteredDescription = descriptionInputRef.current.value;\n              enteredQuestion = questionInputRef.current.value;\n              enteredDate = dateInputRef.current.value;\n              humanReadableDate = new Date(enteredDate).toLocaleDateString(\"en-US\", {\n                day: \"numeric\",\n                month: \"long\",\n                year: \"numeric\"\n              });\n              _context.prev = 9;\n              _context.next = 12;\n              return sendPostData(enteredType, enteredCategory, enteredTitle, enteredDescription, enteredQuestion, humanReadableDate);\n\n            case 12:\n              result = _context.sent;\n              console.log(result);\n              event.target.reset(); // This resets the form\n\n              setIsLoading(false);\n              _context.next = 21;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](9);\n              console.log(_context.t0);\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[9, 18]]);\n    }));\n\n    return function postSubmitHandler(_x7) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontSize: \"5rem\"\n      },\n      children: \"Post new Item as Lost or Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Please Provide genunine Informations only.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: postSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"item\",\n        className: classes.customselect,\n        ref: typeInputRef,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          selected: true,\n          children: \"Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Lost\",\n          children: \"Lost\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Found\",\n          children: \"Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"category\",\n        className: classes.customselect,\n        ref: categoryInputRef,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          selected: true,\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Wallet\",\n          children: \"Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Card\",\n          children: \"ID Card / Student Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Wallet\",\n          children: \"Smart Phone / Laptop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Found\",\n          children: \"Keys\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Others\",\n          children: \"Others\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          style: {\n            fontSize: \"2rem\",\n            fontWeight: \"bolder\"\n          },\n          children: \"Item Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Title\",\n          className: classes.customselect,\n          ref: titleInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          style: {\n            fontSize: \"2rem\",\n            fontWeight: \"bolder\"\n          },\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          name: \"description\",\n          placeholder: \"Description about item (like location etc...)\",\n          className: classes.customselect,\n          ref: descriptionInputRef,\n          rows: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"question\",\n          style: {\n            fontSize: \"2rem\",\n            fontWeight: \"bolder\"\n          },\n          children: \"Enter question based on an item.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"question\",\n          placeholder: \"Ex:- What is the color of the phone?\",\n          className: classes.customselect,\n          ref: questionInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          style: {\n            fontSize: \"2rem\",\n            fontWeight: \"bolder\"\n          },\n          children: \"Select a Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          id: \"date\",\n          className: classes.customselect,\n          ref: dateInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"image\",\n        name: \"image\",\n        accept: \"image/*\",\n        className: classes.customselect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        content: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PostForm, \"cNsKx23FHhilz3LAHnbKyEpw5eY=\");\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/components/postcomp/PostForm.js"],"names":["React","classes","Button","useRef","useState","Loader","sendPostData","Type","Category","Title","Description","Question","Date","fetch","method","body","JSON","stringify","headers","response","json","data","ok","Error","message","PostForm","isLoading","setIsLoading","isImage","setIsImage","typeInputRef","categoryInputRef","titleInputRef","descriptionInputRef","questionInputRef","dateInputRef","postSubmitHandler","event","preventDefault","enteredType","current","value","enteredCategory","enteredTitle","enteredDescription","enteredQuestion","enteredDate","humanReadableDate","toLocaleDateString","day","month","year","result","console","log","target","reset","fontSize","form","customselect","display","flexDirection","fontWeight"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;;SACeC,Y;;;;;2EAAf,kBACEC,IADF,EAEEC,QAFF,EAGEC,KAHF,EAIEC,WAJF,EAKEC,QALF,EAMEC,IANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAQyBC,KAAK,CAAC,oBAAD,EAAuB;AACjDC,cAAAA,MAAM,EAAE,MADyC;AAEjDC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBV,gBAAAA,IAAI,EAAJA,IADmB;AAEnBC,gBAAAA,QAAQ,EAARA,QAFmB;AAGnBC,gBAAAA,KAAK,EAALA,KAHmB;AAInBC,gBAAAA,WAAW,EAAXA,WAJmB;AAKnBC,gBAAAA,QAAQ,EAARA,QALmB;AAMnBC,gBAAAA,IAAI,EAAJA;AANmB,eAAf,CAF2C;AAUjDM,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT;AAVwC,aAAvB,CAR9B;;AAAA;AAQQC,YAAAA,QARR;AAAA;AAAA,mBAuBqBA,QAAQ,CAACC,IAAT,EAvBrB;;AAAA;AAuBQC,YAAAA,IAvBR;;AAAA,gBAyBOF,QAAQ,CAACG,EAzBhB;AAAA;AAAA;AAAA;;AAAA,kBA0BU,IAAIC,KAAJ,CAAUF,IAAI,CAACG,OAAL,IAAgB,uBAA1B,CA1BV;;AAAA;AAAA,8CA6BSH,IA7BT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AA+BA,SAASI,QAAT,GAAoB;AAAA;;AAAA,kBACgBrB,QAAQ,CAAC,KAAD,CADxB;AAAA,MACXsB,SADW;AAAA,MACAC,YADA;;AAAA,mBAEYvB,QAAQ,CAAC,EAAD,CAFpB;AAAA,MAEXwB,OAFW;AAAA,MAEFC,UAFE;;AAGlB,MAAMC,YAAY,GAAG3B,MAAM,EAA3B;AACA,MAAM4B,gBAAgB,GAAG5B,MAAM,EAA/B;AACA,MAAM6B,aAAa,GAAG7B,MAAM,EAA5B;AACA,MAAM8B,mBAAmB,GAAG9B,MAAM,EAAlC;AACA,MAAM+B,gBAAgB,GAAG/B,MAAM,EAA/B;AACA,MAAMgC,YAAY,GAAGhC,MAAM,EAA3B;;AAEA,MAAMiC,iBAAiB;AAAA,wEAAG,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACxBA,cAAAA,KAAK,CAACC,cAAN;AACAX,cAAAA,YAAY,CAAC,IAAD,CAAZ;AAEMY,cAAAA,WAJkB,GAIJT,YAAY,CAACU,OAAb,CAAqBC,KAJjB;AAKlBC,cAAAA,eALkB,GAKAX,gBAAgB,CAACS,OAAjB,CAAyBC,KALzB;AAMlBE,cAAAA,YANkB,GAMHX,aAAa,CAACQ,OAAd,CAAsBC,KANnB;AAOlBG,cAAAA,kBAPkB,GAOGX,mBAAmB,CAACO,OAApB,CAA4BC,KAP/B;AAQlBI,cAAAA,eARkB,GAQAX,gBAAgB,CAACM,OAAjB,CAAyBC,KARzB;AASlBK,cAAAA,WATkB,GASJX,YAAY,CAACK,OAAb,CAAqBC,KATjB;AAWlBM,cAAAA,iBAXkB,GAWE,IAAInC,IAAJ,CAASkC,WAAT,EAAsBE,kBAAtB,CACxB,OADwB,EAExB;AACEC,gBAAAA,GAAG,EAAE,SADP;AAEEC,gBAAAA,KAAK,EAAE,MAFT;AAGEC,gBAAAA,IAAI,EAAE;AAHR,eAFwB,CAXF;AAAA;AAAA;AAAA,qBAqBD7C,YAAY,CAC/BiC,WAD+B,EAE/BG,eAF+B,EAG/BC,YAH+B,EAI/BC,kBAJ+B,EAK/BC,eAL+B,EAM/BE,iBAN+B,CArBX;;AAAA;AAqBhBK,cAAAA,MArBgB;AA8BtBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAf,cAAAA,KAAK,CAACkB,MAAN,CAAaC,KAAb,GA/BsB,CA+BA;;AACtB7B,cAAAA,YAAY,CAAC,KAAD,CAAZ;AAhCsB;AAAA;;AAAA;AAAA;AAAA;AAkCtB0B,cAAAA,OAAO,CAACC,GAAR;;AAlCsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAjBlB,iBAAiB;AAAA;AAAA;AAAA,KAAvB;;AAsCA,MAAIV,SAAJ,EAAe;AACb,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE;AAAA,4BACE;AAAI,MAAA,KAAK,EAAE;AAAE+B,QAAAA,QAAQ,EAAE;AAAZ,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAM,MAAA,SAAS,EAAExD,OAAO,CAACyD,IAAzB;AAA+B,MAAA,QAAQ,EAAEtB,iBAAzC;AAAA,8BACE;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,SAAS,EAAEnC,OAAO,CAAC0D,YAAvC;AAAqD,QAAA,GAAG,EAAE7B,YAA1D;AAAA,gCACE;AAAQ,UAAA,KAAK,EAAC,EAAd;AAAiB,UAAA,QAAQ,MAAzB;AAA0B,UAAA,QAAQ,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAQ,UAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAQ,UAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,SAAS,EAAE7B,OAAO,CAAC0D,YAFrB;AAGE,QAAA,GAAG,EAAE5B,gBAHP;AAAA,gCAKE;AAAQ,UAAA,KAAK,EAAC,EAAd;AAAiB,UAAA,QAAQ,MAAzB;AAA0B,UAAA,QAAQ,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAQE;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eASE;AAAQ,UAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eAUE;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,eAWE;AAAQ,UAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,eAYE;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAsBE;AAAK,QAAA,KAAK,EAAE;AAAE6B,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,aAAa,EAAE;AAAlC,SAAZ;AAAA,gCACE;AACE,UAAA,OAAO,EAAC,MADV;AAEE,UAAA,KAAK,EAAE;AAAEJ,YAAAA,QAAQ,EAAE,MAAZ;AAAoBK,YAAAA,UAAU,EAAE;AAAhC,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,WAAW,EAAC,OAHd;AAIE,UAAA,SAAS,EAAE7D,OAAO,CAAC0D,YAJrB;AAKE,UAAA,GAAG,EAAE3B;AALP;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBF,eAqCE;AAAK,QAAA,KAAK,EAAE;AAAE4B,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,aAAa,EAAE;AAAlC,SAAZ;AAAA,gCACE;AACE,UAAA,OAAO,EAAC,aADV;AAEE,UAAA,KAAK,EAAE;AAAEJ,YAAAA,QAAQ,EAAE,MAAZ;AAAoBK,YAAAA,UAAU,EAAE;AAAhC,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,aAFP;AAGE,UAAA,WAAW,EAAC,+CAHd;AAIE,UAAA,SAAS,EAAE7D,OAAO,CAAC0D,YAJrB;AAKE,UAAA,GAAG,EAAE1B,mBALP;AAME,UAAA,IAAI,EAAC;AANP;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cArCF,eAqDE;AAAK,QAAA,KAAK,EAAE;AAAE2B,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,aAAa,EAAE;AAAlC,SAAZ;AAAA,gCACE;AACE,UAAA,OAAO,EAAC,UADV;AAEE,UAAA,KAAK,EAAE;AAAEJ,YAAAA,QAAQ,EAAE,MAAZ;AAAoBK,YAAAA,UAAU,EAAE;AAAhC,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,WAAW,EAAC,sCAHd;AAIE,UAAA,SAAS,EAAE7D,OAAO,CAAC0D,YAJrB;AAKE,UAAA,GAAG,EAAEzB;AALP;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cArDF,eAoEE;AAAK,QAAA,KAAK,EAAE;AAAE0B,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,aAAa,EAAE;AAAlC,SAAZ;AAAA,gCACE;AACE,UAAA,OAAO,EAAC,MADV;AAEE,UAAA,KAAK,EAAE;AAAEJ,YAAAA,QAAQ,EAAE,MAAZ;AAAoBK,YAAAA,UAAU,EAAE;AAAhC,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,EAAE,EAAC,MAHL;AAIE,UAAA,SAAS,EAAE7D,OAAO,CAAC0D,YAJrB;AAKE,UAAA,GAAG,EAAExB;AALP;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cApEF,eAoFE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,OAFL;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,MAAM,EAAC,SAJT;AAKE,QAAA,SAAS,EAAElC,OAAO,CAAC0D;AALrB;AAAA;AAAA;AAAA;AAAA,cApFF,eA2FE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,cA3FF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAmGD;;GAtJQlC,Q;;KAAAA,Q;AAwJT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\nimport classes from \"./PostForm.module.css\";\r\nimport Button from \"../UI/Button\";\r\nimport { useRef, useState } from \"react\";\r\nimport Loader from \"../UI/Loader\";\r\nasync function sendPostData(\r\n  Type,\r\n  Category,\r\n  Title,\r\n  Description,\r\n  Question,\r\n  Date\r\n) {\r\n  const response = await fetch(\"/api/post/postitem\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify({\r\n      Type,\r\n      Category,\r\n      Title,\r\n      Description,\r\n      Question,\r\n      Date,\r\n    }),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Something went wrong!\");\r\n  }\r\n\r\n  return data;\r\n}\r\nfunction PostForm() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isImage, setIsImage] = useState(\"\");\r\n  const typeInputRef = useRef();\r\n  const categoryInputRef = useRef();\r\n  const titleInputRef = useRef();\r\n  const descriptionInputRef = useRef();\r\n  const questionInputRef = useRef();\r\n  const dateInputRef = useRef();\r\n\r\n  const postSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    const enteredType = typeInputRef.current.value;\r\n    const enteredCategory = categoryInputRef.current.value;\r\n    const enteredTitle = titleInputRef.current.value;\r\n    const enteredDescription = descriptionInputRef.current.value;\r\n    const enteredQuestion = questionInputRef.current.value;\r\n    const enteredDate = dateInputRef.current.value;\r\n\r\n    const humanReadableDate = new Date(enteredDate).toLocaleDateString(\r\n      \"en-US\",\r\n      {\r\n        day: \"numeric\",\r\n        month: \"long\",\r\n        year: \"numeric\",\r\n      }\r\n    );\r\n\r\n    try {\r\n      const result = await sendPostData(\r\n        enteredType,\r\n        enteredCategory,\r\n        enteredTitle,\r\n        enteredDescription,\r\n        enteredQuestion,\r\n        humanReadableDate\r\n      );\r\n\r\n      console.log(result);\r\n      event.target.reset(); // This resets the form\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <Loader />;\r\n  }\r\n  return (\r\n    <>\r\n      <h1 style={{ fontSize: \"5rem\" }}>Post new Item as Lost or Found</h1>\r\n      <h2>Please Provide genunine Informations only.</h2>\r\n      <form className={classes.form} onSubmit={postSubmitHandler}>\r\n        <select name=\"item\" className={classes.customselect} ref={typeInputRef}>\r\n          <option value=\"\" disabled selected>\r\n            Type\r\n          </option>\r\n          <option value=\"Lost\">Lost</option>\r\n          <option value=\"Found\">Found</option>\r\n        </select>\r\n        <select\r\n          name=\"category\"\r\n          className={classes.customselect}\r\n          ref={categoryInputRef}\r\n        >\r\n          <option value=\"\" disabled selected>\r\n            Category\r\n          </option>\r\n          <option value=\"Wallet\">Wallet</option>\r\n          <option value=\"Card\">ID Card / Student Card</option>\r\n          <option value=\"Wallet\">Smart Phone / Laptop</option>\r\n          <option value=\"Found\">Keys</option>\r\n          <option value=\"Others\">Others</option>\r\n        </select>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <label\r\n            htmlFor=\"name\"\r\n            style={{ fontSize: \"2rem\", fontWeight: \"bolder\" }}\r\n          >\r\n            Item Name\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Title\"\r\n            className={classes.customselect}\r\n            ref={titleInputRef}\r\n          ></input>\r\n        </div>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <label\r\n            htmlFor=\"description\"\r\n            style={{ fontSize: \"2rem\", fontWeight: \"bolder\" }}\r\n          >\r\n            Description\r\n          </label>\r\n          <textarea\r\n            type=\"text\"\r\n            name=\"description\"\r\n            placeholder=\"Description about item (like location etc...)\"\r\n            className={classes.customselect}\r\n            ref={descriptionInputRef}\r\n            rows=\"5\"\r\n          ></textarea>\r\n        </div>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <label\r\n            htmlFor=\"question\"\r\n            style={{ fontSize: \"2rem\", fontWeight: \"bolder\" }}\r\n          >\r\n            Enter question based on an item.\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"question\"\r\n            placeholder=\"Ex:- What is the color of the phone?\"\r\n            className={classes.customselect}\r\n            ref={questionInputRef}\r\n          ></input>\r\n        </div>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <label\r\n            htmlFor=\"date\"\r\n            style={{ fontSize: \"2rem\", fontWeight: \"bolder\" }}\r\n          >\r\n            Select a Date:\r\n          </label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"date\"\r\n            id=\"date\"\r\n            className={classes.customselect}\r\n            ref={dateInputRef}\r\n          ></input>\r\n        </div>\r\n\r\n        <input\r\n          type=\"file\"\r\n          id=\"image\"\r\n          name=\"image\"\r\n          accept=\"image/*\"\r\n          className={classes.customselect}\r\n        />\r\n        <Button content=\"Post\"></Button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PostForm;\r\n"]},"metadata":{},"sourceType":"module"}