{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\FYP\\\\LostNestfyp\\\\lostnestprj\\\\components\\\\overlayForm\\\\AForm.js\";\nimport React, { Fragment } from \"react\";\nimport classes from \"./AForm.module.css\";\nimport DetailForm from \"./DetailForm\";\nimport { useState } from \"react\";\n\nfunction AForm(props) {\n  const {\n    _id,\n    Answer,\n    ItemTitle,\n    PostID,\n    PosterID,\n    Question,\n    SubmittedDateTime\n  } = props.data2;\n  const {\n    0: isYes,\n    1: setIsYes\n  } = useState(false);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n\n  const yesHandler = () => {\n    setIsYes(true);\n  };\n\n  async function sendMessage(enteredInformations, ItemTitle, PostID, PosterID, Question, combinedDateTime) {\n    const response = await fetch(\"/api/answers/sendResponse\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        enteredInformations,\n        ItemTitle,\n        PostID,\n        PosterID,\n        Question,\n        combinedDateTime,\n        Answer\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n\n    if (!response.ok) {\n      setIsLoading(false);\n    }\n\n    return data;\n  }\n\n  const currentDate = new Date();\n  const formattedDate = currentDate.toLocaleDateString(\"en-US\");\n  const formattedTime = currentDate.toLocaleTimeString(\"en-US\");\n  const combinedDateTime = `${formattedDate} ${formattedTime}`;\n\n  const noHandler = async event => {\n    event.preventDefault();\n    setIsLoading(true);\n    const enteredInformations = \"Responder has nullified the validation.\";\n    const result = await sendMessage(enteredInformations, ItemTitle, PostID, PosterID, Question, combinedDateTime, Answer);\n\n    if (props.oncancle) {\n      props.oncancle();\n    }\n\n    setIsLoading(false);\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: \"1.5rem\"\n      },\n      children: \"Submiting...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: isYes ? /*#__PURE__*/_jsxDEV(DetailForm, {\n      close: props.oncancle,\n      senderData: props.data2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.diver,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.para1,\n        children: Question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.borderdiv,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            borderBottom: \"1px solid white\"\n          },\n          children: [\"Answer : \", Answer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Date: \", SubmittedDateTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.button89,\n          type: \"button\",\n          role: \"button\",\n          onClick: yesHandler,\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.button89,\n          type: \"button\",\n          role: \"button\",\n          onClick: noHandler,\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.button89,\n          type: \"button\",\n          role: \"button\",\n          onClick: props.oncancle,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\nexport default AForm;","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/components/overlayForm/AForm.js"],"names":["React","Fragment","classes","DetailForm","useState","AForm","props","_id","Answer","ItemTitle","PostID","PosterID","Question","SubmittedDateTime","data2","isYes","setIsYes","isLoading","setIsLoading","yesHandler","sendMessage","enteredInformations","combinedDateTime","response","fetch","method","body","JSON","stringify","headers","data","json","ok","currentDate","Date","formattedDate","toLocaleDateString","formattedTime","toLocaleTimeString","noHandler","event","preventDefault","result","oncancle","fontSize","diver","para1","borderdiv","borderBottom","button89"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport classes from \"./AForm.module.css\";\r\nimport DetailForm from \"./DetailForm\";\r\nimport { useState } from \"react\";\r\n\r\nfunction AForm(props) {\r\n  const {\r\n    _id,\r\n    Answer,\r\n    ItemTitle,\r\n    PostID,\r\n    PosterID,\r\n    Question,\r\n    SubmittedDateTime,\r\n  } = props.data2;\r\n  const [isYes, setIsYes] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const yesHandler = () => {\r\n    setIsYes(true);\r\n  };\r\n\r\n  async function sendMessage(\r\n    enteredInformations,\r\n    ItemTitle,\r\n    PostID,\r\n    PosterID,\r\n    Question,\r\n    combinedDateTime\r\n  ) {\r\n    const response = await fetch(\"/api/answers/sendResponse\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        enteredInformations,\r\n        ItemTitle,\r\n        PostID,\r\n        PosterID,\r\n        Question,\r\n        combinedDateTime,\r\n        Answer,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      setIsLoading(false);\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  const currentDate = new Date();\r\n  const formattedDate = currentDate.toLocaleDateString(\"en-US\");\r\n  const formattedTime = currentDate.toLocaleTimeString(\"en-US\");\r\n  const combinedDateTime = `${formattedDate} ${formattedTime}`;\r\n\r\n  const noHandler = async (event) => {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n    const enteredInformations = \"Responder has nullified the validation.\";\r\n\r\n    const result = await sendMessage(\r\n      enteredInformations,\r\n      ItemTitle,\r\n      PostID,\r\n      PosterID,\r\n      Question,\r\n      combinedDateTime,\r\n      Answer\r\n    );\r\n    if (props.oncancle) {\r\n      props.oncancle();\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n  if (isLoading) {\r\n    return <div style={{ fontSize: \"1.5rem\" }}>Submiting...</div>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {isYes ? (\r\n        <DetailForm close={props.oncancle} senderData={props.data2} />\r\n      ) : (\r\n        <div className={classes.diver}>\r\n          <h2>Question</h2>\r\n          <p className={classes.para1}>{Question}</p>\r\n          <div className={classes.borderdiv}>\r\n            <h2 style={{ borderBottom: \"1px solid white\" }}>\r\n              Answer : {Answer}\r\n            </h2>\r\n            <h2>Date: {SubmittedDateTime}</h2>\r\n          </div>\r\n\r\n          <div>\r\n            <button\r\n              className={classes.button89}\r\n              type=\"button\"\r\n              role=\"button\"\r\n              onClick={yesHandler}\r\n            >\r\n              Yes\r\n            </button>\r\n            <button\r\n              className={classes.button89}\r\n              type=\"button\"\r\n              role=\"button\"\r\n              onClick={noHandler}\r\n            >\r\n              No\r\n            </button>\r\n            <button\r\n              className={classes.button89}\r\n              type=\"button\"\r\n              role=\"button\"\r\n              onClick={props.oncancle}\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default AForm;\r\n"]},"metadata":{},"sourceType":"module"}