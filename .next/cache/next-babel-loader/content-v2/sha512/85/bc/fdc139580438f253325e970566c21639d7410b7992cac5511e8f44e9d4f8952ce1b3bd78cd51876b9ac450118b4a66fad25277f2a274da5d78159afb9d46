{"ast":null,"code":"import _regeneratorRuntime from \"G:/FYP/LostNestfyp/lostnestprj/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"G:/FYP/LostNestfyp/lostnestprj/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport function getAllPosts() {\n  return _getAllPosts.apply(this, arguments);\n}\n\nfunction _getAllPosts() {\n  _getAllPosts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var response, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"/api/post/postitem\");\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.json();\n\n          case 5:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getAllPosts.apply(this, arguments);\n}\n\nexport function getPostsById(_x) {\n  return _getPostsById.apply(this, arguments);\n} // export async function getFeaturedEvents() {\n//   const allEvents = await getAllEvents();\n//   return allEvents.filter((event) => event.isFeatured);\n// }\n// export async function getFilteredEvents(dateFilter) {\n//   const { year, month } = dateFilter;\n//   const allEvents = await getAllEvents();\n//   let filteredEvents = allEvents.filter((event) => {\n//     const eventDate = new Date(event.date);\n//     return (\n//       eventDate.getFullYear() === year && eventDate.getMonth() === month - 1\n//     );\n//   });\n//   return filteredEvents;\n// }\n\nfunction _getPostsById() {\n  _getPostsById = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n    var allEvents;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return getAllPosts();\n\n          case 2:\n            allEvents = _context2.sent;\n            return _context2.abrupt(\"return\", allEvents.find(function (event) {\n              return event.id === id;\n            }));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getPostsById.apply(this, arguments);\n}","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/components/helpers/api-util.js"],"names":["getAllPosts","fetch","response","json","data","getPostsById","id","allEvents","find","event"],"mappings":";;AAAA,gBAAsBA,WAAtB;AAAA;AAAA;;;0EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACkBC,KAAK,CAAC,oBAAD,CADvB;;AAAA;AACCC,YAAAA,QADD;AAAA;AAAA,mBAEcA,QAAQ,CAACC,IAAT,EAFd;;AAAA;AAECC,YAAAA,IAFD;AAAA,6CAeEA,IAfF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAkBP,gBAAsBC,YAAtB;AAAA;AAAA,C,CAKA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;2EAvBO,kBAA4BC,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACmBN,WAAW,EAD9B;;AAAA;AACCO,YAAAA,SADD;AAAA,8CAEEA,SAAS,CAACC,IAAV,CAAe,UAACC,KAAD;AAAA,qBAAWA,KAAK,CAACH,EAAN,KAAaA,EAAxB;AAAA,aAAf,CAFF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["export async function getAllPosts() {\n  const response = await fetch(\"/api/post/postitem\");\n  const data = await response.json();\n\n  // console.log(data);\n  // const events = [];\n\n  // for (const key in data) {\n  //   events.push({\n  //     id: key,\n  //     ...data[key],\n  //   });\n  // }\n\n  // console.log(events);\n  return data;\n}\n\nexport async function getPostsById(id) {\n  const allEvents = await getAllPosts();\n  return allEvents.find((event) => event.id === id);\n}\n\n// export async function getFeaturedEvents() {\n//   const allEvents = await getAllEvents();\n//   return allEvents.filter((event) => event.isFeatured);\n// }\n\n// export async function getFilteredEvents(dateFilter) {\n//   const { year, month } = dateFilter;\n\n//   const allEvents = await getAllEvents();\n\n//   let filteredEvents = allEvents.filter((event) => {\n//     const eventDate = new Date(event.date);\n//     return (\n//       eventDate.getFullYear() === year && eventDate.getMonth() === month - 1\n//     );\n//   });\n\n//   return filteredEvents;\n// }\n"]},"metadata":{},"sourceType":"module"}