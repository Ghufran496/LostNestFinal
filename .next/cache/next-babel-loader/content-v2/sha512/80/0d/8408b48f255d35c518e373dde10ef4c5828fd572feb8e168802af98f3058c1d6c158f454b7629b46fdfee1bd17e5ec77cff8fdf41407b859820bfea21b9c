{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\FYP\\\\LostNestfyp\\\\lostnestprj\\\\pages\\\\responses\\\\index.js\";\nimport React from \"react\";\nimport { Fragment } from \"react\";\nimport AllResponses from \"../../components/MyResponse/AllResponses\";\nimport { getSession } from \"next-auth/client\";\n\nconst MyResponses = () => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      style: {\n        color: \"#2e186a\",\n        margin: \"auto\",\n        fontSize: \"2.4rem\",\n        padding: \"0.5rem 0\",\n        borderBottom: \"3px solid #2e186a\",\n        width: \"15rem\",\n        textAlign: \"center\"\n      },\n      children: \"My Responses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AllResponses, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getServerSideProps(context) {\n  const session = await getSession({\n    req: context.req\n  });\n\n  if (!session) {\n    return {\n      redirect: {\n        destination: \"/auth\",\n        permanent: false\n      }\n    };\n  }\n\n  return {\n    props: {\n      session\n    }\n  };\n}\nexport default MyResponses;","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/pages/responses/index.js"],"names":["React","Fragment","AllResponses","getSession","MyResponses","color","margin","fontSize","padding","borderBottom","width","textAlign","getServerSideProps","context","session","req","redirect","destination","permanent","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,sBACE,QAAC,QAAD;AAAA,4BACE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,SADF;AAELC,QAAAA,MAAM,EAAE,MAFH;AAGLC,QAAAA,QAAQ,EAAE,QAHL;AAILC,QAAAA,OAAO,EAAE,UAJJ;AAKLC,QAAAA,YAAY,EAAE,mBALT;AAMLC,QAAAA,KAAK,EAAE,OANF;AAOLC,QAAAA,SAAS,EAAE;AAPN,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAcE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAnBD;;AAqBA,OAAO,eAAeC,kBAAf,CAAkCC,OAAlC,EAA2C;AAChD,QAAMC,OAAO,GAAG,MAAMX,UAAU,CAAC;AAAEY,IAAAA,GAAG,EAAEF,OAAO,CAACE;AAAf,GAAD,CAAhC;;AAEA,MAAI,CAACD,OAAL,EAAc;AACZ,WAAO;AACLE,MAAAA,QAAQ,EAAE;AACRC,QAAAA,WAAW,EAAE,OADL;AAERC,QAAAA,SAAS,EAAE;AAFH;AADL,KAAP;AAMD;;AAED,SAAO;AACLC,IAAAA,KAAK,EAAE;AAAEL,MAAAA;AAAF;AADF,GAAP;AAGD;AACD,eAAeV,WAAf","sourcesContent":["import React from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport AllResponses from \"../../components/MyResponse/AllResponses\";\r\nimport { getSession } from \"next-auth/client\";\r\n\r\nconst MyResponses = () => {\r\n  return (\r\n    <Fragment>\r\n      <h6\r\n        style={{\r\n          color: \"#2e186a\",\r\n          margin: \"auto\",\r\n          fontSize: \"2.4rem\",\r\n          padding: \"0.5rem 0\",\r\n          borderBottom: \"3px solid #2e186a\",\r\n          width: \"15rem\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        My Responses\r\n      </h6>\r\n      <AllResponses />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport async function getServerSideProps(context) {\r\n  const session = await getSession({ req: context.req });\r\n\r\n  if (!session) {\r\n    return {\r\n      redirect: {\r\n        destination: \"/auth\",\r\n        permanent: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  return {\r\n    props: { session },\r\n  };\r\n}\r\nexport default MyResponses;\r\n"]},"metadata":{},"sourceType":"module"}