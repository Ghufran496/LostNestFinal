{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\FYP\\\\LostNestfyp\\\\lostnestprj\\\\components\\\\stats\\\\ChartComp.js\";\n// import React from \"react\";\n// import classes from \"./ChartComp.module.css\";\n// import { Fragment, useEffect, useState } from \"react\";\n// import Noti from \"../notificationOverlay/noti\";\n// import Example from \"../../components/stats/chart\";\n// const ChartComp = () => {\n//   const [count, setCount] = useState({});\n//   useEffect(() => {\n//     fetch(\"/api/stats/getposts\")\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setCount(data);\n//       })\n//       .catch((error) => {\n//         console.error(\"Fetch error:\", error);\n//       });\n//   }, []);\n//   return (\n//     <Fragment>\n//       <div className={classes.main}>\n//         <Example postscount={count} />\n//         <ul className={classes.ulist}>\n//           <li className={classes.listitem}>\n//             <b>Total Posted Items: </b>\n//             {count.totalPosts ? count.totalPosts : 10}\n//           </li>\n//           <li className={classes.listitem}>\n//             <b>Lost Posted Items:</b> {count.totalPosts ? count.lostPosts : 7}\n//           </li>\n//           <li>\n//             <b>Found Posted Items:</b> {count.totalPosts ? count.foundPosts : 3}\n//           </li>\n//         </ul>\n//       </div>\n//       {!count.totalPosts && <Noti data=\"Updating Stats...\" />}\n//     </Fragment>\n//   );\n// };\n// export default ChartComp;\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport Noti from \"../notificationOverlay/noti\";\nimport Example from \"../../components/stats/chart\";\n\nconst ChartComp = () => {\n  const {\n    0: count,\n    1: setCount\n  } = useState({});\n  useEffect(() => {\n    // Use an IIFE to fetch data on the client side\n    (async () => {\n      try {\n        const response = await fetch(\"/api/stats/getposts\");\n        const data = await response.json();\n        setCount(data);\n      } catch (error) {\n        console.error(\"Fetch error:\", error);\n      }\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.main,\n      children: [count.totalPosts && /*#__PURE__*/_jsxDEV(Example, {\n        postscount: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: classes.ulist,\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: classes.listitem,\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Total Posted Items: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), count.totalPosts ? count.totalPosts : 10]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: classes.listitem,\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Lost Posted Items:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), \" \", count.totalPosts ? count.lostPosts : 7]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Found Posted Items:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), \" \", count.totalPosts ? count.foundPosts : 3]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), !count.totalPosts && /*#__PURE__*/_jsxDEV(Noti, {\n      data: \"Updating Stats...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ChartComp;","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/components/stats/ChartComp.js"],"names":["React","useEffect","useState","Fragment","Noti","Example","ChartComp","count","setCount","response","fetch","data","json","error","console","classes","main","totalPosts","ulist","listitem","lostPosts","foundPosts"],"mappings":";;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,OAAP,MAAoB,8BAApB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,KAAC,YAAY;AACX,UAAI;AACF,cAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,qBAAD,CAA5B;AACA,cAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAJ,QAAAA,QAAQ,CAACG,IAAD,CAAR;AACD,OAJD,CAIE,OAAOE,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAc,cAAd,EAA8BA,KAA9B;AACD;AACF,KARD;AASD,GAXQ,EAWN,EAXM,CAAT;AAaA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEE,OAAO,CAACC,IAAxB;AAAA,iBAEGT,KAAK,CAACU,UAAN,iBAAoB,QAAC,OAAD;AAAS,QAAA,UAAU,EAAEV;AAArB;AAAA;AAAA;AAAA;AAAA,cAFvB,eAGE;AAAI,QAAA,SAAS,EAAEQ,OAAO,CAACG,KAAvB;AAAA,gCACE;AAAI,UAAA,SAAS,EAAEH,OAAO,CAACI,QAAvB;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGZ,KAAK,CAACU,UAAN,GAAmBV,KAAK,CAACU,UAAzB,GAAsC,EAFzC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAI,UAAA,SAAS,EAAEF,OAAO,CAACI,QAAvB;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,OAC6BZ,KAAK,CAACU,UAAN,GAAmBV,KAAK,CAACa,SAAzB,GAAqC,CADlE;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAQE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,OAC8Bb,KAAK,CAACU,UAAN,GAAmBV,KAAK,CAACc,UAAzB,GAAsC,CADpE;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAiBG,CAACd,KAAK,CAACU,UAAP,iBAAqB,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,YAjBxB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CArCD;;AAuCA,eAAeX,SAAf","sourcesContent":["// import React from \"react\";\r\n// import classes from \"./ChartComp.module.css\";\r\n\r\n// import { Fragment, useEffect, useState } from \"react\";\r\n// import Noti from \"../notificationOverlay/noti\";\r\n// import Example from \"../../components/stats/chart\";\r\n// const ChartComp = () => {\r\n//   const [count, setCount] = useState({});\r\n\r\n//   useEffect(() => {\r\n//     fetch(\"/api/stats/getposts\")\r\n//       .then((response) => response.json())\r\n//       .then((data) => {\r\n//         setCount(data);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(\"Fetch error:\", error);\r\n//       });\r\n//   }, []);\r\n//   return (\r\n//     <Fragment>\r\n//       <div className={classes.main}>\r\n//         <Example postscount={count} />\r\n//         <ul className={classes.ulist}>\r\n//           <li className={classes.listitem}>\r\n//             <b>Total Posted Items: </b>\r\n//             {count.totalPosts ? count.totalPosts : 10}\r\n//           </li>\r\n//           <li className={classes.listitem}>\r\n//             <b>Lost Posted Items:</b> {count.totalPosts ? count.lostPosts : 7}\r\n//           </li>\r\n//           <li>\r\n//             <b>Found Posted Items:</b> {count.totalPosts ? count.foundPosts : 3}\r\n//           </li>\r\n//         </ul>\r\n//       </div>\r\n//       {!count.totalPosts && <Noti data=\"Updating Stats...\" />}\r\n//     </Fragment>\r\n//   );\r\n// };\r\n\r\n// export default ChartComp;\r\nimport React, { useEffect, useState, Fragment } from \"react\";\r\nimport Noti from \"../notificationOverlay/noti\";\r\nimport Example from \"../../components/stats/chart\";\r\n\r\nconst ChartComp = () => {\r\n  const [count, setCount] = useState({});\r\n\r\n  useEffect(() => {\r\n    // Use an IIFE to fetch data on the client side\r\n    (async () => {\r\n      try {\r\n        const response = await fetch(\"/api/stats/getposts\");\r\n        const data = await response.json();\r\n        setCount(data);\r\n      } catch (error) {\r\n        console.error(\"Fetch error:\", error);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.main}>\r\n        {/* Render the chart only when count has data */}\r\n        {count.totalPosts && <Example postscount={count} />}\r\n        <ul className={classes.ulist}>\r\n          <li className={classes.listitem}>\r\n            <b>Total Posted Items: </b>\r\n            {count.totalPosts ? count.totalPosts : 10}\r\n          </li>\r\n          <li className={classes.listitem}>\r\n            <b>Lost Posted Items:</b> {count.totalPosts ? count.lostPosts : 7}\r\n          </li>\r\n          <li>\r\n            <b>Found Posted Items:</b> {count.totalPosts ? count.foundPosts : 3}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      {!count.totalPosts && <Noti data=\"Updating Stats...\" />}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ChartComp;\r\n"]},"metadata":{},"sourceType":"module"}