{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\FYP\\\\LostNestfyp\\\\lostnestprj\\\\pages\\\\dashboard\\\\[itemid].js\";\nimport React from \"react\";\n\nconst {\n  ObjectId\n} = require(\"mongodb\");\n\nimport { connectToDatabase } from \"../../lib/db\";\n\nfunction ItemDetailPage(props) {\n  const event = props.extractedObject;\n  return;\n\n  /*#__PURE__*/\n  _jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: event.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(EventSummary, {\n      title: event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(EventLogistics, {\n      date: event.date,\n      address: event.location,\n      image: event.image,\n      imageAlt: event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(EventContent, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: event.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Comments, {\n      eventId: event.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this);\n}\n\nexport async function getServerSideProps(context) {\n  const postId = context.params.itemid;\n  const objectId = new ObjectId(postId); // Convert postId to ObjectId\n\n  const client = await connectToDatabase();\n  const db = client.db();\n  const data = await db.collection(\"PostedItem\").find({}).toArray();\n  const extractedObject = data.find(item => item._id.equals(objectId));\n  return {\n    props: {\n      extractedObject: JSON.parse(JSON.stringify(extractedObject))\n    }\n  };\n}\nexport default ItemDetailPage;","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/pages/dashboard/[itemid].js"],"names":["React","ObjectId","require","connectToDatabase","ItemDetailPage","props","event","extractedObject","title","description","date","location","image","id","getServerSideProps","context","postId","params","itemid","objectId","client","db","data","collection","find","toArray","item","_id","equals","JSON","parse","stringify"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAeC,OAAO,CAAC,SAAD,CAA5B;;AAEA,SAASC,iBAAT,QAAkC,cAAlC;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,QAAMC,KAAK,GAAGD,KAAK,CAACE,eAApB;AAEA;;AACA;AAAA,UAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQD,KAAK,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,KAAK,CAACG;AAAxC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEH,KAAK,CAACE;AAA3B;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,cAAD;AACE,MAAA,IAAI,EAAEF,KAAK,CAACI,IADd;AAEE,MAAA,OAAO,EAAEJ,KAAK,CAACK,QAFjB;AAGE,MAAA,KAAK,EAAEL,KAAK,CAACM,KAHf;AAIE,MAAA,QAAQ,EAAEN,KAAK,CAACE;AAJlB;AAAA;AAAA;AAAA;AAAA,YANF,eAYE,QAAC,YAAD;AAAA,6BACE;AAAA,kBAAIF,KAAK,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF,eAeE,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEH,KAAK,CAACO;AAAzB;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBD;;AAED,OAAO,eAAeC,kBAAf,CAAkCC,OAAlC,EAA2C;AAChD,QAAMC,MAAM,GAAGD,OAAO,CAACE,MAAR,CAAeC,MAA9B;AACA,QAAMC,QAAQ,GAAG,IAAIlB,QAAJ,CAAae,MAAb,CAAjB,CAFgD,CAET;;AAEvC,QAAMI,MAAM,GAAG,MAAMjB,iBAAiB,EAAtC;AACA,QAAMkB,EAAE,GAAGD,MAAM,CAACC,EAAP,EAAX;AAEA,QAAMC,IAAI,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,YAAd,EAA4BC,IAA5B,CAAiC,EAAjC,EAAqCC,OAArC,EAAnB;AAEA,QAAMlB,eAAe,GAAGe,IAAI,CAACE,IAAL,CAAWE,IAAD,IAAUA,IAAI,CAACC,GAAL,CAASC,MAAT,CAAgBT,QAAhB,CAApB,CAAxB;AAEA,SAAO;AACLd,IAAAA,KAAK,EAAE;AACLE,MAAAA,eAAe,EAAEsB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAexB,eAAf,CAAX;AADZ;AADF,GAAP;AAKD;AAED,eAAeH,cAAf","sourcesContent":["import React from \"react\";\r\n\r\nconst { ObjectId } = require(\"mongodb\");\r\n\r\nimport { connectToDatabase } from \"../../lib/db\";\r\n\r\nfunction ItemDetailPage(props) {\r\n  const event = props.extractedObject;\r\n\r\n  return;\r\n  <Fragment>\r\n    <Head>\r\n      <title>{event.title}</title>\r\n      <meta name=\"description\" content={event.description} />\r\n    </Head>\r\n    <EventSummary title={event.title} />\r\n    <EventLogistics\r\n      date={event.date}\r\n      address={event.location}\r\n      image={event.image}\r\n      imageAlt={event.title}\r\n    />\r\n    <EventContent>\r\n      <p>{event.description}</p>\r\n    </EventContent>\r\n    <Comments eventId={event.id} />\r\n  </Fragment>;\r\n}\r\n\r\nexport async function getServerSideProps(context) {\r\n  const postId = context.params.itemid;\r\n  const objectId = new ObjectId(postId); // Convert postId to ObjectId\r\n\r\n  const client = await connectToDatabase();\r\n  const db = client.db();\r\n\r\n  const data = await db.collection(\"PostedItem\").find({}).toArray();\r\n\r\n  const extractedObject = data.find((item) => item._id.equals(objectId));\r\n\r\n  return {\r\n    props: {\r\n      extractedObject: JSON.parse(JSON.stringify(extractedObject)),\r\n    },\r\n  };\r\n}\r\n\r\nexport default ItemDetailPage;\r\n"]},"metadata":{},"sourceType":"module"}