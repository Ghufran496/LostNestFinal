{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"G:/FYP/LostNestfyp/lostnestprj/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"G:\\\\FYP\\\\LostNestfyp\\\\lostnestprj\\\\components\\\\MyResponse\\\\ResponseItem.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import React, { useState } from \"react\";\n// import classes from \"./ResponseItem.module.css\";\n// const ResponseItem = (props) => {\n//   const {\n//     _id,\n//     enteredContact,\n//     ItemTitle,\n//     PostID,\n//     PosterID,\n//     Question,\n//     ValidatorDateTime,\n//     Answer,\n//   } = props.data;\n//   const [isDivVisible, setIsDivVisible] = useState(false);\n//   const handleButtonClick = () => {\n//     setIsDivVisible(!isDivVisible);\n//   };\n//   return (\n//     <li\n//       style={{\n//         fontSize: \"1.5rem\",\n//         border: \"1px solid #311465\",\n//         padding: \"2rem 8rem 2rem 2rem\",\n//         textTransform: \"capitalize\",\n//         boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\n//         fontWeight: \"400\",\n//         borderRadius: \"2.5rem\",\n//         position: \"relative\", // Necessary for positioning the hidden div\n//       }}\n//     >\n//       <h3>\n//         Item ID: <span className={classes.spaner}>{PostID}</span>\n//       </h3>\n//       <h3>\n//         Item Name: <span className={classes.spaner}>{ItemTitle}</span>\n//       </h3>\n//       <h3>\n//         Question: <span className={classes.spaner}>{Question}</span>\n//       </h3>\n//       <h3>\n//         Your Answer: <span className={classes.spaner}>{Answer}</span>\n//       </h3>\n//       <h3>\n//         Time: <span className={classes.spaner}>{ValidatorDateTime}</span>\n//       </h3>\n//       <button className={classes.btn} onClick={handleButtonClick}>\n//         Show Response\n//       </button>\n//       {isDivVisible && <div>i am visible</div>}\n//     </li>\n//   );\n// };\n// export default ResponseItem;\nimport React, { useState } from \"react\";\nimport classes from \"./ResponseItem.module.css\";\n\nvar ResponseItem = function ResponseItem(props) {\n  _s();\n\n  var _props$data = props.data,\n      _id = _props$data._id,\n      enteredContact = _props$data.enteredContact,\n      ItemTitle = _props$data.ItemTitle,\n      PostID = _props$data.PostID,\n      PosterID = _props$data.PosterID,\n      Question = _props$data.Question,\n      ValidatorDateTime = _props$data.ValidatorDateTime,\n      Answer = _props$data.Answer; // Use an object to store visibility state for each item\n\n  var _useState = useState({}),\n      itemVisibilities = _useState[0],\n      setItemVisibilities = _useState[1];\n\n  var handleButtonClick = function handleButtonClick() {\n    // Toggle visibility for the current item\n    setItemVisibilities(function (prevVisibilities) {\n      return _objectSpread(_objectSpread({}, prevVisibilities), {}, _defineProperty({}, _id, !prevVisibilities[_id]));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    style: {\n      fontSize: \"1.5rem\",\n      border: \"1px solid #311465\",\n      padding: \"2rem 8rem 2rem 2rem\",\n      textTransform: \"capitalize\",\n      boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\n      fontWeight: \"400\",\n      borderRadius: \"2.5rem\",\n      position: \"relative\" // Necessary for positioning the hidden div\n\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Item ID: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.spaner,\n        children: PostID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 18\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Item Name: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.spaner,\n        children: ItemTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 20\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Question: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.spaner,\n        children: Question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Your Answer: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.spaner,\n        children: Answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 22\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Time: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.spaner,\n        children: ValidatorDateTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.btn,\n      onClick: handleButtonClick,\n      children: \"Show Response\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, _this), itemVisibilities[_id] && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"i am visible\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 33\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ResponseItem, \"2auFnePt9AtZQj+qmDhMf7acvvI=\");\n\n_c = ResponseItem;\nexport default ResponseItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResponseItem\");","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/components/MyResponse/ResponseItem.js"],"names":["React","useState","classes","ResponseItem","props","data","_id","enteredContact","ItemTitle","PostID","PosterID","Question","ValidatorDateTime","Answer","itemVisibilities","setItemVisibilities","handleButtonClick","prevVisibilities","fontSize","border","padding","textTransform","boxShadow","fontWeight","borderRadius","position","spaner","btn"],"mappings":"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","sourcesContent":["// import React, { useState } from \"react\";\r\n// import classes from \"./ResponseItem.module.css\";\r\n\r\n// const ResponseItem = (props) => {\r\n//   const {\r\n//     _id,\r\n//     enteredContact,\r\n//     ItemTitle,\r\n//     PostID,\r\n//     PosterID,\r\n//     Question,\r\n//     ValidatorDateTime,\r\n//     Answer,\r\n//   } = props.data;\r\n//   const [isDivVisible, setIsDivVisible] = useState(false);\r\n\r\n//   const handleButtonClick = () => {\r\n//     setIsDivVisible(!isDivVisible);\r\n//   };\r\n//   return (\r\n//     <li\r\n//       style={{\r\n//         fontSize: \"1.5rem\",\r\n//         border: \"1px solid #311465\",\r\n//         padding: \"2rem 8rem 2rem 2rem\",\r\n//         textTransform: \"capitalize\",\r\n//         boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\r\n//         fontWeight: \"400\",\r\n//         borderRadius: \"2.5rem\",\r\n//         position: \"relative\", // Necessary for positioning the hidden div\r\n//       }}\r\n//     >\r\n//       <h3>\r\n//         Item ID: <span className={classes.spaner}>{PostID}</span>\r\n//       </h3>\r\n//       <h3>\r\n//         Item Name: <span className={classes.spaner}>{ItemTitle}</span>\r\n//       </h3>\r\n//       <h3>\r\n//         Question: <span className={classes.spaner}>{Question}</span>\r\n//       </h3>\r\n//       <h3>\r\n//         Your Answer: <span className={classes.spaner}>{Answer}</span>\r\n//       </h3>\r\n//       <h3>\r\n//         Time: <span className={classes.spaner}>{ValidatorDateTime}</span>\r\n//       </h3>\r\n\r\n//       <button className={classes.btn} onClick={handleButtonClick}>\r\n//         Show Response\r\n//       </button>\r\n//       {isDivVisible && <div>i am visible</div>}\r\n//     </li>\r\n//   );\r\n// };\r\n\r\n// export default ResponseItem;\r\n\r\nimport React, { useState } from \"react\";\r\nimport classes from \"./ResponseItem.module.css\";\r\n\r\nconst ResponseItem = (props) => {\r\n  const {\r\n    _id,\r\n    enteredContact,\r\n    ItemTitle,\r\n    PostID,\r\n    PosterID,\r\n    Question,\r\n    ValidatorDateTime,\r\n    Answer,\r\n  } = props.data;\r\n\r\n  // Use an object to store visibility state for each item\r\n  const [itemVisibilities, setItemVisibilities] = useState({});\r\n\r\n  const handleButtonClick = () => {\r\n    // Toggle visibility for the current item\r\n    setItemVisibilities((prevVisibilities) => ({\r\n      ...prevVisibilities,\r\n      [_id]: !prevVisibilities[_id],\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <li\r\n      style={{\r\n        fontSize: \"1.5rem\",\r\n        border: \"1px solid #311465\",\r\n        padding: \"2rem 8rem 2rem 2rem\",\r\n        textTransform: \"capitalize\",\r\n        boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\r\n        fontWeight: \"400\",\r\n        borderRadius: \"2.5rem\",\r\n        position: \"relative\", // Necessary for positioning the hidden div\r\n      }}\r\n    >\r\n      <h3>\r\n        Item ID: <span className={classes.spaner}>{PostID}</span>\r\n      </h3>\r\n      <h3>\r\n        Item Name: <span className={classes.spaner}>{ItemTitle}</span>\r\n      </h3>\r\n      <h3>\r\n        Question: <span className={classes.spaner}>{Question}</span>\r\n      </h3>\r\n      <h3>\r\n        Your Answer: <span className={classes.spaner}>{Answer}</span>\r\n      </h3>\r\n      <h3>\r\n        Time: <span className={classes.spaner}>{ValidatorDateTime}</span>\r\n      </h3>\r\n\r\n      <button className={classes.btn} onClick={handleButtonClick}>\r\n        Show Response\r\n      </button>\r\n      {itemVisibilities[_id] && <div>i am visible</div>}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ResponseItem;\r\n"]},"metadata":{},"sourceType":"module"}