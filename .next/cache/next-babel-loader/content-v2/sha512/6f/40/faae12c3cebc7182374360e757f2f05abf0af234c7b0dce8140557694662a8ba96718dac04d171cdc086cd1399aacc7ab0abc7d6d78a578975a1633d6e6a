{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"G:\\\\FYP\\\\LostNestfyp\\\\lostnestprj\\\\components\\\\mylistings\\\\Specificpost.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport ErrorComp from \"../UI/ErrorComp\";\nimport SpecificGrid from \"./SpecificGrid\";\nimport Loading from \"../UI/Loading\";\n\nfunction Specificpost() {\n  _s();\n\n  var _useState = useState(\"\"),\n      isData = _useState[0],\n      setIsData = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      isError = _useState3[0],\n      setIsError = _useState3[1];\n\n  var _useState4 = useState(\"Sorry but the page you are looking for does not exist.\"),\n      isErrorData = _useState4[0],\n      setIsErrorData = _useState4[1];\n\n  useEffect(function () {\n    var isMounted = true; // Flag to track if the component is mounted\n\n    setIsLoading(true);\n    fetch(\"/api/myposts/fetchmypost\").then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (isMounted) {\n        //console.log(data);\n        var dataArray = Array.isArray(data) ? data : [data]; //console.log(dataArray);\n\n        setIsData(dataArray);\n\n        if (data.message) {\n          setIsErrorData(data.message);\n          setIsError(true);\n        }\n\n        setIsLoading(false);\n      }\n    })[\"catch\"](function (error) {\n      if (isMounted) {\n        setIsError(true);\n        setIsErrorData(\"An error occurred while fetching data.\");\n        setIsLoading(false);\n      }\n\n      console.error(\"Fetch error:\", error);\n    }); // Cleanup function\n\n    return function () {\n      isMounted = false; // Set flag to false when component is unmounted\n    };\n  }, [setIsData, setIsError, setIsErrorData]);\n\n  if (!isData) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"no Listing found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(ErrorComp, {\n      errorData: isErrorData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SpecificGrid, {\n      data: isData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Specificpost, \"u9Pdcpvk3j9H2eg7IiQ8vroAKGM=\");\n\n_c = Specificpost;\nexport default Specificpost;\n\nvar _c;\n\n$RefreshReg$(_c, \"Specificpost\");","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/components/mylistings/Specificpost.js"],"names":["React","useEffect","useState","ErrorComp","SpecificGrid","Loading","Specificpost","isData","setIsData","isLoading","setIsLoading","isError","setIsError","isErrorData","setIsErrorData","isMounted","fetch","then","response","json","data","dataArray","Array","isArray","message","error","console"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AAAA,kBACMJ,QAAQ,CAAC,EAAD,CADd;AAAA,MACfK,MADe;AAAA,MACPC,SADO;;AAAA,mBAEYN,QAAQ,CAAC,KAAD,CAFpB;AAAA,MAEfO,SAFe;AAAA,MAEJC,YAFI;;AAAA,mBAGQR,QAAQ,CAAC,KAAD,CAHhB;AAAA,MAGfS,OAHe;AAAA,MAGNC,UAHM;;AAAA,mBAIgBV,QAAQ,CAC5C,wDAD4C,CAJxB;AAAA,MAIfW,WAJe;AAAA,MAIFC,cAJE;;AAOtBb,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIc,SAAS,GAAG,IAAhB,CADc,CACQ;;AAEtBL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAM,IAAAA,KAAK,CAAC,0BAAD,CAAL,CACGC,IADH,CACQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KADR,EAEGF,IAFH,CAEQ,UAACG,IAAD,EAAU;AACd,UAAIL,SAAJ,EAAe;AACb;AAEA,YAAMM,SAAS,GAAGC,KAAK,CAACC,OAAN,CAAcH,IAAd,IAAsBA,IAAtB,GAA6B,CAACA,IAAD,CAA/C,CAHa,CAIb;;AACAZ,QAAAA,SAAS,CAACa,SAAD,CAAT;;AAEA,YAAID,IAAI,CAACI,OAAT,EAAkB;AAChBV,UAAAA,cAAc,CAACM,IAAI,CAACI,OAAN,CAAd;AACAZ,UAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AACDF,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,KAhBH,WAiBS,UAACe,KAAD,EAAW;AAChB,UAAIV,SAAJ,EAAe;AACbH,QAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,QAAAA,cAAc,CAAC,wCAAD,CAAd;AACAJ,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AACDgB,MAAAA,OAAO,CAACD,KAAR,CAAc,cAAd,EAA8BA,KAA9B;AACD,KAxBH,EALc,CA+Bd;;AACA,WAAO,YAAM;AACXV,MAAAA,SAAS,GAAG,KAAZ,CADW,CACQ;AACpB,KAFD;AAGD,GAnCQ,EAmCN,CAACP,SAAD,EAAYI,UAAZ,EAAwBE,cAAxB,CAnCM,CAAT;;AAqCA,MAAI,CAACP,MAAL,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAII,OAAJ,EAAa;AACX,wBAAO,QAAC,SAAD;AAAW,MAAA,SAAS,EAAEE;AAAtB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEN;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,SAAS,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA1DQH,Y;;KAAAA,Y;AA4DT,eAAeA,YAAf","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ErrorComp from \"../UI/ErrorComp\";\r\nimport SpecificGrid from \"./SpecificGrid\";\r\nimport Loading from \"../UI/Loading\";\r\n\r\nfunction Specificpost() {\r\n  const [isData, setIsData] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  const [isErrorData, setIsErrorData] = useState(\r\n    \"Sorry but the page you are looking for does not exist.\"\r\n  );\r\n  useEffect(() => {\r\n    let isMounted = true; // Flag to track if the component is mounted\r\n\r\n    setIsLoading(true);\r\n\r\n    fetch(\"/api/myposts/fetchmypost\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (isMounted) {\r\n          //console.log(data);\r\n\r\n          const dataArray = Array.isArray(data) ? data : [data];\r\n          //console.log(dataArray);\r\n          setIsData(dataArray);\r\n\r\n          if (data.message) {\r\n            setIsErrorData(data.message);\r\n            setIsError(true);\r\n          }\r\n          setIsLoading(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        if (isMounted) {\r\n          setIsError(true);\r\n          setIsErrorData(\"An error occurred while fetching data.\");\r\n          setIsLoading(false);\r\n        }\r\n        console.error(\"Fetch error:\", error);\r\n      });\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      isMounted = false; // Set flag to false when component is unmounted\r\n    };\r\n  }, [setIsData, setIsError, setIsErrorData]);\r\n\r\n  if (!isData) {\r\n    return <h1>no Listing found!</h1>;\r\n  }\r\n\r\n  if (isError) {\r\n    return <ErrorComp errorData={isErrorData} />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <SpecificGrid data={isData} />\r\n      {isLoading && <Loading />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Specificpost;\r\n"]},"metadata":{},"sourceType":"module"}