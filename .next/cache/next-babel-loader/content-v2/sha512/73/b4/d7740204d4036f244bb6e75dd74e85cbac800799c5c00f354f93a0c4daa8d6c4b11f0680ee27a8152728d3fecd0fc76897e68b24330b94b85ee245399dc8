{"ast":null,"code":"import { connectToDatabase } from \"../../../lib/db\";\n\nasync function handler(req, res) {\n  if (req.method === \"POST\") {\n    const data = req.body;\n    const {\n      Type,\n      Category,\n      Title,\n      Description,\n      Question,\n      Date,\n      ReducedImg\n    } = data;\n\n    if (!Type || !Category || !Title || !Description || !Question || !Date || !ReducedImg) {\n      return res.status(400).json({\n        message: \"All fields are required\"\n      });\n    }\n\n    const client = await connectToDatabase();\n    const db = client.db();\n    const result = await db.collection(\"PostedItem\").insertOne({\n      Type: Type,\n      Category: Category,\n      Title: Title,\n      Description: Description,\n      Question: Question,\n      Date: Date,\n      ReducedImg: ReducedImg\n    });\n    res.status(201).json({\n      message: \"Item Posted!\"\n    });\n    client.close();\n  } else {\n    try {\n      const client = await connectToDatabase();\n      const db = client.db();\n      const data = await db.collection(\"PostedItem\").find({}).toArray();\n      res.status(200).json(data);\n      client.close();\n    } catch (error) {\n      console.error(\"Error:\", error);\n      res.status(500).json({\n        message: \"Internal Server Error\"\n      });\n    }\n  }\n}\n\nexport default handler;","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/pages/api/post/postitem.js"],"names":["connectToDatabase","handler","req","res","method","data","body","Type","Category","Title","Description","Question","Date","ReducedImg","status","json","message","client","db","result","collection","insertOne","close","find","toArray","error","console"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,iBAAlC;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/B,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB,UAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB;AAEA,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,QAAR;AAAkBC,MAAAA,KAAlB;AAAyBC,MAAAA,WAAzB;AAAsCC,MAAAA,QAAtC;AAAgDC,MAAAA,IAAhD;AAAsDC,MAAAA;AAAtD,QACJR,IADF;;AAGA,QACE,CAACE,IAAD,IACA,CAACC,QADD,IAEA,CAACC,KAFD,IAGA,CAACC,WAHD,IAIA,CAACC,QAJD,IAKA,CAACC,IALD,IAMA,CAACC,UAPH,EAQE;AACA,aAAOV,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB,CAAP;AACD;;AACD,UAAMC,MAAM,GAAG,MAAMjB,iBAAiB,EAAtC;AAEA,UAAMkB,EAAE,GAAGD,MAAM,CAACC,EAAP,EAAX;AAEA,UAAMC,MAAM,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,YAAd,EAA4BC,SAA5B,CAAsC;AACzDd,MAAAA,IAAI,EAAEA,IADmD;AAEzDC,MAAAA,QAAQ,EAAEA,QAF+C;AAGzDC,MAAAA,KAAK,EAAEA,KAHkD;AAIzDC,MAAAA,WAAW,EAAEA,WAJ4C;AAKzDC,MAAAA,QAAQ,EAAEA,QAL+C;AAMzDC,MAAAA,IAAI,EAAEA,IANmD;AAOzDC,MAAAA,UAAU,EAAEA;AAP6C,KAAtC,CAArB;AAUAV,IAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB;AACAC,IAAAA,MAAM,CAACK,KAAP;AACD,GAjCD,MAiCO;AACL,QAAI;AACF,YAAML,MAAM,GAAG,MAAMjB,iBAAiB,EAAtC;AACA,YAAMkB,EAAE,GAAGD,MAAM,CAACC,EAAP,EAAX;AAEA,YAAMb,IAAI,GAAG,MAAMa,EAAE,CAACE,UAAH,CAAc,YAAd,EAA4BG,IAA5B,CAAiC,EAAjC,EAAqCC,OAArC,EAAnB;AAEArB,MAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBV,IAArB;AACAY,MAAAA,MAAM,CAACK,KAAP;AACD,KARD,CAQE,OAAOG,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACAtB,MAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB;AACD;AACF;AACF;;AAED,eAAef,OAAf","sourcesContent":["import { connectToDatabase } from \"../../../lib/db\";\r\n\r\nasync function handler(req, res) {\r\n  if (req.method === \"POST\") {\r\n    const data = req.body;\r\n\r\n    const { Type, Category, Title, Description, Question, Date, ReducedImg } =\r\n      data;\r\n\r\n    if (\r\n      !Type ||\r\n      !Category ||\r\n      !Title ||\r\n      !Description ||\r\n      !Question ||\r\n      !Date ||\r\n      !ReducedImg\r\n    ) {\r\n      return res.status(400).json({ message: \"All fields are required\" });\r\n    }\r\n    const client = await connectToDatabase();\r\n\r\n    const db = client.db();\r\n\r\n    const result = await db.collection(\"PostedItem\").insertOne({\r\n      Type: Type,\r\n      Category: Category,\r\n      Title: Title,\r\n      Description: Description,\r\n      Question: Question,\r\n      Date: Date,\r\n      ReducedImg: ReducedImg,\r\n    });\r\n\r\n    res.status(201).json({ message: \"Item Posted!\" });\r\n    client.close();\r\n  } else {\r\n    try {\r\n      const client = await connectToDatabase();\r\n      const db = client.db();\r\n\r\n      const data = await db.collection(\"PostedItem\").find({}).toArray();\r\n\r\n      res.status(200).json(data);\r\n      client.close();\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      res.status(500).json({ message: \"Internal Server Error\" });\r\n    }\r\n  }\r\n}\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}