{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\FYP\\\\LostNestfyp\\\\lostnestprj\\\\components\\\\postcomp\\\\PostForm.js\";\nimport React from \"react\";\nimport classes from \"./PostForm.module.css\";\nimport Button from \"../UI/Button\";\nimport { useRef, useState } from \"react\";\nimport Loader from \"../UI/Loader\";\n\nasync function sendPostData(Type, Category, Title, Description, Question, Date) {\n  const response = await fetch(\"/api/post/postitem\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      Type,\n      Category,\n      Title,\n      Description,\n      Question,\n      Date\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Something went wrong!\");\n  }\n\n  return data;\n}\n\nfunction PostForm() {\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const typeInputRef = useRef();\n  const categoryInputRef = useRef();\n  const titleInputRef = useRef();\n  const descriptionInputRef = useRef();\n  const questionInputRef = useRef();\n  const dateInputRef = useRef();\n\n  const postSubmitHandler = async event => {\n    event.preventDefault();\n    setIsLoading(true);\n    const enteredType = typeInputRef.current.value;\n    const enteredCategory = categoryInputRef.current.value;\n    const enteredTitle = titleInputRef.current.value;\n    const enteredDescription = descriptionInputRef.current.value;\n    const enteredQuestion = questionInputRef.current.value;\n    const enteredDate = dateInputRef.current.value;\n    const humanReadableDate = new Date(enteredDate).toLocaleDateString(\"en-US\", {\n      day: \"numeric\",\n      month: \"long\",\n      year: \"numeric\"\n    });\n\n    try {\n      const result = await sendPostData(enteredType, enteredCategory, enteredTitle, enteredDescription, enteredQuestion, humanReadableDate);\n      console.log(result);\n      event.target.reset(); // This resets the form\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontSize: \"5rem\"\n      },\n      children: \"Post new Item as Lost or Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Please Provide genunine Informations only.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: postSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"item\",\n        className: classes.customselect,\n        ref: typeInputRef,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          selected: true,\n          children: \"Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Lost\",\n          children: \"Lost\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Found\",\n          children: \"Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"category\",\n        className: classes.customselect,\n        ref: categoryInputRef,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          selected: true,\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Wallet\",\n          children: \"Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Card\",\n          children: \"ID Card / Student Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Wallet\",\n          children: \"Smart Phone / Laptop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Found\",\n          children: \"Keys\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Others\",\n          children: \"Others\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          style: {\n            fontSize: \"2rem\",\n            fontWeight: \"bolder\"\n          },\n          children: \"Item Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Title\",\n          className: classes.customselect,\n          ref: titleInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          style: {\n            fontSize: \"2rem\",\n            fontWeight: \"bolder\"\n          },\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          name: \"description\",\n          placeholder: \"Description about item (like location etc...)\",\n          className: classes.customselect,\n          ref: descriptionInputRef,\n          rows: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"question\",\n          style: {\n            fontSize: \"2rem\",\n            fontWeight: \"bolder\"\n          },\n          children: \"Enter question based on an item.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"question\",\n          placeholder: \"Ex:- What is the color of the phone?\",\n          className: classes.customselect,\n          ref: questionInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          style: {\n            fontSize: \"2rem\",\n            fontWeight: \"bolder\"\n          },\n          children: \"Select a Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          id: \"date\",\n          className: classes.customselect,\n          ref: dateInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        content: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nexport default PostForm;","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/components/postcomp/PostForm.js"],"names":["React","classes","Button","useRef","useState","Loader","sendPostData","Type","Category","Title","Description","Question","Date","response","fetch","method","body","JSON","stringify","headers","data","json","ok","Error","message","PostForm","isLoading","setIsLoading","typeInputRef","categoryInputRef","titleInputRef","descriptionInputRef","questionInputRef","dateInputRef","postSubmitHandler","event","preventDefault","enteredType","current","value","enteredCategory","enteredTitle","enteredDescription","enteredQuestion","enteredDate","humanReadableDate","toLocaleDateString","day","month","year","result","console","log","target","reset","error","fontSize","form","customselect","display","flexDirection","fontWeight"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport classes from \"./PostForm.module.css\";\r\nimport Button from \"../UI/Button\";\r\nimport { useRef, useState } from \"react\";\r\nimport Loader from \"../UI/Loader\";\r\nasync function sendPostData(\r\n  Type,\r\n  Category,\r\n  Title,\r\n  Description,\r\n  Question,\r\n  Date\r\n) {\r\n  const response = await fetch(\"/api/post/postitem\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify({\r\n      Type,\r\n      Category,\r\n      Title,\r\n      Description,\r\n      Question,\r\n      Date,\r\n    }),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Something went wrong!\");\r\n  }\r\n\r\n  return data;\r\n}\r\nfunction PostForm() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const typeInputRef = useRef();\r\n  const categoryInputRef = useRef();\r\n  const titleInputRef = useRef();\r\n  const descriptionInputRef = useRef();\r\n  const questionInputRef = useRef();\r\n  const dateInputRef = useRef();\r\n\r\n  const postSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    const enteredType = typeInputRef.current.value;\r\n    const enteredCategory = categoryInputRef.current.value;\r\n    const enteredTitle = titleInputRef.current.value;\r\n    const enteredDescription = descriptionInputRef.current.value;\r\n    const enteredQuestion = questionInputRef.current.value;\r\n    const enteredDate = dateInputRef.current.value;\r\n\r\n    const humanReadableDate = new Date(enteredDate).toLocaleDateString(\r\n      \"en-US\",\r\n      {\r\n        day: \"numeric\",\r\n        month: \"long\",\r\n        year: \"numeric\",\r\n      }\r\n    );\r\n\r\n    try {\r\n      const result = await sendPostData(\r\n        enteredType,\r\n        enteredCategory,\r\n        enteredTitle,\r\n        enteredDescription,\r\n        enteredQuestion,\r\n        humanReadableDate\r\n      );\r\n\r\n      console.log(result);\r\n      event.target.reset(); // This resets the form\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 style={{ fontSize: \"5rem\" }}>Post new Item as Lost or Found</h1>\r\n      <h2>Please Provide genunine Informations only.</h2>\r\n      <form className={classes.form} onSubmit={postSubmitHandler}>\r\n        <select name=\"item\" className={classes.customselect} ref={typeInputRef}>\r\n          <option value=\"\" disabled selected>\r\n            Type\r\n          </option>\r\n          <option value=\"Lost\">Lost</option>\r\n          <option value=\"Found\">Found</option>\r\n        </select>\r\n        <select\r\n          name=\"category\"\r\n          className={classes.customselect}\r\n          ref={categoryInputRef}\r\n        >\r\n          <option value=\"\" disabled selected>\r\n            Category\r\n          </option>\r\n          <option value=\"Wallet\">Wallet</option>\r\n          <option value=\"Card\">ID Card / Student Card</option>\r\n          <option value=\"Wallet\">Smart Phone / Laptop</option>\r\n          <option value=\"Found\">Keys</option>\r\n          <option value=\"Others\">Others</option>\r\n        </select>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <label\r\n            htmlFor=\"name\"\r\n            style={{ fontSize: \"2rem\", fontWeight: \"bolder\" }}\r\n          >\r\n            Item Name\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Title\"\r\n            className={classes.customselect}\r\n            ref={titleInputRef}\r\n          ></input>\r\n        </div>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <label\r\n            htmlFor=\"description\"\r\n            style={{ fontSize: \"2rem\", fontWeight: \"bolder\" }}\r\n          >\r\n            Description\r\n          </label>\r\n          <textarea\r\n            type=\"text\"\r\n            name=\"description\"\r\n            placeholder=\"Description about item (like location etc...)\"\r\n            className={classes.customselect}\r\n            ref={descriptionInputRef}\r\n            rows=\"5\"\r\n          ></textarea>\r\n        </div>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <label\r\n            htmlFor=\"question\"\r\n            style={{ fontSize: \"2rem\", fontWeight: \"bolder\" }}\r\n          >\r\n            Enter question based on an item.\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"question\"\r\n            placeholder=\"Ex:- What is the color of the phone?\"\r\n            className={classes.customselect}\r\n            ref={questionInputRef}\r\n          ></input>\r\n        </div>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <label\r\n            htmlFor=\"date\"\r\n            style={{ fontSize: \"2rem\", fontWeight: \"bolder\" }}\r\n          >\r\n            Select a Date:\r\n          </label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"date\"\r\n            id=\"date\"\r\n            className={classes.customselect}\r\n            ref={dateInputRef}\r\n          ></input>\r\n        </div>\r\n\r\n        {/* <input\r\n          type=\"file\"\r\n          id=\"image\"\r\n          name=\"image\"\r\n          accept=\"image/*\"\r\n          className={classes.customselect}\r\n        /> */}\r\n        <Button content=\"Post\"></Button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PostForm;\r\n"]},"metadata":{},"sourceType":"module"}