{"ast":null,"code":"import { connectToDatabase } from \"../../lib/db\";\nexport async function getAllPosts() {\n  const client = await connectToDatabase();\n  const db = client.db();\n  const data = await db.collection(\"PostedItem\").find({}).toArray();\n  return data;\n}\nexport async function getPostsById(id) {\n  const allPosts = await getAllPosts();\n  return allPosts.find(event => event.id === id);\n} // export async function getFeaturedEvents() {\n//   const allEvents = await getAllEvents();\n//   return allEvents.filter((event) => event.isFeatured);\n// }\n// export async function getFilteredEvents(dateFilter) {\n//   const { year, month } = dateFilter;\n//   const allEvents = await getAllEvents();\n//   let filteredEvents = allEvents.filter((event) => {\n//     const eventDate = new Date(event.date);\n//     return (\n//       eventDate.getFullYear() === year && eventDate.getMonth() === month - 1\n//     );\n//   });\n//   return filteredEvents;\n// }","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/components/helpers/api-util.js"],"names":["connectToDatabase","getAllPosts","client","db","data","collection","find","toArray","getPostsById","id","allPosts","event"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,cAAlC;AAEA,OAAO,eAAeC,WAAf,GAA6B;AAClC,QAAMC,MAAM,GAAG,MAAMF,iBAAiB,EAAtC;AACA,QAAMG,EAAE,GAAGD,MAAM,CAACC,EAAP,EAAX;AAEA,QAAMC,IAAI,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,YAAd,EAA4BC,IAA5B,CAAiC,EAAjC,EAAqCC,OAArC,EAAnB;AAEA,SAAOH,IAAP;AACD;AAED,OAAO,eAAeI,YAAf,CAA4BC,EAA5B,EAAgC;AACrC,QAAMC,QAAQ,GAAG,MAAMT,WAAW,EAAlC;AACA,SAAOS,QAAQ,CAACJ,IAAT,CAAeK,KAAD,IAAWA,KAAK,CAACF,EAAN,KAAaA,EAAtC,CAAP;AACD,C,CAED;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["import { connectToDatabase } from \"../../lib/db\";\n\nexport async function getAllPosts() {\n  const client = await connectToDatabase();\n  const db = client.db();\n\n  const data = await db.collection(\"PostedItem\").find({}).toArray();\n\n  return data;\n}\n\nexport async function getPostsById(id) {\n  const allPosts = await getAllPosts();\n  return allPosts.find((event) => event.id === id);\n}\n\n// export async function getFeaturedEvents() {\n//   const allEvents = await getAllEvents();\n//   return allEvents.filter((event) => event.isFeatured);\n// }\n\n// export async function getFilteredEvents(dateFilter) {\n//   const { year, month } = dateFilter;\n\n//   const allEvents = await getAllEvents();\n\n//   let filteredEvents = allEvents.filter((event) => {\n//     const eventDate = new Date(event.date);\n//     return (\n//       eventDate.getFullYear() === year && eventDate.getMonth() === month - 1\n//     );\n//   });\n\n//   return filteredEvents;\n// }\n"]},"metadata":{},"sourceType":"module"}