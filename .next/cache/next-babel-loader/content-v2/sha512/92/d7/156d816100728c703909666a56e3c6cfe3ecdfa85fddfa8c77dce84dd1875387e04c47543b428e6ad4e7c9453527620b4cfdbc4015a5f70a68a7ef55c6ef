{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport classes from \"./specificid.module.css\";\nimport Loading from \"../../components/UI/Loading\";\nimport EventSummary from \"../../components/feed/FeedDetails/event-summary\";\nimport EventLogistics from \"../../components/feed/FeedDetails/event-logistics\";\nimport EventContent from \"../../components/feed/FeedDetails/event-content\";\nimport { useState, useEffect } from \"react\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport { getAllPosts } from \"../../lib/db\";\n\nfunction specificid(props) {\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var extractedObject = props.extractedObject;\n\n  if (!extractedObject) {\n    return /*#__PURE__*/_jsx(Loading, {}); // Render loading spinner if no data is available\n  } // console.log(extractedObject);\n\n\n  useEffect(function () {\n    setIsLoading(true);\n    setTimeout(function () {\n      setIsLoading(false);\n    }, 2000); // Simulate a loading time of 5 seconds\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsx(Loading, {});\n  }\n\n  var event = extractedObject;\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: event.Title\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: event.Description\n      })]\n    }), /*#__PURE__*/_jsx(EventSummary, {\n      Title: event.Title\n    }), /*#__PURE__*/_jsx(EventLogistics, {\n      Date: event.Date,\n      ReducedImg: event.ReducedImg,\n      Title: event.Title,\n      Type: event.Type,\n      Category: event.Category\n    }), /*#__PURE__*/_jsx(EventContent, {\n      children: /*#__PURE__*/_jsx(\"p\", {\n        children: event.Description\n      })\n    })]\n  });\n}\n\nexport var __N_SSP = true;\nexport default specificid;","map":null,"metadata":{},"sourceType":"module"}