{"ast":null,"code":"import { connectToDatabase } from \"../../../lib/db\";\nimport multer from \"multer\";\nconst upload = multer({\n  dest: \"./uploads/\"\n}); // Set the destination folder for uploaded files\n\nasync function handler(req, res) {\n  if (req.method !== \"POST\") {\n    return;\n  }\n\n  upload.single(\"Image\")(req, res, async function (err) {\n    if (err instanceof multer.MulterError) {\n      return res.status(500).json({\n        message: err.message\n      });\n    } else if (err) {\n      return res.status(500).json({\n        message: err.message\n      });\n    }\n\n    const data = req.body;\n    const {\n      Type,\n      Category,\n      Title,\n      Description,\n      Question,\n      Date\n    } = data;\n\n    if (!Type || !Category || !Title || !Description || !Question || !Date) {\n      return res.status(400).json({\n        message: \"All fields are required\"\n      });\n    }\n\n    const client = await connectToDatabase();\n    const db = client.db();\n    const result = await db.collection(\"PostedItem\").insertOne({\n      Type: Type,\n      Category: Category,\n      Title: Title,\n      Description: Description,\n      Question: Question,\n      Date: Date,\n      Image: req.file ? req.file.filename : null\n    });\n    res.status(201).json({\n      message: \"Item Posted!\"\n    });\n    client.close();\n  });\n}\n\nexport default handler;","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/pages/api/post/postitem.js"],"names":["connectToDatabase","multer","upload","dest","handler","req","res","method","single","err","MulterError","status","json","message","data","body","Type","Category","Title","Description","Question","Date","client","db","result","collection","insertOne","Image","file","filename","close"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,iBAAlC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,MAAMC,MAAM,GAAGD,MAAM,CAAC;AAAEE,EAAAA,IAAI,EAAE;AAAR,CAAD,CAArB,C,CAA+C;;AAE/C,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/B,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB;AACD;;AAEDL,EAAAA,MAAM,CAACM,MAAP,CAAc,OAAd,EAAuBH,GAAvB,EAA4BC,GAA5B,EAAiC,gBAAgBG,GAAhB,EAAqB;AACpD,QAAIA,GAAG,YAAYR,MAAM,CAACS,WAA1B,EAAuC;AACrC,aAAOJ,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAEJ,GAAG,CAACI;AAAf,OAArB,CAAP;AACD,KAFD,MAEO,IAAIJ,GAAJ,EAAS;AACd,aAAOH,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAEJ,GAAG,CAACI;AAAf,OAArB,CAAP;AACD;;AAED,UAAMC,IAAI,GAAGT,GAAG,CAACU,IAAjB;AAEA,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,QAAR;AAAkBC,MAAAA,KAAlB;AAAyBC,MAAAA,WAAzB;AAAsCC,MAAAA,QAAtC;AAAgDC,MAAAA;AAAhD,QAAyDP,IAA/D;;AAEA,QAAI,CAACE,IAAD,IAAS,CAACC,QAAV,IAAsB,CAACC,KAAvB,IAAgC,CAACC,WAAjC,IAAgD,CAACC,QAAjD,IAA6D,CAACC,IAAlE,EAAwE;AACtE,aAAOf,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB,CAAP;AACD;;AACD,UAAMS,MAAM,GAAG,MAAMtB,iBAAiB,EAAtC;AAEA,UAAMuB,EAAE,GAAGD,MAAM,CAACC,EAAP,EAAX;AAEA,UAAMC,MAAM,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,YAAd,EAA4BC,SAA5B,CAAsC;AACzDV,MAAAA,IAAI,EAAEA,IADmD;AAEzDC,MAAAA,QAAQ,EAAEA,QAF+C;AAGzDC,MAAAA,KAAK,EAAEA,KAHkD;AAIzDC,MAAAA,WAAW,EAAEA,WAJ4C;AAKzDC,MAAAA,QAAQ,EAAEA,QAL+C;AAMzDC,MAAAA,IAAI,EAAEA,IANmD;AAOzDM,MAAAA,KAAK,EAAEtB,GAAG,CAACuB,IAAJ,GAAWvB,GAAG,CAACuB,IAAJ,CAASC,QAApB,GAA+B;AAPmB,KAAtC,CAArB;AAUAvB,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB;AACAS,IAAAA,MAAM,CAACQ,KAAP;AACD,GA9BD;AA+BD;;AAED,eAAe1B,OAAf","sourcesContent":["import { connectToDatabase } from \"../../../lib/db\";\r\nimport multer from \"multer\";\r\nconst upload = multer({ dest: \"./uploads/\" }); // Set the destination folder for uploaded files\r\n\r\nasync function handler(req, res) {\r\n  if (req.method !== \"POST\") {\r\n    return;\r\n  }\r\n\r\n  upload.single(\"Image\")(req, res, async function (err) {\r\n    if (err instanceof multer.MulterError) {\r\n      return res.status(500).json({ message: err.message });\r\n    } else if (err) {\r\n      return res.status(500).json({ message: err.message });\r\n    }\r\n\r\n    const data = req.body;\r\n\r\n    const { Type, Category, Title, Description, Question, Date } = data;\r\n\r\n    if (!Type || !Category || !Title || !Description || !Question || !Date) {\r\n      return res.status(400).json({ message: \"All fields are required\" });\r\n    }\r\n    const client = await connectToDatabase();\r\n\r\n    const db = client.db();\r\n\r\n    const result = await db.collection(\"PostedItem\").insertOne({\r\n      Type: Type,\r\n      Category: Category,\r\n      Title: Title,\r\n      Description: Description,\r\n      Question: Question,\r\n      Date: Date,\r\n      Image: req.file ? req.file.filename : null,\r\n    });\r\n\r\n    res.status(201).json({ message: \"Item Posted!\" });\r\n    client.close();\r\n  });\r\n}\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}