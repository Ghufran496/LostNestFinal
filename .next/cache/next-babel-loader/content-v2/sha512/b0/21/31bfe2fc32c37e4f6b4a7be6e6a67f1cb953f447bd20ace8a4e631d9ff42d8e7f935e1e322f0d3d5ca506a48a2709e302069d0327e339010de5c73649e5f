{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"G:\\\\FYP\\\\LostNestfyp\\\\lostnestprj\\\\pages\\\\mylistings\\\\[specificid].js\",\n    _s = $RefreshSig$();\n\n// import React from \"react\";\n// import classes from \"./specificid.module.css\";\n// import Loading from \"../../components/UI/Loading\";\n// import EventSummary from \"../../components/feed/FeedDetails/event-summary\";\n// import EventLogistics from \"../../components/feed/FeedDetails/event-logistics\";\n// import EventContent from \"../../components/feed/FeedDetails/event-content\";\n// import { useState, useEffect } from \"react\";\n// import { Fragment } from \"react\";\n// import Head from \"next/head\";\n// const { ObjectId } = require(\"mongodb\");\n// import { getAllPosts } from \"../../lib/db\";\n// import { connectToDatabase } from \"../../lib/db\";\n// function specificid(props) {\n//   const [isLoading, setIsLoading] = useState(false);\n//   const { extractedObject } = props;\n//   if (!extractedObject) {\n//     return <Loading />; // Render loading spinner if no data is available\n//   }\n//   // console.log(extractedObject);\n//   useEffect(() => {\n//     setIsLoading(true);\n//     setTimeout(() => {\n//       setIsLoading(false);\n//     }, 2000); // Simulate a loading time of 5 seconds\n//   }, []);\n//   if (isLoading) {\n//     return <Loading />;\n//   }\n//   const event = extractedObject;\n//   return (\n//     <Fragment>\n//       <Head>\n//         <title>{event.Title}</title>\n//         <meta name=\"description\" content={event.Description} />\n//       </Head>\n//       <EventSummary Title={event.Title} />\n//       <EventLogistics\n//         Date={event.Date}\n//         ReducedImg={event.ReducedImg}\n//         Title={event.Title}\n//         Type={event.Type}\n//         Category={event.Category}\n//       />\n//       <EventContent>\n//         <p>{event.Description}</p>\n//       </EventContent>\n//     </Fragment>\n//   );\n// }\n// export async function getServerSideProps(context) {\n//   const postId = context.params.specificid;\n//   const objectId = new ObjectId(postId); // Convert postId to ObjectId\n//   const client = await connectToDatabase();\n//   const db = client.db();\n//   const data = await db.collection(\"PostedItem\").find({}).toArray();\n//   const extractedObject = data.find((item) => item._id.equals(objectId));\n//   console.log(extractedObject);\n//   return {\n//     props: {\n//       extractedObject: JSON.parse(JSON.stringify(extractedObject)),\n//     },\n//   };\n// }\n// export default specificid;\n// import React from \"react\";\n// function specificid() {\n//   return <div>i am specifspecifjkicid</div>;\n// }\n// export default specificid;\nimport React from \"react\";\nimport classes from \"./specificid.module.css\";\nimport Loading from \"../../components/UI/Loading\";\nimport EventSummary from \"../../components/feed/FeedDetails/event-summary\";\nimport EventLogistics from \"../../components/feed/FeedDetails/event-logistics\";\nimport EventContent from \"../../components/feed/FeedDetails/event-content\";\nimport { useState, useEffect } from \"react\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\"; //const { ObjectId } = require(\"mongodb\");\n//import { getAllPosts } from \"../../lib/db\";\n//import { connectToDatabase } from \"../../lib/db\";\n\nfunction specificid(props) {\n  _s();\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var extractedObject = props.extractedObject;\n\n  if (!extractedObject) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 12\n    }, this); // Render loading spinner if no data is available\n  } // console.log(extractedObject);\n\n\n  useEffect(function () {\n    setIsLoading(true);\n    setTimeout(function () {\n      setIsLoading(false);\n    }, 2000); // Simulate a loading time of 5 seconds\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 12\n    }, this);\n  }\n\n  var event = extractedObject;\n  return /*#__PURE__*/_jsxDEV(Fragment, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n\n_s(specificid, \"DlrQjwOD5XS1kcZJvMHoaf7KaZ8=\");\n\nexport var __N_SSP = true;\nexport default specificid;","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/pages/mylistings/[specificid].js"],"names":["React","classes","Loading","EventSummary","EventLogistics","EventContent","useState","useEffect","Fragment","Head","specificid","props","isLoading","setIsLoading","extractedObject","setTimeout","event"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,YAAP,MAAyB,iDAAzB;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,OAAOC,YAAP,MAAyB,iDAAzB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;AACA;AACA;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAAA,kBACSL,QAAQ,CAAC,KAAD,CADjB;AAAA,MAClBM,SADkB;AAAA,MACPC,YADO;;AAAA,MAGjBC,eAHiB,GAGGH,KAHH,CAGjBG,eAHiB;;AAKzB,MAAI,CAACA,eAAL,EAAsB;AACpB,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP,CADoB,CACA;AACrB,GAPwB,CAQzB;;;AACAP,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,UAAU,CAAC,YAAM;AACfF,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAFS,EAEP,IAFO,CAAV,CAFc,CAIJ;AACX,GALQ,EAKN,EALM,CAAT;;AAOA,MAAID,SAAJ,EAAe;AACb,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,MAAMI,KAAK,GAAGF,eAAd;AAEA,sBACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA1CQJ,U;;;AA4DT,eAAeA,UAAf","sourcesContent":["// import React from \"react\";\r\n// import classes from \"./specificid.module.css\";\r\n// import Loading from \"../../components/UI/Loading\";\r\n// import EventSummary from \"../../components/feed/FeedDetails/event-summary\";\r\n// import EventLogistics from \"../../components/feed/FeedDetails/event-logistics\";\r\n// import EventContent from \"../../components/feed/FeedDetails/event-content\";\r\n// import { useState, useEffect } from \"react\";\r\n// import { Fragment } from \"react\";\r\n// import Head from \"next/head\";\r\n// const { ObjectId } = require(\"mongodb\");\r\n// import { getAllPosts } from \"../../lib/db\";\r\n// import { connectToDatabase } from \"../../lib/db\";\r\n\r\n// function specificid(props) {\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n\r\n//   const { extractedObject } = props;\r\n\r\n//   if (!extractedObject) {\r\n//     return <Loading />; // Render loading spinner if no data is available\r\n//   }\r\n//   // console.log(extractedObject);\r\n//   useEffect(() => {\r\n//     setIsLoading(true);\r\n//     setTimeout(() => {\r\n//       setIsLoading(false);\r\n//     }, 2000); // Simulate a loading time of 5 seconds\r\n//   }, []);\r\n\r\n//   if (isLoading) {\r\n//     return <Loading />;\r\n//   }\r\n//   const event = extractedObject;\r\n\r\n//   return (\r\n//     <Fragment>\r\n//       <Head>\r\n//         <title>{event.Title}</title>\r\n//         <meta name=\"description\" content={event.Description} />\r\n//       </Head>\r\n//       <EventSummary Title={event.Title} />\r\n\r\n//       <EventLogistics\r\n//         Date={event.Date}\r\n//         ReducedImg={event.ReducedImg}\r\n//         Title={event.Title}\r\n//         Type={event.Type}\r\n//         Category={event.Category}\r\n//       />\r\n\r\n//       <EventContent>\r\n//         <p>{event.Description}</p>\r\n//       </EventContent>\r\n//     </Fragment>\r\n//   );\r\n// }\r\n\r\n// export async function getServerSideProps(context) {\r\n//   const postId = context.params.specificid;\r\n//   const objectId = new ObjectId(postId); // Convert postId to ObjectId\r\n//   const client = await connectToDatabase();\r\n//   const db = client.db();\r\n\r\n//   const data = await db.collection(\"PostedItem\").find({}).toArray();\r\n\r\n//   const extractedObject = data.find((item) => item._id.equals(objectId));\r\n//   console.log(extractedObject);\r\n\r\n//   return {\r\n//     props: {\r\n//       extractedObject: JSON.parse(JSON.stringify(extractedObject)),\r\n//     },\r\n//   };\r\n// }\r\n\r\n// export default specificid;\r\n\r\n// import React from \"react\";\r\n\r\n// function specificid() {\r\n//   return <div>i am specifspecifjkicid</div>;\r\n// }\r\n\r\n// export default specificid;\r\n\r\nimport React from \"react\";\r\nimport classes from \"./specificid.module.css\";\r\nimport Loading from \"../../components/UI/Loading\";\r\nimport EventSummary from \"../../components/feed/FeedDetails/event-summary\";\r\nimport EventLogistics from \"../../components/feed/FeedDetails/event-logistics\";\r\nimport EventContent from \"../../components/feed/FeedDetails/event-content\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport Head from \"next/head\";\r\n//const { ObjectId } = require(\"mongodb\");\r\n//import { getAllPosts } from \"../../lib/db\";\r\n//import { connectToDatabase } from \"../../lib/db\";\r\nimport { getPostDataById } from \"../../lib/db\";\r\n\r\nfunction specificid(props) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { extractedObject } = props;\r\n\r\n  if (!extractedObject) {\r\n    return <Loading />; // Render loading spinner if no data is available\r\n  }\r\n  // console.log(extractedObject);\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    setTimeout(() => {\r\n      setIsLoading(false);\r\n    }, 2000); // Simulate a loading time of 5 seconds\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  }\r\n  const event = extractedObject;\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* <Head>\r\n        <title>{event.Title}</title>\r\n        <meta name=\"description\" content={event.Description} />\r\n      </Head> */}\r\n      {/* <EventSummary Title={event.Title} /> */}\r\n\r\n      {/* <EventLogistics\r\n        Date={event.Date}\r\n        ReducedImg={event.ReducedImg}\r\n        Title={event.Title}\r\n        Type={event.Type}\r\n        Category={event.Category}\r\n      />\r\n\r\n      <EventContent>\r\n        <p>{event.Description}</p>\r\n      </EventContent> */}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport async function getServerSideProps(context) {\r\n  const { params } = context;\r\n  const { specificid } = params;\r\n  console.log(specificid.toString());\r\n\r\n  const postData = await getPostDataById(specificid);\r\n  //console.log(postData);\r\n\r\n  return {\r\n    props: {\r\n      extractedObject: postData,\r\n      // other props if any\r\n    },\r\n  };\r\n}\r\n\r\nexport default specificid;\r\n"]},"metadata":{},"sourceType":"module"}