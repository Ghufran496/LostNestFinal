{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\FYP\\\\LostNestfyp\\\\lostnestprj\\\\components\\\\overlayForm\\\\Form.js\";\nimport React from \"react\";\nimport classes from \"./Form.module.css\";\nimport { useRef, useState } from \"react\";\nimport Loading from \"../UI/Loading\";\n\nasync function sendQuestionData(enteredAnswer, postID) {\n  const response = await fetch(\"/api/qresponse/QuestionResponse\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      Type\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    setIsLoading(false);\n  }\n\n  return data;\n}\n\nfunction Form(props) {\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const answerInputRef = useRef();\n\n  const answerSubmitHandler = async event => {\n    event.preventDefault();\n    setIsLoading(true);\n    const enteredAnswer = answerInputRef.current.value;\n    const postID = props._id;\n    console.log(postID);\n    const result = await sendQuestionData(enteredAnswer, postID); // console.log(result);\n\n    event.target.reset(); // This resets the form\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.main,\n    onSubmit: answerSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"question\",\n      className: classes.labels,\n      children: \"Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"questionContent\",\n      className: classes.span1,\n      children: props.data2.Question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"answer\",\n      className: classes.labels,\n      children: \"Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"answer\",\n      className: classes.inputfield,\n      ref: answerInputRef,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.btndiv,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button89,\n        type: \"button\",\n        role: \"button\",\n        onClick: props.oncancle,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button89,\n        type: \"submit\",\n        role: \"button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\nexport default Form;","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/components/overlayForm/Form.js"],"names":["React","classes","useRef","useState","Loading","sendQuestionData","enteredAnswer","postID","response","fetch","method","body","JSON","stringify","Type","headers","data","json","ok","setIsLoading","Form","props","isLoading","answerInputRef","answerSubmitHandler","event","preventDefault","current","value","_id","console","log","result","target","reset","main","labels","span1","data2","Question","inputfield","btndiv","button89","oncancle"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport classes from \"./Form.module.css\";\r\nimport { useRef, useState } from \"react\";\r\nimport Loading from \"../UI/Loading\";\r\n\r\nasync function sendQuestionData(enteredAnswer, postID) {\r\n  const response = await fetch(\"/api/qresponse/QuestionResponse\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify({\r\n      Type,\r\n    }),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    setIsLoading(false);\r\n  }\r\n\r\n  return data;\r\n}\r\nfunction Form(props) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const answerInputRef = useRef();\r\n\r\n  const answerSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    const enteredAnswer = answerInputRef.current.value;\r\n    const postID = props._id;\r\n    console.log(postID);\r\n\r\n    const result = await sendQuestionData(enteredAnswer, postID);\r\n\r\n    // console.log(result);\r\n    event.target.reset(); // This resets the form\r\n  };\r\n\r\n  return (\r\n    <form className={classes.main} onSubmit={answerSubmitHandler}>\r\n      <label htmlFor=\"question\" className={classes.labels}>\r\n        Question\r\n      </label>\r\n      <br />\r\n      <span id=\"questionContent\" className={classes.span1}>\r\n        {props.data2.Question}\r\n      </span>\r\n      <br />\r\n      <label htmlFor=\"answer\" className={classes.labels}>\r\n        Answer\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"answer\"\r\n        className={classes.inputfield}\r\n        ref={answerInputRef}\r\n        required\r\n      />\r\n      <br />\r\n      <div className={classes.btndiv}>\r\n        <button\r\n          className={classes.button89}\r\n          type=\"button\"\r\n          role=\"button\"\r\n          onClick={props.oncancle}\r\n        >\r\n          Close\r\n        </button>\r\n        <button className={classes.button89} type=\"submit\" role=\"button\">\r\n          Submit\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}