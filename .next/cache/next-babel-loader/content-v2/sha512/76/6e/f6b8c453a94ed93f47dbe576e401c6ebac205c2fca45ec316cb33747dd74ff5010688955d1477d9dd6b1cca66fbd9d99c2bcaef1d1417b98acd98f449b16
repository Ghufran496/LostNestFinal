{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\FYP\\\\LostNestfyp\\\\lostnestprj\\\\pages\\\\dashboard\\\\[itemid].js\";\nimport React, { useEffect } from \"react\";\n\nfunction ItemDetailPage() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"I am details page\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n}\n\n_c = ItemDetailPage;\nexport var __N_SSG = true;\nexport default ItemDetailPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemDetailPage\");","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/pages/dashboard/[itemid].js"],"names":["React","useEffect","ItemDetailPage"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,SAASC,cAAT,GAA0B;AACxB,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KAFQA,c;;AAkDT,eAAeA,cAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nfunction ItemDetailPage() {\r\n  return <div>I am details page</div>;\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const ItemId = context.params.itemid;\r\n  async function fetchData() {\r\n    try {\r\n      const response = await fetch(\"/api/post/postitem\");\r\n      const data = await response.json();\r\n\r\n      // Now you can use the 'data' variable to work with the response data\r\n      // For example, you can store it in another variable:\r\n      const processedData = data;\r\n\r\n      // You can also perform other operations with the data here.\r\n\r\n      // If you want to return the data or do something with it, you can do so here.\r\n      return processedData;\r\n    } catch (error) {\r\n      // Handle errors here\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }\r\n\r\n  // To use the function, you can call it like this:\r\n  const result = await fetchData();\r\n  fetch(\"/api/post/postitem\")\r\n    .then((response) => response.json())\r\n    .then((data) => {});\r\n  const event = await getEventById(ItemId);\r\n\r\n  return {\r\n    props: {\r\n      selectedEvent: event,\r\n    },\r\n    revalidate: 30,\r\n  };\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const events = await getFeaturedEvents();\r\n\r\n  const paths = events.map((event) => ({ params: { eventId: event.id } }));\r\n\r\n  return {\r\n    paths: paths,\r\n    fallback: \"blocking\",\r\n  };\r\n}\r\nexport default ItemDetailPage;\r\n"]},"metadata":{},"sourceType":"module"}