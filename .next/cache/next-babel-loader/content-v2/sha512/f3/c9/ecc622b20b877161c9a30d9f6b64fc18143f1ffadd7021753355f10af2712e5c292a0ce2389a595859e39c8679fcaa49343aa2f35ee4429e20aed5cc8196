{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport classes from \"./ChartComp.module.css\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport Noti from \"../notificationOverlay/noti\";\nimport Example from \"../../components/stats/chart\";\n\nvar ChartComp = function ChartComp() {\n  var _useState = useState({}),\n      count = _useState[0],\n      setCount = _useState[1];\n\n  useEffect(function () {\n    fetch(\"/api/stats/getposts\").then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      setCount(data);\n    })[\"catch\"](function (error) {\n      console.error(\"Fetch error:\", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: classes.main,\n      children: [/*#__PURE__*/_jsx(Example, {\n        postscount: count\n      }), /*#__PURE__*/_jsxs(\"ul\", {\n        className: classes.ulist,\n        children: [/*#__PURE__*/_jsxs(\"li\", {\n          className: classes.listitem,\n          children: [/*#__PURE__*/_jsx(\"b\", {\n            children: \"Total Posted Items: \"\n          }), count.totalPosts ? count.totalPosts : 10]\n        }), /*#__PURE__*/_jsxs(\"li\", {\n          className: classes.listitem,\n          children: [/*#__PURE__*/_jsx(\"b\", {\n            children: \"Lost Posted Items:\"\n          }), \" \", count.totalPosts ? count.lostPosts : 7]\n        }), /*#__PURE__*/_jsxs(\"li\", {\n          children: [/*#__PURE__*/_jsx(\"b\", {\n            children: \"Found Posted Items:\"\n          }), \" \", count.totalPosts ? count.foundPosts : 3]\n        })]\n      })]\n    }), !count.totalPosts && /*#__PURE__*/_jsx(Noti, {\n      data: \"Updating Stats...\"\n    })]\n  });\n};\n\nexport default ChartComp; // import React, { useEffect, useState, Fragment } from \"react\";\n// import Noti from \"../notificationOverlay/noti\";\n// import Example from \"../../components/stats/chart\";\n// import classes from \"./ChartComp.module.css\";\n// const ChartComp = () => {\n//   const [count, setCount] = useState({});\n//   useEffect(() => {\n//     // Use an IIFE to fetch data on the client side\n//     (async () => {\n//       try {\n//         const response = await fetch(\"/api/stats/getposts\");\n//         const data = await response.json();\n//         setCount(data);\n//       } catch (error) {\n//         console.error(\"Fetch error:\", error);\n//       }\n//     })();\n//   }, []);\n//   return (\n//     <Fragment>\n//       <div className={classes.main}>\n//         {/* Render the chart only when count has data */}\n//         {count.totalPosts && <Example postscount={count} />}\n//         <ul className={classes.ulist}>\n//           <li className={classes.listitem}>\n//             <b>Total Posted Items: </b>\n//             {count.totalPosts ? count.totalPosts : 10}\n//           </li>\n//           <li className={classes.listitem}>\n//             <b>Lost Posted Items:</b> {count.totalPosts ? count.lostPosts : 7}\n//           </li>\n//           <li>\n//             <b>Found Posted Items:</b> {count.totalPosts ? count.foundPosts : 3}\n//           </li>\n//         </ul>\n//       </div>\n//       {!count.totalPosts && <Noti data=\"Updating Stats...\" />}\n//     </Fragment>\n//   );\n// };\n// export default ChartComp;","map":null,"metadata":{},"sourceType":"module"}