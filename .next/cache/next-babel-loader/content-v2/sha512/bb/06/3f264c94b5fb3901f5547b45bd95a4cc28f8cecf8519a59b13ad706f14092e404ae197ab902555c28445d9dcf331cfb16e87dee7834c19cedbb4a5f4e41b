{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\FYP\\\\LostNestfyp\\\\lostnestprj\\\\pages\\\\mylistings\\\\[specificid].js\";\n// import React from \"react\";\n// import classes from \"./specificid.module.css\";\n// import Loading from \"../../components/UI/Loading\";\n// import EventSummary from \"../../components/feed/FeedDetails/event-summary\";\n// import EventLogistics from \"../../components/feed/FeedDetails/event-logistics\";\n// import EventContent from \"../../components/feed/FeedDetails/event-content\";\n// import { useState, useEffect } from \"react\";\n// import { Fragment } from \"react\";\n// import Head from \"next/head\";\n// const { ObjectId } = require(\"mongodb\");\n// import { getAllPosts } from \"../../lib/db\";\n// import { connectToDatabase } from \"../../lib/db\";\n// function specificid(props) {\n//   const [isLoading, setIsLoading] = useState(false);\n//   const { extractedObject } = props;\n//   if (!extractedObject) {\n//     return <Loading />; // Render loading spinner if no data is available\n//   }\n//   // console.log(extractedObject);\n//   useEffect(() => {\n//     setIsLoading(true);\n//     setTimeout(() => {\n//       setIsLoading(false);\n//     }, 2000); // Simulate a loading time of 5 seconds\n//   }, []);\n//   if (isLoading) {\n//     return <Loading />;\n//   }\n//   const event = extractedObject;\n//   return (\n//     <Fragment>\n//       <Head>\n//         <title>{event.Title}</title>\n//         <meta name=\"description\" content={event.Description} />\n//       </Head>\n//       <EventSummary Title={event.Title} />\n//       <EventLogistics\n//         Date={event.Date}\n//         ReducedImg={event.ReducedImg}\n//         Title={event.Title}\n//         Type={event.Type}\n//         Category={event.Category}\n//       />\n//       <EventContent>\n//         <p>{event.Description}</p>\n//       </EventContent>\n//     </Fragment>\n//   );\n// }\n// export async function getServerSideProps(context) {\n//   const postId = context.params.specificid;\n//   const objectId = new ObjectId(postId); // Convert postId to ObjectId\n//   const client = await connectToDatabase();\n//   const db = client.db();\n//   const data = await db.collection(\"PostedItem\").find({}).toArray();\n//   const extractedObject = data.find((item) => item._id.equals(objectId));\n//   console.log(extractedObject);\n//   return {\n//     props: {\n//       extractedObject: JSON.parse(JSON.stringify(extractedObject)),\n//     },\n//   };\n// }\n// export default specificid;\n// import React from \"react\";\n// function specificid() {\n//   return <div>i am specifspecifjkicid</div>;\n// }\n// export default specificid;\nimport React from \"react\";\nimport classes from \"./specificid.module.css\";\nimport Loading from \"../../components/UI/Loading\";\nimport EventSummary from \"../../components/feed/FeedDetails/event-summary\";\nimport EventLogistics from \"../../components/feed/FeedDetails/event-logistics\";\nimport EventContent from \"../../components/feed/FeedDetails/event-content\";\nimport { useState, useEffect } from \"react\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\"; //const { ObjectId } = require(\"mongodb\");\n//import { getAllPosts } from \"../../lib/db\";\n//import { connectToDatabase } from \"../../lib/db\";\n\nimport { getPostDataById } from \"../../lib/db\";\n\nfunction specificid(props) {\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    extractedObject\n  } = props;\n\n  if (!extractedObject) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 12\n    }, this); // Render loading spinner if no data is available\n  } // console.log(extractedObject);\n\n\n  useEffect(() => {\n    setIsLoading(true);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 2000); // Simulate a loading time of 5 seconds\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 12\n    }, this);\n  }\n\n  const event = extractedObject;\n  return /*#__PURE__*/_jsxDEV(Fragment, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getServerSideProps(context) {\n  const {\n    params\n  } = context;\n  const {\n    specificid\n  } = params;\n  console.log(specificid);\n  const postData = getPostDataById(specificid);\n  console.log(postData);\n  return {\n    props: {\n      extractedObject: postData\n    },\n    revalidate: 600\n  };\n}\nexport default specificid;","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/pages/mylistings/[specificid].js"],"names":["React","classes","Loading","EventSummary","EventLogistics","EventContent","useState","useEffect","Fragment","Head","getPostDataById","specificid","props","isLoading","setIsLoading","extractedObject","setTimeout","event","getServerSideProps","context","params","console","log","postData","revalidate"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,YAAP,MAAyB,iDAAzB;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,OAAOC,YAAP,MAAyB,iDAAzB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;AACA;AACA;;AACA,SAASC,eAAT,QAAgC,cAAhC;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BR,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAM;AAAES,IAAAA;AAAF,MAAsBH,KAA5B;;AAEA,MAAI,CAACG,eAAL,EAAsB;AACpB,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP,CADoB,CACA;AACrB,GAPwB,CAQzB;;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,UAAU,CAAC,MAAM;AACfF,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAFS,EAEP,IAFO,CAAV,CAFc,CAIJ;AACX,GALQ,EAKN,EALM,CAAT;;AAOA,MAAID,SAAJ,EAAe;AACb,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,QAAMI,KAAK,GAAGF,eAAd;AAEA,sBACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;AAED,OAAO,eAAeG,kBAAf,CAAkCC,OAAlC,EAA2C;AAChD,QAAM;AAAEC,IAAAA;AAAF,MAAaD,OAAnB;AACA,QAAM;AAAER,IAAAA;AAAF,MAAiBS,MAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYX,UAAZ;AAEA,QAAMY,QAAQ,GAAGb,eAAe,CAACC,UAAD,CAAhC;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AAEA,SAAO;AACLX,IAAAA,KAAK,EAAE;AACLG,MAAAA,eAAe,EAAEQ;AADZ,KADF;AAILC,IAAAA,UAAU,EAAE;AAJP,GAAP;AAMD;AAED,eAAeb,UAAf","sourcesContent":["// import React from \"react\";\r\n// import classes from \"./specificid.module.css\";\r\n// import Loading from \"../../components/UI/Loading\";\r\n// import EventSummary from \"../../components/feed/FeedDetails/event-summary\";\r\n// import EventLogistics from \"../../components/feed/FeedDetails/event-logistics\";\r\n// import EventContent from \"../../components/feed/FeedDetails/event-content\";\r\n// import { useState, useEffect } from \"react\";\r\n// import { Fragment } from \"react\";\r\n// import Head from \"next/head\";\r\n// const { ObjectId } = require(\"mongodb\");\r\n// import { getAllPosts } from \"../../lib/db\";\r\n// import { connectToDatabase } from \"../../lib/db\";\r\n\r\n// function specificid(props) {\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n\r\n//   const { extractedObject } = props;\r\n\r\n//   if (!extractedObject) {\r\n//     return <Loading />; // Render loading spinner if no data is available\r\n//   }\r\n//   // console.log(extractedObject);\r\n//   useEffect(() => {\r\n//     setIsLoading(true);\r\n//     setTimeout(() => {\r\n//       setIsLoading(false);\r\n//     }, 2000); // Simulate a loading time of 5 seconds\r\n//   }, []);\r\n\r\n//   if (isLoading) {\r\n//     return <Loading />;\r\n//   }\r\n//   const event = extractedObject;\r\n\r\n//   return (\r\n//     <Fragment>\r\n//       <Head>\r\n//         <title>{event.Title}</title>\r\n//         <meta name=\"description\" content={event.Description} />\r\n//       </Head>\r\n//       <EventSummary Title={event.Title} />\r\n\r\n//       <EventLogistics\r\n//         Date={event.Date}\r\n//         ReducedImg={event.ReducedImg}\r\n//         Title={event.Title}\r\n//         Type={event.Type}\r\n//         Category={event.Category}\r\n//       />\r\n\r\n//       <EventContent>\r\n//         <p>{event.Description}</p>\r\n//       </EventContent>\r\n//     </Fragment>\r\n//   );\r\n// }\r\n\r\n// export async function getServerSideProps(context) {\r\n//   const postId = context.params.specificid;\r\n//   const objectId = new ObjectId(postId); // Convert postId to ObjectId\r\n//   const client = await connectToDatabase();\r\n//   const db = client.db();\r\n\r\n//   const data = await db.collection(\"PostedItem\").find({}).toArray();\r\n\r\n//   const extractedObject = data.find((item) => item._id.equals(objectId));\r\n//   console.log(extractedObject);\r\n\r\n//   return {\r\n//     props: {\r\n//       extractedObject: JSON.parse(JSON.stringify(extractedObject)),\r\n//     },\r\n//   };\r\n// }\r\n\r\n// export default specificid;\r\n\r\n// import React from \"react\";\r\n\r\n// function specificid() {\r\n//   return <div>i am specifspecifjkicid</div>;\r\n// }\r\n\r\n// export default specificid;\r\n\r\nimport React from \"react\";\r\nimport classes from \"./specificid.module.css\";\r\nimport Loading from \"../../components/UI/Loading\";\r\nimport EventSummary from \"../../components/feed/FeedDetails/event-summary\";\r\nimport EventLogistics from \"../../components/feed/FeedDetails/event-logistics\";\r\nimport EventContent from \"../../components/feed/FeedDetails/event-content\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport Head from \"next/head\";\r\n//const { ObjectId } = require(\"mongodb\");\r\n//import { getAllPosts } from \"../../lib/db\";\r\n//import { connectToDatabase } from \"../../lib/db\";\r\nimport { getPostDataById } from \"../../lib/db\";\r\n\r\nfunction specificid(props) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { extractedObject } = props;\r\n\r\n  if (!extractedObject) {\r\n    return <Loading />; // Render loading spinner if no data is available\r\n  }\r\n  // console.log(extractedObject);\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    setTimeout(() => {\r\n      setIsLoading(false);\r\n    }, 2000); // Simulate a loading time of 5 seconds\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  }\r\n  const event = extractedObject;\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* <Head>\r\n        <title>{event.Title}</title>\r\n        <meta name=\"description\" content={event.Description} />\r\n      </Head> */}\r\n      {/* <EventSummary Title={event.Title} /> */}\r\n\r\n      {/* <EventLogistics\r\n        Date={event.Date}\r\n        ReducedImg={event.ReducedImg}\r\n        Title={event.Title}\r\n        Type={event.Type}\r\n        Category={event.Category}\r\n      />\r\n\r\n      <EventContent>\r\n        <p>{event.Description}</p>\r\n      </EventContent> */}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport async function getServerSideProps(context) {\r\n  const { params } = context;\r\n  const { specificid } = params;\r\n  console.log(specificid);\r\n\r\n  const postData = getPostDataById(specificid);\r\n  console.log(postData);\r\n\r\n  return {\r\n    props: {\r\n      extractedObject: postData,\r\n    },\r\n    revalidate: 600,\r\n  };\r\n}\r\n\r\nexport default specificid;\r\n"]},"metadata":{},"sourceType":"module"}