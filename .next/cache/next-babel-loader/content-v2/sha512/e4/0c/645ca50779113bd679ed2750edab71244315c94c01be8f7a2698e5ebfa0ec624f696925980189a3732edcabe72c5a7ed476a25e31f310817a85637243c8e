{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\FYP\\\\LostNestfyp\\\\lostnestprj\\\\components\\\\mylistings\\\\Specificpost.js\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport ErrorComp from \"../UI/ErrorComp\";\nimport SpecificGrid from \"./SpecificGrid\";\nimport Loading from \"../UI/Loading\";\n\nfunction Specificpost() {\n  const {\n    0: isData,\n    1: setIsData\n  } = useState(\"\");\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: isError,\n    1: setIsError\n  } = useState(false);\n  const {\n    0: isErrorData,\n    1: setIsErrorData\n  } = useState(\"Sorry but the page you are looking for does not exist.\");\n  const {\n    0: isPosts,\n    1: setIsPosts\n  } = useState(\"\");\n  useEffect(() => {\n    let isMounted = true; // Flag to track if the component is mounted\n\n    setIsLoading(true);\n    fetch(\"/api/myposts/fetchmypost\").then(response => response.json()).then(data => {\n      if (isMounted) {\n        //console.log(data);\n        const dataArray = Array.isArray(data) ? data : [data]; //console.log(dataArray);\n\n        if (dataArray.length === 0) {\n          setIsPosts(\"You have not Listed any Posts Yet...\");\n        }\n\n        setIsData(dataArray);\n\n        if (data.message) {\n          setIsErrorData(data.message);\n          setIsError(true);\n        }\n\n        setIsLoading(false);\n      }\n    }).catch(error => {\n      if (isMounted) {\n        setIsError(true);\n        setIsErrorData(\"An error occurred while fetching data.\");\n        setIsLoading(false);\n      }\n\n      console.error(\"Fetch error:\", error);\n    }); // Cleanup function\n\n    return () => {\n      isMounted = false; // Set flag to false when component is unmounted\n    };\n  }, []);\n\n  if (isPosts) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textTransform: \"capitalize\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: \"2rem\"\n      },\n      children: [isPosts, \"guigi\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(ErrorComp, {\n      errorData: isErrorData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SpecificGrid, {\n      data: isData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\nexport default Specificpost;","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/components/mylistings/Specificpost.js"],"names":["React","useEffect","useState","ErrorComp","SpecificGrid","Loading","Specificpost","isData","setIsData","isLoading","setIsLoading","isError","setIsError","isErrorData","setIsErrorData","isPosts","setIsPosts","isMounted","fetch","then","response","json","data","dataArray","Array","isArray","length","message","catch","error","console","textTransform","display","justifyContent","alignItems","marginTop"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ErrorComp from \"../UI/ErrorComp\";\r\nimport SpecificGrid from \"./SpecificGrid\";\r\nimport Loading from \"../UI/Loading\";\r\n\r\nfunction Specificpost() {\r\n  const [isData, setIsData] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  const [isErrorData, setIsErrorData] = useState(\r\n    \"Sorry but the page you are looking for does not exist.\"\r\n  );\r\n  const [isPosts, setIsPosts] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let isMounted = true; // Flag to track if the component is mounted\r\n\r\n    setIsLoading(true);\r\n\r\n    fetch(\"/api/myposts/fetchmypost\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (isMounted) {\r\n          //console.log(data);\r\n\r\n          const dataArray = Array.isArray(data) ? data : [data];\r\n          //console.log(dataArray);\r\n          if (dataArray.length === 0) {\r\n            setIsPosts(\"You have not Listed any Posts Yet...\");\r\n          }\r\n\r\n          setIsData(dataArray);\r\n\r\n          if (data.message) {\r\n            setIsErrorData(data.message);\r\n            setIsError(true);\r\n          }\r\n\r\n          setIsLoading(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        if (isMounted) {\r\n          setIsError(true);\r\n          setIsErrorData(\"An error occurred while fetching data.\");\r\n          setIsLoading(false);\r\n        }\r\n        console.error(\"Fetch error:\", error);\r\n      });\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      isMounted = false; // Set flag to false when component is unmounted\r\n    };\r\n  }, []);\r\n\r\n  if (isPosts) {\r\n    return (\r\n      <h1\r\n        style={{\r\n          textTransform: \"capitalize\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          marginTop: \"2rem\",\r\n        }}\r\n      >\r\n        {isPosts}guigi\r\n      </h1>\r\n    );\r\n  }\r\n\r\n  if (isError) {\r\n    return <ErrorComp errorData={isErrorData} />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <SpecificGrid data={isData} />\r\n      {isLoading && <Loading />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Specificpost;\r\n"]},"metadata":{},"sourceType":"module"}