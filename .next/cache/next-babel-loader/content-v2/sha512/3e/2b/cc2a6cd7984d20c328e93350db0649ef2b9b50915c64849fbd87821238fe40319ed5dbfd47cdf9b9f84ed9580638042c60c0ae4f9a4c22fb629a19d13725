{"ast":null,"code":"import _regeneratorRuntime from \"G:/FYP/LostNestfyp/lostnestprj/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"G:/FYP/LostNestfyp/lostnestprj/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"G:\\\\FYP\\\\LostNestfyp\\\\lostnestprj\\\\components\\\\stats\\\\ContactForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from \"react\";\nimport classes from \"./ContactForm.module.css\";\nimport Button from \"../UI/Button\";\nimport { useRef, useState } from \"react\";\nimport Loading from \"../UI/Loading\";\nimport Footer from \"../Global/Footer\";\nimport ErrorComp from \"../UI/ErrorComp\";\n\nfunction ContactForm() {\n  _s();\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var _useState2 = useState(false),\n      isError = _useState2[0],\n      setIsError = _useState2[1];\n\n  var _useState3 = useState(\"Sorry but the page you are looking for does not exist.\"),\n      isErrorData = _useState3[0],\n      setIsErrorData = _useState3[1];\n\n  var contactEmailInputRef = useRef();\n  var contactMessageInputRef = useRef();\n  var contactNameInputRef = useRef();\n\n  function sendMessage(_x, _x2, _x3) {\n    return _sendMessage.apply(this, arguments);\n  }\n\n  function _sendMessage() {\n    _sendMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(email, message, enteredName) {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"/api/contactForm/message\", {\n                method: \"POST\",\n                body: JSON.stringify({\n                  email: email,\n                  message: message,\n                  enteredName: enteredName\n                }),\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              data = _context.sent;\n\n              if (!response.ok) {\n                setIsErrorData(data.message);\n                setIsLoading(false);\n                setIsError(true);\n              }\n\n              return _context.abrupt(\"return\", data);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _sendMessage.apply(this, arguments);\n  }\n\n  function submitHandler(_x4) {\n    return _submitHandler.apply(this, arguments);\n  }\n\n  function _submitHandler() {\n    _submitHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n      var enteredEmail, enteredMessage, enteredName, result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              event.preventDefault();\n              setIsLoading(true);\n              enteredEmail = contactEmailInputRef.current.value;\n              enteredMessage = contactMessageInputRef.current.value;\n              enteredName = contactNameInputRef.current.value;\n              _context2.next = 7;\n              return sendMessage(enteredEmail, enteredMessage, enteredName);\n\n            case 7:\n              result = _context2.sent;\n              setIsLoading(false);\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _submitHandler.apply(this, arguments);\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(ErrorComp, {\n      errorData: isErrorData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.totalcontactform,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.contacttitle,\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          className: classes.sectionheading,\n          children: \"Contact Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"If there is something you want to suggest or simply want to say hello, do reach out.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.contactform,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              \"for\": \"field1\",\n              children: \"Name :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"field1\",\n              placeholder: \"Enter name\",\n              ref: contactNameInputRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              \"for\": \"field2\",\n              children: \"Email address :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"field2\",\n              placeholder: \"Enter email\",\n              ref: contactEmailInputRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              \"for\": \"description\",\n              children: \"Message :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              name: \"description\",\n              rows: \"4\",\n              cols: \"5\",\n              ref: contactMessageInputRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            content: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContactForm, \"fki2TkCY5RyM1auH5yG1wkvK5t8=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/components/stats/ContactForm.js"],"names":["React","Fragment","classes","Button","useRef","useState","Loading","Footer","ErrorComp","ContactForm","isLoading","setIsLoading","isError","setIsError","isErrorData","setIsErrorData","contactEmailInputRef","contactMessageInputRef","contactNameInputRef","sendMessage","email","message","enteredName","fetch","method","body","JSON","stringify","headers","response","json","data","ok","submitHandler","event","preventDefault","enteredEmail","current","value","enteredMessage","result","totalcontactform","contacttitle","sectionheading","contactform"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AAAA,kBACaJ,QAAQ,CAAC,KAAD,CADrB;AAAA,MACdK,SADc;AAAA,MACHC,YADG;;AAAA,mBAESN,QAAQ,CAAC,KAAD,CAFjB;AAAA,MAEdO,OAFc;AAAA,MAELC,UAFK;;AAAA,mBAGiBR,QAAQ,CAC5C,wDAD4C,CAHzB;AAAA,MAGdS,WAHc;AAAA,MAGDC,cAHC;;AAMrB,MAAMC,oBAAoB,GAAGZ,MAAM,EAAnC;AACA,MAAMa,sBAAsB,GAAGb,MAAM,EAArC;AACA,MAAMc,mBAAmB,GAAGd,MAAM,EAAlC;;AARqB,WAUNe,WAVM;AAAA;AAAA;;AAAA;AAAA,4EAUrB,iBAA2BC,KAA3B,EAAkCC,OAAlC,EAA2CC,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACyBC,KAAK,CAAC,0BAAD,EAA6B;AACvDC,gBAAAA,MAAM,EAAE,MAD+C;AAEvDC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,kBAAAA,KAAK,EAALA,KAAF;AAASC,kBAAAA,OAAO,EAAPA,OAAT;AAAkBC,kBAAAA,WAAW,EAAXA;AAAlB,iBAAf,CAFiD;AAGvDM,gBAAAA,OAAO,EAAE;AACP,kCAAgB;AADT;AAH8C,eAA7B,CAD9B;;AAAA;AACQC,cAAAA,QADR;AAAA;AAAA,qBASqBA,QAAQ,CAACC,IAAT,EATrB;;AAAA;AASQC,cAAAA,IATR;;AAWE,kBAAI,CAACF,QAAQ,CAACG,EAAd,EAAkB;AAChBjB,gBAAAA,cAAc,CAACgB,IAAI,CAACV,OAAN,CAAd;AACAV,gBAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,gBAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AAfH,+CAiBSkB,IAjBT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAVqB;AAAA;AAAA;;AAAA,WA8BNE,aA9BM;AAAA;AAAA;;AAAA;AAAA,8EA8BrB,kBAA6BC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AACEA,cAAAA,KAAK,CAACC,cAAN;AACAxB,cAAAA,YAAY,CAAC,IAAD,CAAZ;AAEMyB,cAAAA,YAJR,GAIuBpB,oBAAoB,CAACqB,OAArB,CAA6BC,KAJpD;AAKQC,cAAAA,cALR,GAKyBtB,sBAAsB,CAACoB,OAAvB,CAA+BC,KALxD;AAMQhB,cAAAA,WANR,GAMsBJ,mBAAmB,CAACmB,OAApB,CAA4BC,KANlD;AAAA;AAAA,qBAQuBnB,WAAW,CAACiB,YAAD,EAAeG,cAAf,EAA+BjB,WAA/B,CARlC;;AAAA;AAQQkB,cAAAA,MARR;AASE7B,cAAAA,YAAY,CAAC,KAAD,CAAZ;;AATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA9BqB;AAAA;AAAA;;AA0CrB,MAAID,SAAJ,EAAe;AACb,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIE,OAAJ,EAAa;AACX,wBAAO,QAAC,SAAD;AAAW,MAAA,SAAS,EAAEE;AAAtB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,QAAD;AAAA,4BACE;AAAS,MAAA,SAAS,EAAEZ,OAAO,CAACuC,gBAA5B;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEvC,OAAO,CAACwC,YAAxB;AAAA,gCACE;AAAI,UAAA,SAAS,EAAExC,OAAO,CAACyC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAK,QAAA,SAAS,EAAEzC,OAAO,CAAC0C,WAAxB;AAAA,+BACE;AAAM,UAAA,QAAQ,EAAEX,aAAhB;AAAA,kCACE;AAAA,oCACE;AAAO,qBAAI,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,IAAI,EAAC,QAFP;AAGE,cAAA,WAAW,EAAC,YAHd;AAIE,cAAA,GAAG,EAAEf,mBAJP;AAKE,cAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,oBAFF,eASE;AAAO,qBAAI,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF,eAUE;AACE,cAAA,IAAI,EAAC,OADP;AAEE,cAAA,IAAI,EAAC,QAFP;AAGE,cAAA,WAAW,EAAC,aAHd;AAIE,cAAA,GAAG,EAAEF,oBAJP;AAKE,cAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,oBAVF,eAkBE;AAAO,qBAAI,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAlBF,eAmBE;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,IAAI,EAAC,aAFP;AAGE,cAAA,IAAI,EAAC,GAHP;AAIE,cAAA,IAAI,EAAC,GAJP;AAKE,cAAA,GAAG,EAAEC,sBALP;AAME,cAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,oBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eA6BE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,kBA7BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA6CE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YA7CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiDD;;GAnGQR,W;;KAAAA,W;AAqGT,eAAeA,WAAf","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport classes from \"./ContactForm.module.css\";\r\nimport Button from \"../UI/Button\";\r\nimport { useRef, useState } from \"react\";\r\nimport Loading from \"../UI/Loading\";\r\nimport Footer from \"../Global/Footer\";\r\nimport ErrorComp from \"../UI/ErrorComp\";\r\n\r\nfunction ContactForm() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  const [isErrorData, setIsErrorData] = useState(\r\n    \"Sorry but the page you are looking for does not exist.\"\r\n  );\r\n  const contactEmailInputRef = useRef();\r\n  const contactMessageInputRef = useRef();\r\n  const contactNameInputRef = useRef();\r\n\r\n  async function sendMessage(email, message, enteredName) {\r\n    const response = await fetch(\"/api/contactForm/message\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ email, message, enteredName }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      setIsErrorData(data.message);\r\n      setIsLoading(false);\r\n      setIsError(true);\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  async function submitHandler(event) {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    const enteredEmail = contactEmailInputRef.current.value;\r\n    const enteredMessage = contactMessageInputRef.current.value;\r\n    const enteredName = contactNameInputRef.current.value;\r\n\r\n    const result = await sendMessage(enteredEmail, enteredMessage, enteredName);\r\n    setIsLoading(false);\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  if (isError) {\r\n    return <ErrorComp errorData={isErrorData} />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <section className={classes.totalcontactform}>\r\n        <div className={classes.contacttitle}>\r\n          <h6 className={classes.sectionheading}>Contact Form</h6>\r\n\r\n          <p>\r\n            If there is something you want to suggest or simply want to say\r\n            hello, do reach out.\r\n          </p>\r\n        </div>\r\n\r\n        <div className={classes.contactform}>\r\n          <form onSubmit={submitHandler}>\r\n            <div>\r\n              <label for=\"field1\">Name :</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"field1\"\r\n                placeholder=\"Enter name\"\r\n                ref={contactNameInputRef}\r\n                required\r\n              ></input>\r\n              <label for=\"field2\">Email address :</label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"field2\"\r\n                placeholder=\"Enter email\"\r\n                ref={contactEmailInputRef}\r\n                required\r\n              />\r\n\r\n              <label for=\"description\">Message :</label>\r\n              <textarea\r\n                type=\"text\"\r\n                name=\"description\"\r\n                rows=\"4\"\r\n                cols=\"5\"\r\n                ref={contactMessageInputRef}\r\n                required\r\n              ></textarea>\r\n            </div>\r\n            <Button content=\"Submit\"></Button>\r\n          </form>\r\n        </div>\r\n      </section>\r\n      <Footer />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n"]},"metadata":{},"sourceType":"module"}