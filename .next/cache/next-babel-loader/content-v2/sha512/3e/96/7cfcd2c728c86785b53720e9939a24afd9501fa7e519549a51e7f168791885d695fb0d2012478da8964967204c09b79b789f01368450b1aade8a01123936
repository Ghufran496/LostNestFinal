{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\FYP\\\\LostNestfyp\\\\lostnestprj\\\\components\\\\MyResponse\\\\ResponseItem.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import React, { useState } from \"react\";\n// import classes from \"./ResponseItem.module.css\";\n// const ResponseItem = (props) => {\n//   const {\n//     _id,\n//     enteredContact,\n//     ItemTitle,\n//     PostID,\n//     PosterID,\n//     Question,\n//     ValidatorDateTime,\n//     Answer,\n//   } = props.data;\n//   const [isDivVisible, setIsDivVisible] = useState(false);\n//   const handleButtonClick = () => {\n//     setIsDivVisible(!isDivVisible);\n//   };\n//   return (\n//     <li\n//       style={{\n//         fontSize: \"1.5rem\",\n//         border: \"1px solid #311465\",\n//         padding: \"2rem 8rem 2rem 2rem\",\n//         textTransform: \"capitalize\",\n//         boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\n//         fontWeight: \"400\",\n//         borderRadius: \"2.5rem\",\n//         position: \"relative\", // Necessary for positioning the hidden div\n//       }}\n//     >\n//       <h3>\n//         Item ID: <span className={classes.spaner}>{PostID}</span>\n//       </h3>\n//       <h3>\n//         Item Name: <span className={classes.spaner}>{ItemTitle}</span>\n//       </h3>\n//       <h3>\n//         Question: <span className={classes.spaner}>{Question}</span>\n//       </h3>\n//       <h3>\n//         Your Answer: <span className={classes.spaner}>{Answer}</span>\n//       </h3>\n//       <h3>\n//         Time: <span className={classes.spaner}>{ValidatorDateTime}</span>\n//       </h3>\n//       <button className={classes.btn} onClick={handleButtonClick}>\n//         Show Response\n//       </button>\n//       {isDivVisible && <div>i am visible</div>}\n//     </li>\n//   );\n// };\n// export default ResponseItem;\nimport React, { useState } from \"react\";\nimport classes from \"./ResponseItem.module.css\";\n\nconst ResponseItem = props => {\n  const {\n    _id,\n    enteredContact,\n    ItemTitle,\n    PostID,\n    PosterID,\n    Question,\n    ValidatorDateTime,\n    Answer\n  } = props.data; // Use an object to store visibility state for each item\n\n  const {\n    0: itemVisibilities,\n    1: setItemVisibilities\n  } = useState({});\n\n  const handleButtonClick = () => {\n    // Toggle visibility for the current item\n    setItemVisibilities(prevVisibilities => _objectSpread(_objectSpread({}, prevVisibilities), {}, {\n      [_id]: !prevVisibilities[_id]\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    style: {\n      fontSize: \"1.5rem\",\n      border: \"1px solid #311465\",\n      padding: \"2rem 8rem 2rem 2rem\",\n      textTransform: \"capitalize\",\n      boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\n      fontWeight: \"400\",\n      borderRadius: \"2.5rem\",\n      position: \"relative\" // Necessary for positioning the hidden div\n\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Item ID: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.spaner,\n        children: PostID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Item Name: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.spaner,\n        children: ItemTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Question: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.spaner,\n        children: Question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Your Answer: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.spaner,\n        children: Answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Time: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.spaner,\n        children: ValidatorDateTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.btn,\n      onClick: handleButtonClick,\n      children: \"Show Response\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), itemVisibilities[_id] && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"i am visible\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ResponseItem;","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/components/MyResponse/ResponseItem.js"],"names":["React","useState","classes","ResponseItem","props","_id","enteredContact","ItemTitle","PostID","PosterID","Question","ValidatorDateTime","Answer","data","itemVisibilities","setItemVisibilities","handleButtonClick","prevVisibilities","fontSize","border","padding","textTransform","boxShadow","fontWeight","borderRadius","position","spaner","btn"],"mappings":";;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,2BAApB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAM;AACJC,IAAAA,GADI;AAEJC,IAAAA,cAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,MAJI;AAKJC,IAAAA,QALI;AAMJC,IAAAA,QANI;AAOJC,IAAAA,iBAPI;AAQJC,IAAAA;AARI,MASFR,KAAK,CAACS,IATV,CAD8B,CAY9B;;AACA,QAAM;AAAA,OAACC,gBAAD;AAAA,OAAmBC;AAAnB,MAA0Cd,QAAQ,CAAC,EAAD,CAAxD;;AAEA,QAAMe,iBAAiB,GAAG,MAAM;AAC9B;AACAD,IAAAA,mBAAmB,CAAEE,gBAAD,oCACfA,gBADe;AAElB,OAACZ,GAAD,GAAO,CAACY,gBAAgB,CAACZ,GAAD;AAFN,MAAD,CAAnB;AAID,GAND;;AAQA,sBACE;AACE,IAAA,KAAK,EAAE;AACLa,MAAAA,QAAQ,EAAE,QADL;AAELC,MAAAA,MAAM,EAAE,mBAFH;AAGLC,MAAAA,OAAO,EAAE,qBAHJ;AAILC,MAAAA,aAAa,EAAE,YAJV;AAKLC,MAAAA,SAAS,EAAE,8BALN;AAMLC,MAAAA,UAAU,EAAE,KANP;AAOLC,MAAAA,YAAY,EAAE,QAPT;AAQLC,MAAAA,QAAQ,EAAE,UARL,CAQiB;;AARjB,KADT;AAAA,4BAYE;AAAA,2CACW;AAAM,QAAA,SAAS,EAAEvB,OAAO,CAACwB,MAAzB;AAAA,kBAAkClB;AAAlC;AAAA;AAAA;AAAA;AAAA,cADX;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAeE;AAAA,6CACa;AAAM,QAAA,SAAS,EAAEN,OAAO,CAACwB,MAAzB;AAAA,kBAAkCnB;AAAlC;AAAA;AAAA;AAAA;AAAA,cADb;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,eAkBE;AAAA,4CACY;AAAM,QAAA,SAAS,EAAEL,OAAO,CAACwB,MAAzB;AAAA,kBAAkChB;AAAlC;AAAA;AAAA;AAAA;AAAA,cADZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF,eAqBE;AAAA,+CACe;AAAM,QAAA,SAAS,EAAER,OAAO,CAACwB,MAAzB;AAAA,kBAAkCd;AAAlC;AAAA;AAAA;AAAA;AAAA,cADf;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF,eAwBE;AAAA,wCACQ;AAAM,QAAA,SAAS,EAAEV,OAAO,CAACwB,MAAzB;AAAA,kBAAkCf;AAAlC;AAAA;AAAA;AAAA;AAAA,cADR;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBF,eA4BE;AAAQ,MAAA,SAAS,EAAET,OAAO,CAACyB,GAA3B;AAAgC,MAAA,OAAO,EAAEX,iBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA5BF,EA+BGF,gBAAgB,CAACT,GAAD,CAAhB,iBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA/B5B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CA1DD;;AA4DA,eAAeF,YAAf","sourcesContent":["// import React, { useState } from \"react\";\r\n// import classes from \"./ResponseItem.module.css\";\r\n\r\n// const ResponseItem = (props) => {\r\n//   const {\r\n//     _id,\r\n//     enteredContact,\r\n//     ItemTitle,\r\n//     PostID,\r\n//     PosterID,\r\n//     Question,\r\n//     ValidatorDateTime,\r\n//     Answer,\r\n//   } = props.data;\r\n//   const [isDivVisible, setIsDivVisible] = useState(false);\r\n\r\n//   const handleButtonClick = () => {\r\n//     setIsDivVisible(!isDivVisible);\r\n//   };\r\n//   return (\r\n//     <li\r\n//       style={{\r\n//         fontSize: \"1.5rem\",\r\n//         border: \"1px solid #311465\",\r\n//         padding: \"2rem 8rem 2rem 2rem\",\r\n//         textTransform: \"capitalize\",\r\n//         boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\r\n//         fontWeight: \"400\",\r\n//         borderRadius: \"2.5rem\",\r\n//         position: \"relative\", // Necessary for positioning the hidden div\r\n//       }}\r\n//     >\r\n//       <h3>\r\n//         Item ID: <span className={classes.spaner}>{PostID}</span>\r\n//       </h3>\r\n//       <h3>\r\n//         Item Name: <span className={classes.spaner}>{ItemTitle}</span>\r\n//       </h3>\r\n//       <h3>\r\n//         Question: <span className={classes.spaner}>{Question}</span>\r\n//       </h3>\r\n//       <h3>\r\n//         Your Answer: <span className={classes.spaner}>{Answer}</span>\r\n//       </h3>\r\n//       <h3>\r\n//         Time: <span className={classes.spaner}>{ValidatorDateTime}</span>\r\n//       </h3>\r\n\r\n//       <button className={classes.btn} onClick={handleButtonClick}>\r\n//         Show Response\r\n//       </button>\r\n//       {isDivVisible && <div>i am visible</div>}\r\n//     </li>\r\n//   );\r\n// };\r\n\r\n// export default ResponseItem;\r\n\r\nimport React, { useState } from \"react\";\r\nimport classes from \"./ResponseItem.module.css\";\r\n\r\nconst ResponseItem = (props) => {\r\n  const {\r\n    _id,\r\n    enteredContact,\r\n    ItemTitle,\r\n    PostID,\r\n    PosterID,\r\n    Question,\r\n    ValidatorDateTime,\r\n    Answer,\r\n  } = props.data;\r\n\r\n  // Use an object to store visibility state for each item\r\n  const [itemVisibilities, setItemVisibilities] = useState({});\r\n\r\n  const handleButtonClick = () => {\r\n    // Toggle visibility for the current item\r\n    setItemVisibilities((prevVisibilities) => ({\r\n      ...prevVisibilities,\r\n      [_id]: !prevVisibilities[_id],\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <li\r\n      style={{\r\n        fontSize: \"1.5rem\",\r\n        border: \"1px solid #311465\",\r\n        padding: \"2rem 8rem 2rem 2rem\",\r\n        textTransform: \"capitalize\",\r\n        boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\r\n        fontWeight: \"400\",\r\n        borderRadius: \"2.5rem\",\r\n        position: \"relative\", // Necessary for positioning the hidden div\r\n      }}\r\n    >\r\n      <h3>\r\n        Item ID: <span className={classes.spaner}>{PostID}</span>\r\n      </h3>\r\n      <h3>\r\n        Item Name: <span className={classes.spaner}>{ItemTitle}</span>\r\n      </h3>\r\n      <h3>\r\n        Question: <span className={classes.spaner}>{Question}</span>\r\n      </h3>\r\n      <h3>\r\n        Your Answer: <span className={classes.spaner}>{Answer}</span>\r\n      </h3>\r\n      <h3>\r\n        Time: <span className={classes.spaner}>{ValidatorDateTime}</span>\r\n      </h3>\r\n\r\n      <button className={classes.btn} onClick={handleButtonClick}>\r\n        Show Response\r\n      </button>\r\n      {itemVisibilities[_id] && <div>i am visible</div>}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ResponseItem;\r\n"]},"metadata":{},"sourceType":"module"}