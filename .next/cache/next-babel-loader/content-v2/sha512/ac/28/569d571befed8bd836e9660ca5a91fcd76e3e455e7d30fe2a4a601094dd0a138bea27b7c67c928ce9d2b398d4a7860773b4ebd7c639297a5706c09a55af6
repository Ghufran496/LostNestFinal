{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\FYP\\\\LostNestfyp\\\\lostnestprj\\\\pages\\\\dashboard\\\\[itemid].js\";\nimport React, { useEffect } from \"react\"; //import { getPostsById, getAllPosts } from \"../../components/helpers/api-util\";\n\nimport { connectToDatabase } from \"../../lib/db\";\n\nfunction ItemDetailPage(props) {\n  const event = props.post; //console.log(event);\n  // console.log(event.Title);\n  // console.log(event[0].Title);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"I am details page \", event.Type]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n}\n\nexport async function getServerSideProps(context) {\n  const postId = context.params.itemid; //console.log(\"Id: \", postId);\n\n  const client = await connectToDatabase();\n  const db = client.db();\n  const data = await db.collection(\"PostedItem\").find({}).toArray();\n  console.log(data[0]._id.toString());\n  const extractedObject = data.find(item => item[0]._id.toString() === postId);\n  console.log(extractedObject); // //console.log(extractedObject);\n  // if (!extractedObject) {\n  //   return {\n  //     notFound: true,\n  //   };\n  // }\n  // delete post._id;\n\n  return {\n    props: {\n      extractedObject\n    }\n  };\n} // export async function getStaticPaths() {\n//   const events = await getAllPosts();\n//   const paths = events.map((event) => ({ params: { eventId: event.id } }));\n//   return {\n//     paths: paths,\n//     fallback: \"blocking\",\n//   };\n// }\n\nexport default ItemDetailPage;","map":{"version":3,"sources":["G:/FYP/LostNestfyp/lostnestprj/pages/dashboard/[itemid].js"],"names":["React","useEffect","connectToDatabase","ItemDetailPage","props","event","post","Type","getServerSideProps","context","postId","params","itemid","client","db","data","collection","find","toArray","console","log","_id","toString","extractedObject","item"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,iBAAT,QAAkC,cAAlC;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,QAAMC,KAAK,GAAGD,KAAK,CAACE,IAApB,CAD6B,CAG7B;AACA;AACA;;AACA,sBAAO;AAAA,qCAAwBD,KAAK,CAACE,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,OAAO,eAAeC,kBAAf,CAAkCC,OAAlC,EAA2C;AAChD,QAAMC,MAAM,GAAGD,OAAO,CAACE,MAAR,CAAeC,MAA9B,CADgD,CAEhD;;AAEA,QAAMC,MAAM,GAAG,MAAMX,iBAAiB,EAAtC;AACA,QAAMY,EAAE,GAAGD,MAAM,CAACC,EAAP,EAAX;AAEA,QAAMC,IAAI,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,YAAd,EAA4BC,IAA5B,CAAiC,EAAjC,EAAqCC,OAArC,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAAC,CAAD,CAAJ,CAAQM,GAAR,CAAYC,QAAZ,EAAZ;AAEA,QAAMC,eAAe,GAAGR,IAAI,CAACE,IAAL,CACrBO,IAAD,IAAUA,IAAI,CAAC,CAAD,CAAJ,CAAQH,GAAR,CAAYC,QAAZ,OAA2BZ,MADf,CAAxB;AAGAS,EAAAA,OAAO,CAACC,GAAR,CAAYG,eAAZ,EAdgD,CAgBhD;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,SAAO;AACLnB,IAAAA,KAAK,EAAE;AACLmB,MAAAA;AADK;AADF,GAAP;AAKD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAepB,cAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\n//import { getPostsById, getAllPosts } from \"../../components/helpers/api-util\";\r\nimport { connectToDatabase } from \"../../lib/db\";\r\n\r\nfunction ItemDetailPage(props) {\r\n  const event = props.post;\r\n\r\n  //console.log(event);\r\n  // console.log(event.Title);\r\n  // console.log(event[0].Title);\r\n  return <div>I am details page {event.Type}</div>;\r\n}\r\n\r\nexport async function getServerSideProps(context) {\r\n  const postId = context.params.itemid;\r\n  //console.log(\"Id: \", postId);\r\n\r\n  const client = await connectToDatabase();\r\n  const db = client.db();\r\n\r\n  const data = await db.collection(\"PostedItem\").find({}).toArray();\r\n\r\n  console.log(data[0]._id.toString());\r\n\r\n  const extractedObject = data.find(\r\n    (item) => item[0]._id.toString() === postId\r\n  );\r\n  console.log(extractedObject);\r\n\r\n  // //console.log(extractedObject);\r\n  // if (!extractedObject) {\r\n  //   return {\r\n  //     notFound: true,\r\n  //   };\r\n  // }\r\n\r\n  // delete post._id;\r\n\r\n  return {\r\n    props: {\r\n      extractedObject,\r\n    },\r\n  };\r\n}\r\n\r\n// export async function getStaticPaths() {\r\n//   const events = await getAllPosts();\r\n//   const paths = events.map((event) => ({ params: { eventId: event.id } }));\r\n//   return {\r\n//     paths: paths,\r\n//     fallback: \"blocking\",\r\n//   };\r\n// }\r\nexport default ItemDetailPage;\r\n"]},"metadata":{},"sourceType":"module"}